#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.4927
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="mGIPcoanew")]
public partial class mGIPcoanewDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCuDTGeneric(CuDTGeneric instance);
  partial void UpdateCuDTGeneric(CuDTGeneric instance);
  partial void DeleteCuDTGeneric(CuDTGeneric instance);
  partial void InsertCrop(Crop instance);
  partial void UpdateCrop(Crop instance);
  partial void DeleteCrop(Crop instance);
  partial void InsertFish(Fish instance);
  partial void UpdateFish(Fish instance);
  partial void DeleteFish(Fish instance);
  partial void InsertKnowledgeJigsaw(KnowledgeJigsaw instance);
  partial void UpdateKnowledgeJigsaw(KnowledgeJigsaw instance);
  partial void DeleteKnowledgeJigsaw(KnowledgeJigsaw instance);
  partial void InsertCuDTx7(CuDTx7 instance);
  partial void UpdateCuDTx7(CuDTx7 instance);
  partial void DeleteCuDTx7(CuDTx7 instance);
  partial void InsertCodeMain(CodeMain instance);
  partial void UpdateCodeMain(CodeMain instance);
  partial void DeleteCodeMain(CodeMain instance);
  partial void InsertCatTreeNode(CatTreeNode instance);
  partial void UpdateCatTreeNode(CatTreeNode instance);
  partial void DeleteCatTreeNode(CatTreeNode instance);
  partial void InsertCatTreeRoot(CatTreeRoot instance);
  partial void UpdateCatTreeRoot(CatTreeRoot instance);
  partial void DeleteCatTreeRoot(CatTreeRoot instance);
  partial void InsertCtUnit(CtUnit instance);
  partial void UpdateCtUnit(CtUnit instance);
  partial void DeleteCtUnit(CtUnit instance);
  partial void InsertInfoUser(InfoUser instance);
  partial void UpdateInfoUser(InfoUser instance);
  partial void DeleteInfoUser(InfoUser instance);
  partial void InsertDept(Dept instance);
  partial void UpdateDept(Dept instance);
  partial void DeleteDept(Dept instance);
  partial void InsertKnowledgeForum(KnowledgeForum instance);
  partial void UpdateKnowledgeForum(KnowledgeForum instance);
  partial void DeleteKnowledgeForum(KnowledgeForum instance);
  #endregion
	
	public mGIPcoanewDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["mGIPcoanewConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public mGIPcoanewDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public mGIPcoanewDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public mGIPcoanewDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public mGIPcoanewDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<CuDTGeneric> CuDTGeneric
	{
		get
		{
			return this.GetTable<CuDTGeneric>();
		}
	}
	
	public System.Data.Linq.Table<Crop> Crop
	{
		get
		{
			return this.GetTable<Crop>();
		}
	}
	
	public System.Data.Linq.Table<Fish> Fish
	{
		get
		{
			return this.GetTable<Fish>();
		}
	}
	
	public System.Data.Linq.Table<KnowledgeJigsaw> KnowledgeJigsaw
	{
		get
		{
			return this.GetTable<KnowledgeJigsaw>();
		}
	}
	
	public System.Data.Linq.Table<CuDTx7> CuDTx7
	{
		get
		{
			return this.GetTable<CuDTx7>();
		}
	}
	
	public System.Data.Linq.Table<CodeMain> CodeMain
	{
		get
		{
			return this.GetTable<CodeMain>();
		}
	}
	
	public System.Data.Linq.Table<CatTreeNode> CatTreeNode
	{
		get
		{
			return this.GetTable<CatTreeNode>();
		}
	}
	
	public System.Data.Linq.Table<CatTreeRoot> CatTreeRoot
	{
		get
		{
			return this.GetTable<CatTreeRoot>();
		}
	}
	
	public System.Data.Linq.Table<CtUnit> CtUnit
	{
		get
		{
			return this.GetTable<CtUnit>();
		}
	}
	
	public System.Data.Linq.Table<InfoUser> InfoUser
	{
		get
		{
			return this.GetTable<InfoUser>();
		}
	}
	
	public System.Data.Linq.Table<Dept> Dept
	{
		get
		{
			return this.GetTable<Dept>();
		}
	}
	
	public System.Data.Linq.Table<MemberGradeShare> MemberGradeShare
	{
		get
		{
			return this.GetTable<MemberGradeShare>();
		}
	}
	
	public System.Data.Linq.Table<Member> Member
	{
		get
		{
			return this.GetTable<Member>();
		}
	}
	
	public System.Data.Linq.Table<KnowledgeForum> KnowledgeForum
	{
		get
		{
			return this.GetTable<KnowledgeForum>();
		}
	}
}

[Table(Name="dbo.CuDTGeneric")]
public partial class CuDTGeneric : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _iCUItem;
	
	private int _iBaseDSD;
	
	private System.Nullable<int> _iCTUnit;
	
	private char _fCTUPublic;
	
	private System.Nullable<System.DateTime> _avBegin;
	
	private System.Nullable<System.DateTime> _avEnd;
	
	private string _sTitle;
	
	private string _iEditor;
	
	private System.DateTime _dEditDate;
	
	private string _iDept;
	
	private string _topCat;
	
	private string _vGroup;
	
	private string _xKeyword;
	
	private int _xImportant;
	
	private string _xURL;
	
	private char _xNewWindow;
	
	private System.DateTime _xPostDate;
	
	private System.Nullable<System.DateTime> _xPostDateEnd;
	
	private System.DateTime _Created_Date;
	
	private string _Abstract;
	
	private System.Nullable<char> _showType;
	
	private string _fileDownLoad;
	
	private System.Nullable<int> _refID;
	
	private string _xImgFile;
	
	private char _RSS;
	
	private string _KMcat;
	
	private string _KMcatID;
	
	private string _KMautoID;
	
	private string _xabstract;
	
	private System.Nullable<char> _siteId;
	
	private System.Nullable<int> _ClickCount;
	
	private System.Nullable<int> _HaveBuildIndex;
	
	private string _xBody;
	
	private string _NewtopCat;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniCUItemChanging(int value);
    partial void OniCUItemChanged();
    partial void OniBaseDSDChanging(int value);
    partial void OniBaseDSDChanged();
    partial void OniCTUnitChanging(System.Nullable<int> value);
    partial void OniCTUnitChanged();
    partial void OnfCTUPublicChanging(char value);
    partial void OnfCTUPublicChanged();
    partial void OnavBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnavBeginChanged();
    partial void OnavEndChanging(System.Nullable<System.DateTime> value);
    partial void OnavEndChanged();
    partial void OnsTitleChanging(string value);
    partial void OnsTitleChanged();
    partial void OniEditorChanging(string value);
    partial void OniEditorChanged();
    partial void OndEditDateChanging(System.DateTime value);
    partial void OndEditDateChanged();
    partial void OniDeptChanging(string value);
    partial void OniDeptChanged();
    partial void OntopCatChanging(string value);
    partial void OntopCatChanged();
    partial void OnvGroupChanging(string value);
    partial void OnvGroupChanged();
    partial void OnxKeywordChanging(string value);
    partial void OnxKeywordChanged();
    partial void OnxImportantChanging(int value);
    partial void OnxImportantChanged();
    partial void OnxURLChanging(string value);
    partial void OnxURLChanged();
    partial void OnxNewWindowChanging(char value);
    partial void OnxNewWindowChanged();
    partial void OnxPostDateChanging(System.DateTime value);
    partial void OnxPostDateChanged();
    partial void OnxPostDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnxPostDateEndChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnAbstractChanging(string value);
    partial void OnAbstractChanged();
    partial void OnshowTypeChanging(System.Nullable<char> value);
    partial void OnshowTypeChanged();
    partial void OnfileDownLoadChanging(string value);
    partial void OnfileDownLoadChanged();
    partial void OnrefIDChanging(System.Nullable<int> value);
    partial void OnrefIDChanged();
    partial void OnxImgFileChanging(string value);
    partial void OnxImgFileChanged();
    partial void OnRSSChanging(char value);
    partial void OnRSSChanged();
    partial void OnKMcatChanging(string value);
    partial void OnKMcatChanged();
    partial void OnKMcatIDChanging(string value);
    partial void OnKMcatIDChanged();
    partial void OnKMautoIDChanging(string value);
    partial void OnKMautoIDChanged();
    partial void OnxabstractChanging(string value);
    partial void OnxabstractChanged();
    partial void OnsiteIdChanging(System.Nullable<char> value);
    partial void OnsiteIdChanged();
    partial void OnClickCountChanging(System.Nullable<int> value);
    partial void OnClickCountChanged();
    partial void OnHaveBuildIndexChanging(System.Nullable<int> value);
    partial void OnHaveBuildIndexChanged();
    partial void OnxBodyChanging(string value);
    partial void OnxBodyChanged();
    partial void OnNewtopCatChanging(string value);
    partial void OnNewtopCatChanged();
    #endregion
	
	public CuDTGeneric()
	{
		OnCreated();
	}
	
	[Column(Storage="_iCUItem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int iCUItem
	{
		get
		{
			return this._iCUItem;
		}
		set
		{
			if ((this._iCUItem != value))
			{
				this.OniCUItemChanging(value);
				this.SendPropertyChanging();
				this._iCUItem = value;
				this.SendPropertyChanged("iCUItem");
				this.OniCUItemChanged();
			}
		}
	}
	
	[Column(Storage="_iBaseDSD", DbType="Int NOT NULL")]
	public int iBaseDSD
	{
		get
		{
			return this._iBaseDSD;
		}
		set
		{
			if ((this._iBaseDSD != value))
			{
				this.OniBaseDSDChanging(value);
				this.SendPropertyChanging();
				this._iBaseDSD = value;
				this.SendPropertyChanged("iBaseDSD");
				this.OniBaseDSDChanged();
			}
		}
	}
	
	[Column(Storage="_iCTUnit", DbType="Int")]
	public System.Nullable<int> iCTUnit
	{
		get
		{
			return this._iCTUnit;
		}
		set
		{
			if ((this._iCTUnit != value))
			{
				this.OniCTUnitChanging(value);
				this.SendPropertyChanging();
				this._iCTUnit = value;
				this.SendPropertyChanged("iCTUnit");
				this.OniCTUnitChanged();
			}
		}
	}
	
	[Column(Storage="_fCTUPublic", DbType="Char(1) NOT NULL")]
	public char fCTUPublic
	{
		get
		{
			return this._fCTUPublic;
		}
		set
		{
			if ((this._fCTUPublic != value))
			{
				this.OnfCTUPublicChanging(value);
				this.SendPropertyChanging();
				this._fCTUPublic = value;
				this.SendPropertyChanged("fCTUPublic");
				this.OnfCTUPublicChanged();
			}
		}
	}
	
	[Column(Storage="_avBegin", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> avBegin
	{
		get
		{
			return this._avBegin;
		}
		set
		{
			if ((this._avBegin != value))
			{
				this.OnavBeginChanging(value);
				this.SendPropertyChanging();
				this._avBegin = value;
				this.SendPropertyChanged("avBegin");
				this.OnavBeginChanged();
			}
		}
	}
	
	[Column(Storage="_avEnd", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> avEnd
	{
		get
		{
			return this._avEnd;
		}
		set
		{
			if ((this._avEnd != value))
			{
				this.OnavEndChanging(value);
				this.SendPropertyChanging();
				this._avEnd = value;
				this.SendPropertyChanged("avEnd");
				this.OnavEndChanged();
			}
		}
	}
	
	[Column(Storage="_sTitle", DbType="NVarChar(1000)")]
	public string sTitle
	{
		get
		{
			return this._sTitle;
		}
		set
		{
			if ((this._sTitle != value))
			{
				this.OnsTitleChanging(value);
				this.SendPropertyChanging();
				this._sTitle = value;
				this.SendPropertyChanged("sTitle");
				this.OnsTitleChanged();
			}
		}
	}
	
	[Column(Storage="_iEditor", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string iEditor
	{
		get
		{
			return this._iEditor;
		}
		set
		{
			if ((this._iEditor != value))
			{
				this.OniEditorChanging(value);
				this.SendPropertyChanging();
				this._iEditor = value;
				this.SendPropertyChanged("iEditor");
				this.OniEditorChanged();
			}
		}
	}
	
	[Column(Storage="_dEditDate", DbType="SmallDateTime NOT NULL")]
	public System.DateTime dEditDate
	{
		get
		{
			return this._dEditDate;
		}
		set
		{
			if ((this._dEditDate != value))
			{
				this.OndEditDateChanging(value);
				this.SendPropertyChanging();
				this._dEditDate = value;
				this.SendPropertyChanged("dEditDate");
				this.OndEditDateChanged();
			}
		}
	}
	
	[Column(Storage="_iDept", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string iDept
	{
		get
		{
			return this._iDept;
		}
		set
		{
			if ((this._iDept != value))
			{
				this.OniDeptChanging(value);
				this.SendPropertyChanging();
				this._iDept = value;
				this.SendPropertyChanged("iDept");
				this.OniDeptChanged();
			}
		}
	}
	
	[Column(Storage="_topCat", DbType="VarChar(2)")]
	public string topCat
	{
		get
		{
			return this._topCat;
		}
		set
		{
			if ((this._topCat != value))
			{
				this.OntopCatChanging(value);
				this.SendPropertyChanging();
				this._topCat = value;
				this.SendPropertyChanged("topCat");
				this.OntopCatChanged();
			}
		}
	}
	
	[Column(Storage="_vGroup", DbType="VarChar(20)")]
	public string vGroup
	{
		get
		{
			return this._vGroup;
		}
		set
		{
			if ((this._vGroup != value))
			{
				this.OnvGroupChanging(value);
				this.SendPropertyChanging();
				this._vGroup = value;
				this.SendPropertyChanged("vGroup");
				this.OnvGroupChanged();
			}
		}
	}
	
	[Column(Storage="_xKeyword", DbType="NVarChar(1000)")]
	public string xKeyword
	{
		get
		{
			return this._xKeyword;
		}
		set
		{
			if ((this._xKeyword != value))
			{
				this.OnxKeywordChanging(value);
				this.SendPropertyChanging();
				this._xKeyword = value;
				this.SendPropertyChanged("xKeyword");
				this.OnxKeywordChanged();
			}
		}
	}
	
	[Column(Storage="_xImportant", DbType="Int NOT NULL")]
	public int xImportant
	{
		get
		{
			return this._xImportant;
		}
		set
		{
			if ((this._xImportant != value))
			{
				this.OnxImportantChanging(value);
				this.SendPropertyChanging();
				this._xImportant = value;
				this.SendPropertyChanged("xImportant");
				this.OnxImportantChanged();
			}
		}
	}
	
	[Column(Storage="_xURL", DbType="VarChar(200)")]
	public string xURL
	{
		get
		{
			return this._xURL;
		}
		set
		{
			if ((this._xURL != value))
			{
				this.OnxURLChanging(value);
				this.SendPropertyChanging();
				this._xURL = value;
				this.SendPropertyChanged("xURL");
				this.OnxURLChanged();
			}
		}
	}
	
	[Column(Storage="_xNewWindow", DbType="Char(1) NOT NULL")]
	public char xNewWindow
	{
		get
		{
			return this._xNewWindow;
		}
		set
		{
			if ((this._xNewWindow != value))
			{
				this.OnxNewWindowChanging(value);
				this.SendPropertyChanging();
				this._xNewWindow = value;
				this.SendPropertyChanged("xNewWindow");
				this.OnxNewWindowChanged();
			}
		}
	}
	
	[Column(Storage="_xPostDate", DbType="SmallDateTime NOT NULL")]
	public System.DateTime xPostDate
	{
		get
		{
			return this._xPostDate;
		}
		set
		{
			if ((this._xPostDate != value))
			{
				this.OnxPostDateChanging(value);
				this.SendPropertyChanging();
				this._xPostDate = value;
				this.SendPropertyChanged("xPostDate");
				this.OnxPostDateChanged();
			}
		}
	}
	
	[Column(Storage="_xPostDateEnd", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> xPostDateEnd
	{
		get
		{
			return this._xPostDateEnd;
		}
		set
		{
			if ((this._xPostDateEnd != value))
			{
				this.OnxPostDateEndChanging(value);
				this.SendPropertyChanging();
				this._xPostDateEnd = value;
				this.SendPropertyChanged("xPostDateEnd");
				this.OnxPostDateEndChanged();
			}
		}
	}
	
	[Column(Storage="_Created_Date", DbType="SmallDateTime NOT NULL")]
	public System.DateTime Created_Date
	{
		get
		{
			return this._Created_Date;
		}
		set
		{
			if ((this._Created_Date != value))
			{
				this.OnCreated_DateChanging(value);
				this.SendPropertyChanging();
				this._Created_Date = value;
				this.SendPropertyChanged("Created_Date");
				this.OnCreated_DateChanged();
			}
		}
	}
	
	[Column(Storage="_Abstract", DbType="NVarChar(1000)")]
	public string Abstract
	{
		get
		{
			return this._Abstract;
		}
		set
		{
			if ((this._Abstract != value))
			{
				this.OnAbstractChanging(value);
				this.SendPropertyChanging();
				this._Abstract = value;
				this.SendPropertyChanged("Abstract");
				this.OnAbstractChanged();
			}
		}
	}
	
	[Column(Storage="_showType", DbType="Char(1)")]
	public System.Nullable<char> showType
	{
		get
		{
			return this._showType;
		}
		set
		{
			if ((this._showType != value))
			{
				this.OnshowTypeChanging(value);
				this.SendPropertyChanging();
				this._showType = value;
				this.SendPropertyChanged("showType");
				this.OnshowTypeChanged();
			}
		}
	}
	
	[Column(Storage="_fileDownLoad", DbType="VarChar(100)")]
	public string fileDownLoad
	{
		get
		{
			return this._fileDownLoad;
		}
		set
		{
			if ((this._fileDownLoad != value))
			{
				this.OnfileDownLoadChanging(value);
				this.SendPropertyChanging();
				this._fileDownLoad = value;
				this.SendPropertyChanged("fileDownLoad");
				this.OnfileDownLoadChanged();
			}
		}
	}
	
	[Column(Storage="_refID", DbType="Int")]
	public System.Nullable<int> refID
	{
		get
		{
			return this._refID;
		}
		set
		{
			if ((this._refID != value))
			{
				this.OnrefIDChanging(value);
				this.SendPropertyChanging();
				this._refID = value;
				this.SendPropertyChanged("refID");
				this.OnrefIDChanged();
			}
		}
	}
	
	[Column(Storage="_xImgFile", DbType="VarChar(50)")]
	public string xImgFile
	{
		get
		{
			return this._xImgFile;
		}
		set
		{
			if ((this._xImgFile != value))
			{
				this.OnxImgFileChanging(value);
				this.SendPropertyChanging();
				this._xImgFile = value;
				this.SendPropertyChanged("xImgFile");
				this.OnxImgFileChanged();
			}
		}
	}
	
	[Column(Storage="_RSS", DbType="Char(1) NOT NULL")]
	public char RSS
	{
		get
		{
			return this._RSS;
		}
		set
		{
			if ((this._RSS != value))
			{
				this.OnRSSChanging(value);
				this.SendPropertyChanging();
				this._RSS = value;
				this.SendPropertyChanged("RSS");
				this.OnRSSChanged();
			}
		}
	}
	
	[Column(Storage="_KMcat", DbType="VarChar(200)")]
	public string KMcat
	{
		get
		{
			return this._KMcat;
		}
		set
		{
			if ((this._KMcat != value))
			{
				this.OnKMcatChanging(value);
				this.SendPropertyChanging();
				this._KMcat = value;
				this.SendPropertyChanged("KMcat");
				this.OnKMcatChanged();
			}
		}
	}
	
	[Column(Storage="_KMcatID", DbType="VarChar(200)")]
	public string KMcatID
	{
		get
		{
			return this._KMcatID;
		}
		set
		{
			if ((this._KMcatID != value))
			{
				this.OnKMcatIDChanging(value);
				this.SendPropertyChanging();
				this._KMcatID = value;
				this.SendPropertyChanged("KMcatID");
				this.OnKMcatIDChanged();
			}
		}
	}
	
	[Column(Storage="_KMautoID", DbType="VarChar(200)")]
	public string KMautoID
	{
		get
		{
			return this._KMautoID;
		}
		set
		{
			if ((this._KMautoID != value))
			{
				this.OnKMautoIDChanging(value);
				this.SendPropertyChanging();
				this._KMautoID = value;
				this.SendPropertyChanged("KMautoID");
				this.OnKMautoIDChanged();
			}
		}
	}
	
	[Column(Storage="_xabstract", DbType="NVarChar(1000)")]
	public string xabstract
	{
		get
		{
			return this._xabstract;
		}
		set
		{
			if ((this._xabstract != value))
			{
				this.OnxabstractChanging(value);
				this.SendPropertyChanging();
				this._xabstract = value;
				this.SendPropertyChanged("xabstract");
				this.OnxabstractChanged();
			}
		}
	}
	
	[Column(Storage="_siteId", DbType="Char(1)")]
	public System.Nullable<char> siteId
	{
		get
		{
			return this._siteId;
		}
		set
		{
			if ((this._siteId != value))
			{
				this.OnsiteIdChanging(value);
				this.SendPropertyChanging();
				this._siteId = value;
				this.SendPropertyChanged("siteId");
				this.OnsiteIdChanged();
			}
		}
	}
	
	[Column(Storage="_ClickCount", DbType="Int")]
	public System.Nullable<int> ClickCount
	{
		get
		{
			return this._ClickCount;
		}
		set
		{
			if ((this._ClickCount != value))
			{
				this.OnClickCountChanging(value);
				this.SendPropertyChanging();
				this._ClickCount = value;
				this.SendPropertyChanged("ClickCount");
				this.OnClickCountChanged();
			}
		}
	}
	
	[Column(Storage="_HaveBuildIndex", DbType="Int")]
	public System.Nullable<int> HaveBuildIndex
	{
		get
		{
			return this._HaveBuildIndex;
		}
		set
		{
			if ((this._HaveBuildIndex != value))
			{
				this.OnHaveBuildIndexChanging(value);
				this.SendPropertyChanging();
				this._HaveBuildIndex = value;
				this.SendPropertyChanged("HaveBuildIndex");
				this.OnHaveBuildIndexChanged();
			}
		}
	}
	
	[Column(Storage="_xBody", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string xBody
	{
		get
		{
			return this._xBody;
		}
		set
		{
			if ((this._xBody != value))
			{
				this.OnxBodyChanging(value);
				this.SendPropertyChanging();
				this._xBody = value;
				this.SendPropertyChanged("xBody");
				this.OnxBodyChanged();
			}
		}
	}
	
	[Column(Storage="_NewtopCat", DbType="VarChar(2)")]
	public string NewtopCat
	{
		get
		{
			return this._NewtopCat;
		}
		set
		{
			if ((this._NewtopCat != value))
			{
				this.OnNewtopCatChanging(value);
				this.SendPropertyChanging();
				this._NewtopCat = value;
				this.SendPropertyChanged("NewtopCat");
				this.OnNewtopCatChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.Crop")]
public partial class Crop : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private int _iCUItem;
	
	private string _alias;
	
	private System.Nullable<byte> _type;
	
	private string _description;
	
	private string _season;
	
	private string _origin;
	
	private string _feature;
	
	private string _nutritionValue;
	
	private string _selectionMethod;
	
	private string _nutrient;
	
	private string _cuisine;
	
	private string _variety;
	
	private string _note;
	
	private string _tips;
	
	private System.Nullable<int> _sortOrderSpring;
	
	private System.Nullable<int> _sortOrderSummer;
	
	private System.Nullable<int> _sortOrderAutumn;
	
	private System.Nullable<int> _sortOrderWinter;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OniCUItemChanging(int value);
    partial void OniCUItemChanged();
    partial void OnaliasChanging(string value);
    partial void OnaliasChanged();
    partial void OntypeChanging(System.Nullable<byte> value);
    partial void OntypeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnseasonChanging(string value);
    partial void OnseasonChanged();
    partial void OnoriginChanging(string value);
    partial void OnoriginChanged();
    partial void OnfeatureChanging(string value);
    partial void OnfeatureChanged();
    partial void OnnutritionValueChanging(string value);
    partial void OnnutritionValueChanged();
    partial void OnselectionMethodChanging(string value);
    partial void OnselectionMethodChanged();
    partial void OnnutrientChanging(string value);
    partial void OnnutrientChanged();
    partial void OncuisineChanging(string value);
    partial void OncuisineChanged();
    partial void OnvarietyChanging(string value);
    partial void OnvarietyChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OntipsChanging(string value);
    partial void OntipsChanged();
    partial void OnsortOrderSpringChanging(System.Nullable<int> value);
    partial void OnsortOrderSpringChanged();
    partial void OnsortOrderSummerChanging(System.Nullable<int> value);
    partial void OnsortOrderSummerChanged();
    partial void OnsortOrderAutumnChanging(System.Nullable<int> value);
    partial void OnsortOrderAutumnChanged();
    partial void OnsortOrderWinterChanging(System.Nullable<int> value);
    partial void OnsortOrderWinterChanged();
    #endregion
	
	public Crop()
	{
		OnCreated();
	}
	
	[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[Column(Storage="_iCUItem", DbType="Int NOT NULL")]
	public int iCUItem
	{
		get
		{
			return this._iCUItem;
		}
		set
		{
			if ((this._iCUItem != value))
			{
				this.OniCUItemChanging(value);
				this.SendPropertyChanging();
				this._iCUItem = value;
				this.SendPropertyChanged("iCUItem");
				this.OniCUItemChanged();
			}
		}
	}
	
	[Column(Storage="_alias", DbType="NVarChar(255)")]
	public string alias
	{
		get
		{
			return this._alias;
		}
		set
		{
			if ((this._alias != value))
			{
				this.OnaliasChanging(value);
				this.SendPropertyChanging();
				this._alias = value;
				this.SendPropertyChanged("alias");
				this.OnaliasChanged();
			}
		}
	}
	
	[Column(Storage="_type", DbType="TinyInt")]
	public System.Nullable<byte> type
	{
		get
		{
			return this._type;
		}
		set
		{
			if ((this._type != value))
			{
				this.OntypeChanging(value);
				this.SendPropertyChanging();
				this._type = value;
				this.SendPropertyChanged("type");
				this.OntypeChanged();
			}
		}
	}
	
	[Column(Storage="_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string description
	{
		get
		{
			return this._description;
		}
		set
		{
			if ((this._description != value))
			{
				this.OndescriptionChanging(value);
				this.SendPropertyChanging();
				this._description = value;
				this.SendPropertyChanged("description");
				this.OndescriptionChanged();
			}
		}
	}
	
	[Column(Storage="_season", DbType="NVarChar(255)")]
	public string season
	{
		get
		{
			return this._season;
		}
		set
		{
			if ((this._season != value))
			{
				this.OnseasonChanging(value);
				this.SendPropertyChanging();
				this._season = value;
				this.SendPropertyChanged("season");
				this.OnseasonChanged();
			}
		}
	}
	
	[Column(Storage="_origin", DbType="NVarChar(1024)")]
	public string origin
	{
		get
		{
			return this._origin;
		}
		set
		{
			if ((this._origin != value))
			{
				this.OnoriginChanging(value);
				this.SendPropertyChanging();
				this._origin = value;
				this.SendPropertyChanged("origin");
				this.OnoriginChanged();
			}
		}
	}
	
	[Column(Storage="_feature", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string feature
	{
		get
		{
			return this._feature;
		}
		set
		{
			if ((this._feature != value))
			{
				this.OnfeatureChanging(value);
				this.SendPropertyChanging();
				this._feature = value;
				this.SendPropertyChanged("feature");
				this.OnfeatureChanged();
			}
		}
	}
	
	[Column(Storage="_nutritionValue", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string nutritionValue
	{
		get
		{
			return this._nutritionValue;
		}
		set
		{
			if ((this._nutritionValue != value))
			{
				this.OnnutritionValueChanging(value);
				this.SendPropertyChanging();
				this._nutritionValue = value;
				this.SendPropertyChanged("nutritionValue");
				this.OnnutritionValueChanged();
			}
		}
	}
	
	[Column(Storage="_selectionMethod", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string selectionMethod
	{
		get
		{
			return this._selectionMethod;
		}
		set
		{
			if ((this._selectionMethod != value))
			{
				this.OnselectionMethodChanging(value);
				this.SendPropertyChanging();
				this._selectionMethod = value;
				this.SendPropertyChanged("selectionMethod");
				this.OnselectionMethodChanged();
			}
		}
	}
	
	[Column(Storage="_nutrient", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string nutrient
	{
		get
		{
			return this._nutrient;
		}
		set
		{
			if ((this._nutrient != value))
			{
				this.OnnutrientChanging(value);
				this.SendPropertyChanging();
				this._nutrient = value;
				this.SendPropertyChanged("nutrient");
				this.OnnutrientChanged();
			}
		}
	}
	
	[Column(Storage="_cuisine", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string cuisine
	{
		get
		{
			return this._cuisine;
		}
		set
		{
			if ((this._cuisine != value))
			{
				this.OncuisineChanging(value);
				this.SendPropertyChanging();
				this._cuisine = value;
				this.SendPropertyChanged("cuisine");
				this.OncuisineChanged();
			}
		}
	}
	
	[Column(Storage="_variety", DbType="NVarChar(255)")]
	public string variety
	{
		get
		{
			return this._variety;
		}
		set
		{
			if ((this._variety != value))
			{
				this.OnvarietyChanging(value);
				this.SendPropertyChanging();
				this._variety = value;
				this.SendPropertyChanged("variety");
				this.OnvarietyChanged();
			}
		}
	}
	
	[Column(Storage="_note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string note
	{
		get
		{
			return this._note;
		}
		set
		{
			if ((this._note != value))
			{
				this.OnnoteChanging(value);
				this.SendPropertyChanging();
				this._note = value;
				this.SendPropertyChanged("note");
				this.OnnoteChanged();
			}
		}
	}
	
	[Column(Storage="_tips", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string tips
	{
		get
		{
			return this._tips;
		}
		set
		{
			if ((this._tips != value))
			{
				this.OntipsChanging(value);
				this.SendPropertyChanging();
				this._tips = value;
				this.SendPropertyChanged("tips");
				this.OntipsChanged();
			}
		}
	}
	
	[Column(Storage="_sortOrderSpring", DbType="Int")]
	public System.Nullable<int> sortOrderSpring
	{
		get
		{
			return this._sortOrderSpring;
		}
		set
		{
			if ((this._sortOrderSpring != value))
			{
				this.OnsortOrderSpringChanging(value);
				this.SendPropertyChanging();
				this._sortOrderSpring = value;
				this.SendPropertyChanged("sortOrderSpring");
				this.OnsortOrderSpringChanged();
			}
		}
	}
	
	[Column(Storage="_sortOrderSummer", DbType="Int")]
	public System.Nullable<int> sortOrderSummer
	{
		get
		{
			return this._sortOrderSummer;
		}
		set
		{
			if ((this._sortOrderSummer != value))
			{
				this.OnsortOrderSummerChanging(value);
				this.SendPropertyChanging();
				this._sortOrderSummer = value;
				this.SendPropertyChanged("sortOrderSummer");
				this.OnsortOrderSummerChanged();
			}
		}
	}
	
	[Column(Storage="_sortOrderAutumn", DbType="Int")]
	public System.Nullable<int> sortOrderAutumn
	{
		get
		{
			return this._sortOrderAutumn;
		}
		set
		{
			if ((this._sortOrderAutumn != value))
			{
				this.OnsortOrderAutumnChanging(value);
				this.SendPropertyChanging();
				this._sortOrderAutumn = value;
				this.SendPropertyChanged("sortOrderAutumn");
				this.OnsortOrderAutumnChanged();
			}
		}
	}
	
	[Column(Storage="_sortOrderWinter", DbType="Int")]
	public System.Nullable<int> sortOrderWinter
	{
		get
		{
			return this._sortOrderWinter;
		}
		set
		{
			if ((this._sortOrderWinter != value))
			{
				this.OnsortOrderWinterChanging(value);
				this.SendPropertyChanging();
				this._sortOrderWinter = value;
				this.SendPropertyChanged("sortOrderWinter");
				this.OnsortOrderWinterChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.Fish")]
public partial class Fish : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private int _iCUItem;
	
	private string _season;
	
	private string _origin;
	
	private string _family;
	
	private string _scientificName;
	
	private string _commonName;
	
	private string _distributionInTaiwan;
	
	private string _habitats;
	
	private string _reference;
	
	private string _characteristic;
	
	private string _habitatsType;
	
	private string _distribution;
	
	private string _utility;
	
	private System.Nullable<int> _sortOrderSpring;
	
	private System.Nullable<int> _sortOrderSummer;
	
	private System.Nullable<int> _sortOrderAutumn;
	
	private System.Nullable<int> _sortOrderWinter;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OniCUItemChanging(int value);
    partial void OniCUItemChanged();
    partial void OnseasonChanging(string value);
    partial void OnseasonChanged();
    partial void OnoriginChanging(string value);
    partial void OnoriginChanged();
    partial void OnfamilyChanging(string value);
    partial void OnfamilyChanged();
    partial void OnscientificNameChanging(string value);
    partial void OnscientificNameChanged();
    partial void OncommonNameChanging(string value);
    partial void OncommonNameChanged();
    partial void OndistributionInTaiwanChanging(string value);
    partial void OndistributionInTaiwanChanged();
    partial void OnhabitatsChanging(string value);
    partial void OnhabitatsChanged();
    partial void OnreferenceChanging(string value);
    partial void OnreferenceChanged();
    partial void OncharacteristicChanging(string value);
    partial void OncharacteristicChanged();
    partial void OnhabitatsTypeChanging(string value);
    partial void OnhabitatsTypeChanged();
    partial void OndistributionChanging(string value);
    partial void OndistributionChanged();
    partial void OnutilityChanging(string value);
    partial void OnutilityChanged();
    partial void OnsortOrderSpringChanging(System.Nullable<int> value);
    partial void OnsortOrderSpringChanged();
    partial void OnsortOrderSummerChanging(System.Nullable<int> value);
    partial void OnsortOrderSummerChanged();
    partial void OnsortOrderAutumnChanging(System.Nullable<int> value);
    partial void OnsortOrderAutumnChanged();
    partial void OnsortOrderWinterChanging(System.Nullable<int> value);
    partial void OnsortOrderWinterChanged();
    #endregion
	
	public Fish()
	{
		OnCreated();
	}
	
	[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[Column(Storage="_iCUItem", DbType="Int NOT NULL")]
	public int iCUItem
	{
		get
		{
			return this._iCUItem;
		}
		set
		{
			if ((this._iCUItem != value))
			{
				this.OniCUItemChanging(value);
				this.SendPropertyChanging();
				this._iCUItem = value;
				this.SendPropertyChanged("iCUItem");
				this.OniCUItemChanged();
			}
		}
	}
	
	[Column(Storage="_season", DbType="NVarChar(255)")]
	public string season
	{
		get
		{
			return this._season;
		}
		set
		{
			if ((this._season != value))
			{
				this.OnseasonChanging(value);
				this.SendPropertyChanging();
				this._season = value;
				this.SendPropertyChanged("season");
				this.OnseasonChanged();
			}
		}
	}
	
	[Column(Storage="_origin", DbType="NVarChar(1024)")]
	public string origin
	{
		get
		{
			return this._origin;
		}
		set
		{
			if ((this._origin != value))
			{
				this.OnoriginChanging(value);
				this.SendPropertyChanging();
				this._origin = value;
				this.SendPropertyChanged("origin");
				this.OnoriginChanged();
			}
		}
	}
	
	[Column(Storage="_family", DbType="NVarChar(255)")]
	public string family
	{
		get
		{
			return this._family;
		}
		set
		{
			if ((this._family != value))
			{
				this.OnfamilyChanging(value);
				this.SendPropertyChanging();
				this._family = value;
				this.SendPropertyChanged("family");
				this.OnfamilyChanged();
			}
		}
	}
	
	[Column(Storage="_scientificName", DbType="NVarChar(255)")]
	public string scientificName
	{
		get
		{
			return this._scientificName;
		}
		set
		{
			if ((this._scientificName != value))
			{
				this.OnscientificNameChanging(value);
				this.SendPropertyChanging();
				this._scientificName = value;
				this.SendPropertyChanged("scientificName");
				this.OnscientificNameChanged();
			}
		}
	}
	
	[Column(Storage="_commonName", DbType="NVarChar(255)")]
	public string commonName
	{
		get
		{
			return this._commonName;
		}
		set
		{
			if ((this._commonName != value))
			{
				this.OncommonNameChanging(value);
				this.SendPropertyChanging();
				this._commonName = value;
				this.SendPropertyChanged("commonName");
				this.OncommonNameChanged();
			}
		}
	}
	
	[Column(Storage="_distributionInTaiwan", DbType="NVarChar(255)")]
	public string distributionInTaiwan
	{
		get
		{
			return this._distributionInTaiwan;
		}
		set
		{
			if ((this._distributionInTaiwan != value))
			{
				this.OndistributionInTaiwanChanging(value);
				this.SendPropertyChanging();
				this._distributionInTaiwan = value;
				this.SendPropertyChanged("distributionInTaiwan");
				this.OndistributionInTaiwanChanged();
			}
		}
	}
	
	[Column(Storage="_habitats", DbType="NVarChar(255)")]
	public string habitats
	{
		get
		{
			return this._habitats;
		}
		set
		{
			if ((this._habitats != value))
			{
				this.OnhabitatsChanging(value);
				this.SendPropertyChanging();
				this._habitats = value;
				this.SendPropertyChanged("habitats");
				this.OnhabitatsChanged();
			}
		}
	}
	
	[Column(Storage="_reference", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string reference
	{
		get
		{
			return this._reference;
		}
		set
		{
			if ((this._reference != value))
			{
				this.OnreferenceChanging(value);
				this.SendPropertyChanging();
				this._reference = value;
				this.SendPropertyChanged("reference");
				this.OnreferenceChanged();
			}
		}
	}
	
	[Column(Storage="_characteristic", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string characteristic
	{
		get
		{
			return this._characteristic;
		}
		set
		{
			if ((this._characteristic != value))
			{
				this.OncharacteristicChanging(value);
				this.SendPropertyChanging();
				this._characteristic = value;
				this.SendPropertyChanged("characteristic");
				this.OncharacteristicChanged();
			}
		}
	}
	
	[Column(Storage="_habitatsType", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string habitatsType
	{
		get
		{
			return this._habitatsType;
		}
		set
		{
			if ((this._habitatsType != value))
			{
				this.OnhabitatsTypeChanging(value);
				this.SendPropertyChanging();
				this._habitatsType = value;
				this.SendPropertyChanged("habitatsType");
				this.OnhabitatsTypeChanged();
			}
		}
	}
	
	[Column(Storage="_distribution", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string distribution
	{
		get
		{
			return this._distribution;
		}
		set
		{
			if ((this._distribution != value))
			{
				this.OndistributionChanging(value);
				this.SendPropertyChanging();
				this._distribution = value;
				this.SendPropertyChanged("distribution");
				this.OndistributionChanged();
			}
		}
	}
	
	[Column(Storage="_utility", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string utility
	{
		get
		{
			return this._utility;
		}
		set
		{
			if ((this._utility != value))
			{
				this.OnutilityChanging(value);
				this.SendPropertyChanging();
				this._utility = value;
				this.SendPropertyChanged("utility");
				this.OnutilityChanged();
			}
		}
	}
	
	[Column(Storage="_sortOrderSpring", DbType="Int")]
	public System.Nullable<int> sortOrderSpring
	{
		get
		{
			return this._sortOrderSpring;
		}
		set
		{
			if ((this._sortOrderSpring != value))
			{
				this.OnsortOrderSpringChanging(value);
				this.SendPropertyChanging();
				this._sortOrderSpring = value;
				this.SendPropertyChanged("sortOrderSpring");
				this.OnsortOrderSpringChanged();
			}
		}
	}
	
	[Column(Storage="_sortOrderSummer", DbType="Int")]
	public System.Nullable<int> sortOrderSummer
	{
		get
		{
			return this._sortOrderSummer;
		}
		set
		{
			if ((this._sortOrderSummer != value))
			{
				this.OnsortOrderSummerChanging(value);
				this.SendPropertyChanging();
				this._sortOrderSummer = value;
				this.SendPropertyChanged("sortOrderSummer");
				this.OnsortOrderSummerChanged();
			}
		}
	}
	
	[Column(Storage="_sortOrderAutumn", DbType="Int")]
	public System.Nullable<int> sortOrderAutumn
	{
		get
		{
			return this._sortOrderAutumn;
		}
		set
		{
			if ((this._sortOrderAutumn != value))
			{
				this.OnsortOrderAutumnChanging(value);
				this.SendPropertyChanging();
				this._sortOrderAutumn = value;
				this.SendPropertyChanged("sortOrderAutumn");
				this.OnsortOrderAutumnChanged();
			}
		}
	}
	
	[Column(Storage="_sortOrderWinter", DbType="Int")]
	public System.Nullable<int> sortOrderWinter
	{
		get
		{
			return this._sortOrderWinter;
		}
		set
		{
			if ((this._sortOrderWinter != value))
			{
				this.OnsortOrderWinterChanging(value);
				this.SendPropertyChanging();
				this._sortOrderWinter = value;
				this.SendPropertyChanged("sortOrderWinter");
				this.OnsortOrderWinterChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.KnowledgeJigsaw")]
public partial class KnowledgeJigsaw : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _gicuitem;
	
	private System.Nullable<int> _orderSiteUnit;
	
	private System.Nullable<int> _orderSubject;
	
	private System.Nullable<int> _orderKnowledgeTank;
	
	private System.Nullable<int> _orderKnowledgeHome;
	
	private System.Nullable<int> _orderArticle;
	
	private System.Nullable<int> _CtRootId;
	
	private string _CtUnitId;
	
	private int _parentIcuitem;
	
	private System.Nullable<int> _ArticleId;
	
	private System.Nullable<char> _Status;
	
	private string _path;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngicuitemChanging(int value);
    partial void OngicuitemChanged();
    partial void OnorderSiteUnitChanging(System.Nullable<int> value);
    partial void OnorderSiteUnitChanged();
    partial void OnorderSubjectChanging(System.Nullable<int> value);
    partial void OnorderSubjectChanged();
    partial void OnorderKnowledgeTankChanging(System.Nullable<int> value);
    partial void OnorderKnowledgeTankChanged();
    partial void OnorderKnowledgeHomeChanging(System.Nullable<int> value);
    partial void OnorderKnowledgeHomeChanged();
    partial void OnorderArticleChanging(System.Nullable<int> value);
    partial void OnorderArticleChanged();
    partial void OnCtRootIdChanging(System.Nullable<int> value);
    partial void OnCtRootIdChanged();
    partial void OnCtUnitIdChanging(string value);
    partial void OnCtUnitIdChanged();
    partial void OnparentIcuitemChanging(int value);
    partial void OnparentIcuitemChanged();
    partial void OnArticleIdChanging(System.Nullable<int> value);
    partial void OnArticleIdChanged();
    partial void OnStatusChanging(System.Nullable<char> value);
    partial void OnStatusChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    #endregion
	
	public KnowledgeJigsaw()
	{
		OnCreated();
	}
	
	[Column(Storage="_gicuitem", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int gicuitem
	{
		get
		{
			return this._gicuitem;
		}
		set
		{
			if ((this._gicuitem != value))
			{
				this.OngicuitemChanging(value);
				this.SendPropertyChanging();
				this._gicuitem = value;
				this.SendPropertyChanged("gicuitem");
				this.OngicuitemChanged();
			}
		}
	}
	
	[Column(Storage="_orderSiteUnit", DbType="Int")]
	public System.Nullable<int> orderSiteUnit
	{
		get
		{
			return this._orderSiteUnit;
		}
		set
		{
			if ((this._orderSiteUnit != value))
			{
				this.OnorderSiteUnitChanging(value);
				this.SendPropertyChanging();
				this._orderSiteUnit = value;
				this.SendPropertyChanged("orderSiteUnit");
				this.OnorderSiteUnitChanged();
			}
		}
	}
	
	[Column(Storage="_orderSubject", DbType="Int")]
	public System.Nullable<int> orderSubject
	{
		get
		{
			return this._orderSubject;
		}
		set
		{
			if ((this._orderSubject != value))
			{
				this.OnorderSubjectChanging(value);
				this.SendPropertyChanging();
				this._orderSubject = value;
				this.SendPropertyChanged("orderSubject");
				this.OnorderSubjectChanged();
			}
		}
	}
	
	[Column(Storage="_orderKnowledgeTank", DbType="Int")]
	public System.Nullable<int> orderKnowledgeTank
	{
		get
		{
			return this._orderKnowledgeTank;
		}
		set
		{
			if ((this._orderKnowledgeTank != value))
			{
				this.OnorderKnowledgeTankChanging(value);
				this.SendPropertyChanging();
				this._orderKnowledgeTank = value;
				this.SendPropertyChanged("orderKnowledgeTank");
				this.OnorderKnowledgeTankChanged();
			}
		}
	}
	
	[Column(Storage="_orderKnowledgeHome", DbType="Int")]
	public System.Nullable<int> orderKnowledgeHome
	{
		get
		{
			return this._orderKnowledgeHome;
		}
		set
		{
			if ((this._orderKnowledgeHome != value))
			{
				this.OnorderKnowledgeHomeChanging(value);
				this.SendPropertyChanging();
				this._orderKnowledgeHome = value;
				this.SendPropertyChanged("orderKnowledgeHome");
				this.OnorderKnowledgeHomeChanged();
			}
		}
	}
	
	[Column(Storage="_orderArticle", DbType="Int")]
	public System.Nullable<int> orderArticle
	{
		get
		{
			return this._orderArticle;
		}
		set
		{
			if ((this._orderArticle != value))
			{
				this.OnorderArticleChanging(value);
				this.SendPropertyChanging();
				this._orderArticle = value;
				this.SendPropertyChanged("orderArticle");
				this.OnorderArticleChanged();
			}
		}
	}
	
	[Column(Storage="_CtRootId", DbType="Int")]
	public System.Nullable<int> CtRootId
	{
		get
		{
			return this._CtRootId;
		}
		set
		{
			if ((this._CtRootId != value))
			{
				this.OnCtRootIdChanging(value);
				this.SendPropertyChanging();
				this._CtRootId = value;
				this.SendPropertyChanged("CtRootId");
				this.OnCtRootIdChanged();
			}
		}
	}
	
	[Column(Storage="_CtUnitId", DbType="VarChar(10)")]
	public string CtUnitId
	{
		get
		{
			return this._CtUnitId;
		}
		set
		{
			if ((this._CtUnitId != value))
			{
				this.OnCtUnitIdChanging(value);
				this.SendPropertyChanging();
				this._CtUnitId = value;
				this.SendPropertyChanged("CtUnitId");
				this.OnCtUnitIdChanged();
			}
		}
	}
	
	[Column(Storage="_parentIcuitem", DbType="Int NOT NULL")]
	public int parentIcuitem
	{
		get
		{
			return this._parentIcuitem;
		}
		set
		{
			if ((this._parentIcuitem != value))
			{
				this.OnparentIcuitemChanging(value);
				this.SendPropertyChanging();
				this._parentIcuitem = value;
				this.SendPropertyChanged("parentIcuitem");
				this.OnparentIcuitemChanged();
			}
		}
	}
	
	[Column(Storage="_ArticleId", DbType="Int")]
	public System.Nullable<int> ArticleId
	{
		get
		{
			return this._ArticleId;
		}
		set
		{
			if ((this._ArticleId != value))
			{
				this.OnArticleIdChanging(value);
				this.SendPropertyChanging();
				this._ArticleId = value;
				this.SendPropertyChanged("ArticleId");
				this.OnArticleIdChanged();
			}
		}
	}
	
	[Column(Storage="_Status", DbType="Char(1)")]
	public System.Nullable<char> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[Column(Storage="_path", DbType="VarChar(200)")]
	public string path
	{
		get
		{
			return this._path;
		}
		set
		{
			if ((this._path != value))
			{
				this.OnpathChanging(value);
				this.SendPropertyChanging();
				this._path = value;
				this.SendPropertyChanged("path");
				this.OnpathChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.CuDTx7")]
public partial class CuDTx7 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _giCuItem;
	
	private string _CuDTx7F8;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngiCuItemChanging(int value);
    partial void OngiCuItemChanged();
    partial void OnCuDTx7F8Changing(string value);
    partial void OnCuDTx7F8Changed();
    #endregion
	
	public CuDTx7()
	{
		OnCreated();
	}
	
	[Column(Storage="_giCuItem", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int giCuItem
	{
		get
		{
			return this._giCuItem;
		}
		set
		{
			if ((this._giCuItem != value))
			{
				this.OngiCuItemChanging(value);
				this.SendPropertyChanging();
				this._giCuItem = value;
				this.SendPropertyChanged("giCuItem");
				this.OngiCuItemChanged();
			}
		}
	}
	
	[Column(Storage="_CuDTx7F8", DbType="VarChar(7000)")]
	public string CuDTx7F8
	{
		get
		{
			return this._CuDTx7F8;
		}
		set
		{
			if ((this._CuDTx7F8 != value))
			{
				this.OnCuDTx7F8Changing(value);
				this.SendPropertyChanging();
				this._CuDTx7F8 = value;
				this.SendPropertyChanged("CuDTx7F8");
				this.OnCuDTx7F8Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.CodeMain")]
public partial class CodeMain : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _codeMetaID;
	
	private string _mCode;
	
	private string _mValue;
	
	private string _mSortValue;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodeMetaIDChanging(string value);
    partial void OncodeMetaIDChanged();
    partial void OnmCodeChanging(string value);
    partial void OnmCodeChanged();
    partial void OnmValueChanging(string value);
    partial void OnmValueChanged();
    partial void OnmSortValueChanging(string value);
    partial void OnmSortValueChanged();
    #endregion
	
	public CodeMain()
	{
		OnCreated();
	}
	
	[Column(Storage="_codeMetaID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string codeMetaID
	{
		get
		{
			return this._codeMetaID;
		}
		set
		{
			if ((this._codeMetaID != value))
			{
				this.OncodeMetaIDChanging(value);
				this.SendPropertyChanging();
				this._codeMetaID = value;
				this.SendPropertyChanged("codeMetaID");
				this.OncodeMetaIDChanged();
			}
		}
	}
	
	[Column(Storage="_mCode", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string mCode
	{
		get
		{
			return this._mCode;
		}
		set
		{
			if ((this._mCode != value))
			{
				this.OnmCodeChanging(value);
				this.SendPropertyChanging();
				this._mCode = value;
				this.SendPropertyChanged("mCode");
				this.OnmCodeChanged();
			}
		}
	}
	
	[Column(Storage="_mValue", DbType="VarChar(50)")]
	public string mValue
	{
		get
		{
			return this._mValue;
		}
		set
		{
			if ((this._mValue != value))
			{
				this.OnmValueChanging(value);
				this.SendPropertyChanging();
				this._mValue = value;
				this.SendPropertyChanged("mValue");
				this.OnmValueChanged();
			}
		}
	}
	
	[Column(Storage="_mSortValue", DbType="VarChar(6)")]
	public string mSortValue
	{
		get
		{
			return this._mSortValue;
		}
		set
		{
			if ((this._mSortValue != value))
			{
				this.OnmSortValueChanging(value);
				this.SendPropertyChanging();
				this._mSortValue = value;
				this.SendPropertyChanged("mSortValue");
				this.OnmSortValueChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.CatTreeNode")]
public partial class CatTreeNode : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CtRootID;
	
	private char _CtNodeKind;
	
	private int _CtNodeID;
	
	private string _CatName;
	
	private string _CtNameLogo;
	
	private System.Nullable<byte> _CatShowOrder;
	
	private byte _DataLevel;
	
	private System.Nullable<int> _DataParent;
	
	private int _ChildCount;
	
	private int _DataCount;
	
	private System.Nullable<int> _CtUnitID;
	
	private char _inUse;
	
	private System.DateTime _EditDate;
	
	private string _EditUserID;
	
	private string _dCondition;
	
	private string _xslList;
	
	private string _xslData;
	
	private System.Nullable<char> _CtNodeNPKind;
	
	private string _RSS;
	
	private string _KMcat;
	
	private string _KMcatID;
	
	private string _KMautoID;
	
	private string _SubjectID;
	
	private System.Nullable<char> _KMTreeYN;
	
	private string _RSSURLID;
	
	private System.Nullable<char> _RSSNodeType;
	
	private string _SubjectMonth;
	
	private string _CatNameMemo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCtRootIDChanging(int value);
    partial void OnCtRootIDChanged();
    partial void OnCtNodeKindChanging(char value);
    partial void OnCtNodeKindChanged();
    partial void OnCtNodeIDChanging(int value);
    partial void OnCtNodeIDChanged();
    partial void OnCatNameChanging(string value);
    partial void OnCatNameChanged();
    partial void OnCtNameLogoChanging(string value);
    partial void OnCtNameLogoChanged();
    partial void OnCatShowOrderChanging(System.Nullable<byte> value);
    partial void OnCatShowOrderChanged();
    partial void OnDataLevelChanging(byte value);
    partial void OnDataLevelChanged();
    partial void OnDataParentChanging(System.Nullable<int> value);
    partial void OnDataParentChanged();
    partial void OnChildCountChanging(int value);
    partial void OnChildCountChanged();
    partial void OnDataCountChanging(int value);
    partial void OnDataCountChanged();
    partial void OnCtUnitIDChanging(System.Nullable<int> value);
    partial void OnCtUnitIDChanged();
    partial void OninUseChanging(char value);
    partial void OninUseChanged();
    partial void OnEditDateChanging(System.DateTime value);
    partial void OnEditDateChanged();
    partial void OnEditUserIDChanging(string value);
    partial void OnEditUserIDChanged();
    partial void OndConditionChanging(string value);
    partial void OndConditionChanged();
    partial void OnxslListChanging(string value);
    partial void OnxslListChanged();
    partial void OnxslDataChanging(string value);
    partial void OnxslDataChanged();
    partial void OnCtNodeNPKindChanging(System.Nullable<char> value);
    partial void OnCtNodeNPKindChanged();
    partial void OnRSSChanging(string value);
    partial void OnRSSChanged();
    partial void OnKMcatChanging(string value);
    partial void OnKMcatChanged();
    partial void OnKMcatIDChanging(string value);
    partial void OnKMcatIDChanged();
    partial void OnKMautoIDChanging(string value);
    partial void OnKMautoIDChanged();
    partial void OnSubjectIDChanging(string value);
    partial void OnSubjectIDChanged();
    partial void OnKMTreeYNChanging(System.Nullable<char> value);
    partial void OnKMTreeYNChanged();
    partial void OnRSSURLIDChanging(string value);
    partial void OnRSSURLIDChanged();
    partial void OnRSSNodeTypeChanging(System.Nullable<char> value);
    partial void OnRSSNodeTypeChanged();
    partial void OnSubjectMonthChanging(string value);
    partial void OnSubjectMonthChanged();
    partial void OnCatNameMemoChanging(string value);
    partial void OnCatNameMemoChanged();
    #endregion
	
	public CatTreeNode()
	{
		OnCreated();
	}
	
	[Column(Storage="_CtRootID", DbType="Int NOT NULL")]
	public int CtRootID
	{
		get
		{
			return this._CtRootID;
		}
		set
		{
			if ((this._CtRootID != value))
			{
				this.OnCtRootIDChanging(value);
				this.SendPropertyChanging();
				this._CtRootID = value;
				this.SendPropertyChanged("CtRootID");
				this.OnCtRootIDChanged();
			}
		}
	}
	
	[Column(Storage="_CtNodeKind", DbType="Char(1) NOT NULL")]
	public char CtNodeKind
	{
		get
		{
			return this._CtNodeKind;
		}
		set
		{
			if ((this._CtNodeKind != value))
			{
				this.OnCtNodeKindChanging(value);
				this.SendPropertyChanging();
				this._CtNodeKind = value;
				this.SendPropertyChanged("CtNodeKind");
				this.OnCtNodeKindChanged();
			}
		}
	}
	
	[Column(Storage="_CtNodeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CtNodeID
	{
		get
		{
			return this._CtNodeID;
		}
		set
		{
			if ((this._CtNodeID != value))
			{
				this.OnCtNodeIDChanging(value);
				this.SendPropertyChanging();
				this._CtNodeID = value;
				this.SendPropertyChanged("CtNodeID");
				this.OnCtNodeIDChanged();
			}
		}
	}
	
	[Column(Storage="_CatName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
	public string CatName
	{
		get
		{
			return this._CatName;
		}
		set
		{
			if ((this._CatName != value))
			{
				this.OnCatNameChanging(value);
				this.SendPropertyChanging();
				this._CatName = value;
				this.SendPropertyChanged("CatName");
				this.OnCatNameChanged();
			}
		}
	}
	
	[Column(Storage="_CtNameLogo", DbType="VarChar(50)")]
	public string CtNameLogo
	{
		get
		{
			return this._CtNameLogo;
		}
		set
		{
			if ((this._CtNameLogo != value))
			{
				this.OnCtNameLogoChanging(value);
				this.SendPropertyChanging();
				this._CtNameLogo = value;
				this.SendPropertyChanged("CtNameLogo");
				this.OnCtNameLogoChanged();
			}
		}
	}
	
	[Column(Storage="_CatShowOrder", DbType="TinyInt")]
	public System.Nullable<byte> CatShowOrder
	{
		get
		{
			return this._CatShowOrder;
		}
		set
		{
			if ((this._CatShowOrder != value))
			{
				this.OnCatShowOrderChanging(value);
				this.SendPropertyChanging();
				this._CatShowOrder = value;
				this.SendPropertyChanged("CatShowOrder");
				this.OnCatShowOrderChanged();
			}
		}
	}
	
	[Column(Storage="_DataLevel", DbType="TinyInt NOT NULL")]
	public byte DataLevel
	{
		get
		{
			return this._DataLevel;
		}
		set
		{
			if ((this._DataLevel != value))
			{
				this.OnDataLevelChanging(value);
				this.SendPropertyChanging();
				this._DataLevel = value;
				this.SendPropertyChanged("DataLevel");
				this.OnDataLevelChanged();
			}
		}
	}
	
	[Column(Storage="_DataParent", DbType="Int")]
	public System.Nullable<int> DataParent
	{
		get
		{
			return this._DataParent;
		}
		set
		{
			if ((this._DataParent != value))
			{
				this.OnDataParentChanging(value);
				this.SendPropertyChanging();
				this._DataParent = value;
				this.SendPropertyChanged("DataParent");
				this.OnDataParentChanged();
			}
		}
	}
	
	[Column(Storage="_ChildCount", DbType="Int NOT NULL")]
	public int ChildCount
	{
		get
		{
			return this._ChildCount;
		}
		set
		{
			if ((this._ChildCount != value))
			{
				this.OnChildCountChanging(value);
				this.SendPropertyChanging();
				this._ChildCount = value;
				this.SendPropertyChanged("ChildCount");
				this.OnChildCountChanged();
			}
		}
	}
	
	[Column(Storage="_DataCount", DbType="Int NOT NULL")]
	public int DataCount
	{
		get
		{
			return this._DataCount;
		}
		set
		{
			if ((this._DataCount != value))
			{
				this.OnDataCountChanging(value);
				this.SendPropertyChanging();
				this._DataCount = value;
				this.SendPropertyChanged("DataCount");
				this.OnDataCountChanged();
			}
		}
	}
	
	[Column(Storage="_CtUnitID", DbType="Int")]
	public System.Nullable<int> CtUnitID
	{
		get
		{
			return this._CtUnitID;
		}
		set
		{
			if ((this._CtUnitID != value))
			{
				this.OnCtUnitIDChanging(value);
				this.SendPropertyChanging();
				this._CtUnitID = value;
				this.SendPropertyChanged("CtUnitID");
				this.OnCtUnitIDChanged();
			}
		}
	}
	
	[Column(Storage="_inUse", DbType="Char(1) NOT NULL")]
	public char inUse
	{
		get
		{
			return this._inUse;
		}
		set
		{
			if ((this._inUse != value))
			{
				this.OninUseChanging(value);
				this.SendPropertyChanging();
				this._inUse = value;
				this.SendPropertyChanged("inUse");
				this.OninUseChanged();
			}
		}
	}
	
	[Column(Storage="_EditDate", DbType="SmallDateTime NOT NULL")]
	public System.DateTime EditDate
	{
		get
		{
			return this._EditDate;
		}
		set
		{
			if ((this._EditDate != value))
			{
				this.OnEditDateChanging(value);
				this.SendPropertyChanging();
				this._EditDate = value;
				this.SendPropertyChanged("EditDate");
				this.OnEditDateChanged();
			}
		}
	}
	
	[Column(Storage="_EditUserID", DbType="VarChar(10)")]
	public string EditUserID
	{
		get
		{
			return this._EditUserID;
		}
		set
		{
			if ((this._EditUserID != value))
			{
				this.OnEditUserIDChanging(value);
				this.SendPropertyChanging();
				this._EditUserID = value;
				this.SendPropertyChanged("EditUserID");
				this.OnEditUserIDChanged();
			}
		}
	}
	
	[Column(Storage="_dCondition", DbType="VarChar(50)")]
	public string dCondition
	{
		get
		{
			return this._dCondition;
		}
		set
		{
			if ((this._dCondition != value))
			{
				this.OndConditionChanging(value);
				this.SendPropertyChanging();
				this._dCondition = value;
				this.SendPropertyChanged("dCondition");
				this.OndConditionChanged();
			}
		}
	}
	
	[Column(Storage="_xslList", DbType="VarChar(20)")]
	public string xslList
	{
		get
		{
			return this._xslList;
		}
		set
		{
			if ((this._xslList != value))
			{
				this.OnxslListChanging(value);
				this.SendPropertyChanging();
				this._xslList = value;
				this.SendPropertyChanged("xslList");
				this.OnxslListChanged();
			}
		}
	}
	
	[Column(Storage="_xslData", DbType="VarChar(20)")]
	public string xslData
	{
		get
		{
			return this._xslData;
		}
		set
		{
			if ((this._xslData != value))
			{
				this.OnxslDataChanging(value);
				this.SendPropertyChanging();
				this._xslData = value;
				this.SendPropertyChanged("xslData");
				this.OnxslDataChanged();
			}
		}
	}
	
	[Column(Storage="_CtNodeNPKind", DbType="Char(1)")]
	public System.Nullable<char> CtNodeNPKind
	{
		get
		{
			return this._CtNodeNPKind;
		}
		set
		{
			if ((this._CtNodeNPKind != value))
			{
				this.OnCtNodeNPKindChanging(value);
				this.SendPropertyChanging();
				this._CtNodeNPKind = value;
				this.SendPropertyChanged("CtNodeNPKind");
				this.OnCtNodeNPKindChanged();
			}
		}
	}
	
	[Column(Storage="_RSS", DbType="VarChar(100)")]
	public string RSS
	{
		get
		{
			return this._RSS;
		}
		set
		{
			if ((this._RSS != value))
			{
				this.OnRSSChanging(value);
				this.SendPropertyChanging();
				this._RSS = value;
				this.SendPropertyChanged("RSS");
				this.OnRSSChanged();
			}
		}
	}
	
	[Column(Storage="_KMcat", DbType="VarChar(200)")]
	public string KMcat
	{
		get
		{
			return this._KMcat;
		}
		set
		{
			if ((this._KMcat != value))
			{
				this.OnKMcatChanging(value);
				this.SendPropertyChanging();
				this._KMcat = value;
				this.SendPropertyChanged("KMcat");
				this.OnKMcatChanged();
			}
		}
	}
	
	[Column(Storage="_KMcatID", DbType="VarChar(200)")]
	public string KMcatID
	{
		get
		{
			return this._KMcatID;
		}
		set
		{
			if ((this._KMcatID != value))
			{
				this.OnKMcatIDChanging(value);
				this.SendPropertyChanging();
				this._KMcatID = value;
				this.SendPropertyChanged("KMcatID");
				this.OnKMcatIDChanged();
			}
		}
	}
	
	[Column(Storage="_KMautoID", DbType="VarChar(200)")]
	public string KMautoID
	{
		get
		{
			return this._KMautoID;
		}
		set
		{
			if ((this._KMautoID != value))
			{
				this.OnKMautoIDChanging(value);
				this.SendPropertyChanging();
				this._KMautoID = value;
				this.SendPropertyChanged("KMautoID");
				this.OnKMautoIDChanged();
			}
		}
	}
	
	[Column(Storage="_SubjectID", DbType="VarChar(200)")]
	public string SubjectID
	{
		get
		{
			return this._SubjectID;
		}
		set
		{
			if ((this._SubjectID != value))
			{
				this.OnSubjectIDChanging(value);
				this.SendPropertyChanging();
				this._SubjectID = value;
				this.SendPropertyChanged("SubjectID");
				this.OnSubjectIDChanged();
			}
		}
	}
	
	[Column(Storage="_KMTreeYN", DbType="Char(1)")]
	public System.Nullable<char> KMTreeYN
	{
		get
		{
			return this._KMTreeYN;
		}
		set
		{
			if ((this._KMTreeYN != value))
			{
				this.OnKMTreeYNChanging(value);
				this.SendPropertyChanging();
				this._KMTreeYN = value;
				this.SendPropertyChanged("KMTreeYN");
				this.OnKMTreeYNChanged();
			}
		}
	}
	
	[Column(Storage="_RSSURLID", DbType="VarChar(10)")]
	public string RSSURLID
	{
		get
		{
			return this._RSSURLID;
		}
		set
		{
			if ((this._RSSURLID != value))
			{
				this.OnRSSURLIDChanging(value);
				this.SendPropertyChanging();
				this._RSSURLID = value;
				this.SendPropertyChanged("RSSURLID");
				this.OnRSSURLIDChanged();
			}
		}
	}
	
	[Column(Storage="_RSSNodeType", DbType="Char(1)")]
	public System.Nullable<char> RSSNodeType
	{
		get
		{
			return this._RSSNodeType;
		}
		set
		{
			if ((this._RSSNodeType != value))
			{
				this.OnRSSNodeTypeChanging(value);
				this.SendPropertyChanging();
				this._RSSNodeType = value;
				this.SendPropertyChanged("RSSNodeType");
				this.OnRSSNodeTypeChanged();
			}
		}
	}
	
	[Column(Storage="_SubjectMonth", DbType="VarChar(200)")]
	public string SubjectMonth
	{
		get
		{
			return this._SubjectMonth;
		}
		set
		{
			if ((this._SubjectMonth != value))
			{
				this.OnSubjectMonthChanging(value);
				this.SendPropertyChanging();
				this._SubjectMonth = value;
				this.SendPropertyChanged("SubjectMonth");
				this.OnSubjectMonthChanged();
			}
		}
	}
	
	[Column(Storage="_CatNameMemo", DbType="NVarChar(1000)")]
	public string CatNameMemo
	{
		get
		{
			return this._CatNameMemo;
		}
		set
		{
			if ((this._CatNameMemo != value))
			{
				this.OnCatNameMemoChanging(value);
				this.SendPropertyChanging();
				this._CatNameMemo = value;
				this.SendPropertyChanged("CatNameMemo");
				this.OnCatNameMemoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.CatTreeRoot")]
public partial class CatTreeRoot : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CtRootID;
	
	private string _CtRootName;
	
	private string _vGroup;
	
	private string _Purpose;
	
	private char _inUse;
	
	private System.DateTime _EditDate;
	
	private string _Editor;
	
	private string _deptID;
	
	private string _pvXdmp;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCtRootIDChanging(int value);
    partial void OnCtRootIDChanged();
    partial void OnCtRootNameChanging(string value);
    partial void OnCtRootNameChanged();
    partial void OnvGroupChanging(string value);
    partial void OnvGroupChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OninUseChanging(char value);
    partial void OninUseChanged();
    partial void OnEditDateChanging(System.DateTime value);
    partial void OnEditDateChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OndeptIDChanging(string value);
    partial void OndeptIDChanged();
    partial void OnpvXdmpChanging(string value);
    partial void OnpvXdmpChanged();
    #endregion
	
	public CatTreeRoot()
	{
		OnCreated();
	}
	
	[Column(Storage="_CtRootID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CtRootID
	{
		get
		{
			return this._CtRootID;
		}
		set
		{
			if ((this._CtRootID != value))
			{
				this.OnCtRootIDChanging(value);
				this.SendPropertyChanging();
				this._CtRootID = value;
				this.SendPropertyChanged("CtRootID");
				this.OnCtRootIDChanged();
			}
		}
	}
	
	[Column(Storage="_CtRootName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
	public string CtRootName
	{
		get
		{
			return this._CtRootName;
		}
		set
		{
			if ((this._CtRootName != value))
			{
				this.OnCtRootNameChanging(value);
				this.SendPropertyChanging();
				this._CtRootName = value;
				this.SendPropertyChanged("CtRootName");
				this.OnCtRootNameChanged();
			}
		}
	}
	
	[Column(Storage="_vGroup", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string vGroup
	{
		get
		{
			return this._vGroup;
		}
		set
		{
			if ((this._vGroup != value))
			{
				this.OnvGroupChanging(value);
				this.SendPropertyChanging();
				this._vGroup = value;
				this.SendPropertyChanged("vGroup");
				this.OnvGroupChanged();
			}
		}
	}
	
	[Column(Storage="_Purpose", DbType="VarChar(80)")]
	public string Purpose
	{
		get
		{
			return this._Purpose;
		}
		set
		{
			if ((this._Purpose != value))
			{
				this.OnPurposeChanging(value);
				this.SendPropertyChanging();
				this._Purpose = value;
				this.SendPropertyChanged("Purpose");
				this.OnPurposeChanged();
			}
		}
	}
	
	[Column(Storage="_inUse", DbType="Char(1) NOT NULL")]
	public char inUse
	{
		get
		{
			return this._inUse;
		}
		set
		{
			if ((this._inUse != value))
			{
				this.OninUseChanging(value);
				this.SendPropertyChanging();
				this._inUse = value;
				this.SendPropertyChanged("inUse");
				this.OninUseChanged();
			}
		}
	}
	
	[Column(Storage="_EditDate", DbType="SmallDateTime NOT NULL")]
	public System.DateTime EditDate
	{
		get
		{
			return this._EditDate;
		}
		set
		{
			if ((this._EditDate != value))
			{
				this.OnEditDateChanging(value);
				this.SendPropertyChanging();
				this._EditDate = value;
				this.SendPropertyChanged("EditDate");
				this.OnEditDateChanged();
			}
		}
	}
	
	[Column(Storage="_Editor", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string Editor
	{
		get
		{
			return this._Editor;
		}
		set
		{
			if ((this._Editor != value))
			{
				this.OnEditorChanging(value);
				this.SendPropertyChanging();
				this._Editor = value;
				this.SendPropertyChanged("Editor");
				this.OnEditorChanged();
			}
		}
	}
	
	[Column(Storage="_deptID", DbType="VarChar(10)")]
	public string deptID
	{
		get
		{
			return this._deptID;
		}
		set
		{
			if ((this._deptID != value))
			{
				this.OndeptIDChanging(value);
				this.SendPropertyChanging();
				this._deptID = value;
				this.SendPropertyChanged("deptID");
				this.OndeptIDChanged();
			}
		}
	}
	
	[Column(Storage="_pvXdmp", DbType="VarChar(6)")]
	public string pvXdmp
	{
		get
		{
			return this._pvXdmp;
		}
		set
		{
			if ((this._pvXdmp != value))
			{
				this.OnpvXdmpChanging(value);
				this.SendPropertyChanging();
				this._pvXdmp = value;
				this.SendPropertyChanged("pvXdmp");
				this.OnpvXdmpChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.CtUnit")]
public partial class CtUnit : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CtUnitID;
	
	private string _CtUnitName;
	
	private string _CtUnitLogo;
	
	private System.Nullable<int> _HeaderPart;
	
	private System.Nullable<int> _FooterPart;
	
	private string _fStyle;
	
	private string _BgLogo;
	
	private string _BgColor;
	
	private char _CtUnitKind;
	
	private string _redirectURL;
	
	private System.Nullable<char> _newWindow;
	
	private System.Nullable<int> _iBaseDSD;
	
	private char _fCtUnitOnly;
	
	private char _inUse;
	
	private string _UnitDesc;
	
	private char _CheckYN;
	
	private string _deptID;
	
	private System.Nullable<int> _ctunitexpireday;
	
	private System.Nullable<int> _mmofolderId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCtUnitIDChanging(int value);
    partial void OnCtUnitIDChanged();
    partial void OnCtUnitNameChanging(string value);
    partial void OnCtUnitNameChanged();
    partial void OnCtUnitLogoChanging(string value);
    partial void OnCtUnitLogoChanged();
    partial void OnHeaderPartChanging(System.Nullable<int> value);
    partial void OnHeaderPartChanged();
    partial void OnFooterPartChanging(System.Nullable<int> value);
    partial void OnFooterPartChanged();
    partial void OnfStyleChanging(string value);
    partial void OnfStyleChanged();
    partial void OnBgLogoChanging(string value);
    partial void OnBgLogoChanged();
    partial void OnBgColorChanging(string value);
    partial void OnBgColorChanged();
    partial void OnCtUnitKindChanging(char value);
    partial void OnCtUnitKindChanged();
    partial void OnredirectURLChanging(string value);
    partial void OnredirectURLChanged();
    partial void OnnewWindowChanging(System.Nullable<char> value);
    partial void OnnewWindowChanged();
    partial void OniBaseDSDChanging(System.Nullable<int> value);
    partial void OniBaseDSDChanged();
    partial void OnfCtUnitOnlyChanging(char value);
    partial void OnfCtUnitOnlyChanged();
    partial void OninUseChanging(char value);
    partial void OninUseChanged();
    partial void OnUnitDescChanging(string value);
    partial void OnUnitDescChanged();
    partial void OnCheckYNChanging(char value);
    partial void OnCheckYNChanged();
    partial void OndeptIDChanging(string value);
    partial void OndeptIDChanged();
    partial void OnctunitexpiredayChanging(System.Nullable<int> value);
    partial void OnctunitexpiredayChanged();
    partial void OnmmofolderIdChanging(System.Nullable<int> value);
    partial void OnmmofolderIdChanged();
    #endregion
	
	public CtUnit()
	{
		OnCreated();
	}
	
	[Column(Storage="_CtUnitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CtUnitID
	{
		get
		{
			return this._CtUnitID;
		}
		set
		{
			if ((this._CtUnitID != value))
			{
				this.OnCtUnitIDChanging(value);
				this.SendPropertyChanging();
				this._CtUnitID = value;
				this.SendPropertyChanged("CtUnitID");
				this.OnCtUnitIDChanged();
			}
		}
	}
	
	[Column(Storage="_CtUnitName", DbType="NVarChar(50)")]
	public string CtUnitName
	{
		get
		{
			return this._CtUnitName;
		}
		set
		{
			if ((this._CtUnitName != value))
			{
				this.OnCtUnitNameChanging(value);
				this.SendPropertyChanging();
				this._CtUnitName = value;
				this.SendPropertyChanged("CtUnitName");
				this.OnCtUnitNameChanged();
			}
		}
	}
	
	[Column(Storage="_CtUnitLogo", DbType="VarChar(50)")]
	public string CtUnitLogo
	{
		get
		{
			return this._CtUnitLogo;
		}
		set
		{
			if ((this._CtUnitLogo != value))
			{
				this.OnCtUnitLogoChanging(value);
				this.SendPropertyChanging();
				this._CtUnitLogo = value;
				this.SendPropertyChanged("CtUnitLogo");
				this.OnCtUnitLogoChanged();
			}
		}
	}
	
	[Column(Storage="_HeaderPart", DbType="Int")]
	public System.Nullable<int> HeaderPart
	{
		get
		{
			return this._HeaderPart;
		}
		set
		{
			if ((this._HeaderPart != value))
			{
				this.OnHeaderPartChanging(value);
				this.SendPropertyChanging();
				this._HeaderPart = value;
				this.SendPropertyChanged("HeaderPart");
				this.OnHeaderPartChanged();
			}
		}
	}
	
	[Column(Storage="_FooterPart", DbType="Int")]
	public System.Nullable<int> FooterPart
	{
		get
		{
			return this._FooterPart;
		}
		set
		{
			if ((this._FooterPart != value))
			{
				this.OnFooterPartChanging(value);
				this.SendPropertyChanging();
				this._FooterPart = value;
				this.SendPropertyChanged("FooterPart");
				this.OnFooterPartChanged();
			}
		}
	}
	
	[Column(Storage="_fStyle", DbType="VarChar(100)")]
	public string fStyle
	{
		get
		{
			return this._fStyle;
		}
		set
		{
			if ((this._fStyle != value))
			{
				this.OnfStyleChanging(value);
				this.SendPropertyChanging();
				this._fStyle = value;
				this.SendPropertyChanged("fStyle");
				this.OnfStyleChanged();
			}
		}
	}
	
	[Column(Storage="_BgLogo", DbType="VarChar(50)")]
	public string BgLogo
	{
		get
		{
			return this._BgLogo;
		}
		set
		{
			if ((this._BgLogo != value))
			{
				this.OnBgLogoChanging(value);
				this.SendPropertyChanging();
				this._BgLogo = value;
				this.SendPropertyChanged("BgLogo");
				this.OnBgLogoChanged();
			}
		}
	}
	
	[Column(Storage="_BgColor", DbType="VarChar(20)")]
	public string BgColor
	{
		get
		{
			return this._BgColor;
		}
		set
		{
			if ((this._BgColor != value))
			{
				this.OnBgColorChanging(value);
				this.SendPropertyChanging();
				this._BgColor = value;
				this.SendPropertyChanged("BgColor");
				this.OnBgColorChanged();
			}
		}
	}
	
	[Column(Storage="_CtUnitKind", DbType="Char(1) NOT NULL")]
	public char CtUnitKind
	{
		get
		{
			return this._CtUnitKind;
		}
		set
		{
			if ((this._CtUnitKind != value))
			{
				this.OnCtUnitKindChanging(value);
				this.SendPropertyChanging();
				this._CtUnitKind = value;
				this.SendPropertyChanged("CtUnitKind");
				this.OnCtUnitKindChanged();
			}
		}
	}
	
	[Column(Storage="_redirectURL", DbType="VarChar(100)")]
	public string redirectURL
	{
		get
		{
			return this._redirectURL;
		}
		set
		{
			if ((this._redirectURL != value))
			{
				this.OnredirectURLChanging(value);
				this.SendPropertyChanging();
				this._redirectURL = value;
				this.SendPropertyChanged("redirectURL");
				this.OnredirectURLChanged();
			}
		}
	}
	
	[Column(Storage="_newWindow", DbType="Char(1)")]
	public System.Nullable<char> newWindow
	{
		get
		{
			return this._newWindow;
		}
		set
		{
			if ((this._newWindow != value))
			{
				this.OnnewWindowChanging(value);
				this.SendPropertyChanging();
				this._newWindow = value;
				this.SendPropertyChanged("newWindow");
				this.OnnewWindowChanged();
			}
		}
	}
	
	[Column(Storage="_iBaseDSD", DbType="Int")]
	public System.Nullable<int> iBaseDSD
	{
		get
		{
			return this._iBaseDSD;
		}
		set
		{
			if ((this._iBaseDSD != value))
			{
				this.OniBaseDSDChanging(value);
				this.SendPropertyChanging();
				this._iBaseDSD = value;
				this.SendPropertyChanged("iBaseDSD");
				this.OniBaseDSDChanged();
			}
		}
	}
	
	[Column(Storage="_fCtUnitOnly", DbType="Char(1) NOT NULL")]
	public char fCtUnitOnly
	{
		get
		{
			return this._fCtUnitOnly;
		}
		set
		{
			if ((this._fCtUnitOnly != value))
			{
				this.OnfCtUnitOnlyChanging(value);
				this.SendPropertyChanging();
				this._fCtUnitOnly = value;
				this.SendPropertyChanged("fCtUnitOnly");
				this.OnfCtUnitOnlyChanged();
			}
		}
	}
	
	[Column(Storage="_inUse", DbType="Char(1) NOT NULL")]
	public char inUse
	{
		get
		{
			return this._inUse;
		}
		set
		{
			if ((this._inUse != value))
			{
				this.OninUseChanging(value);
				this.SendPropertyChanging();
				this._inUse = value;
				this.SendPropertyChanged("inUse");
				this.OninUseChanged();
			}
		}
	}
	
	[Column(Storage="_UnitDesc", DbType="VarChar(60)")]
	public string UnitDesc
	{
		get
		{
			return this._UnitDesc;
		}
		set
		{
			if ((this._UnitDesc != value))
			{
				this.OnUnitDescChanging(value);
				this.SendPropertyChanging();
				this._UnitDesc = value;
				this.SendPropertyChanged("UnitDesc");
				this.OnUnitDescChanged();
			}
		}
	}
	
	[Column(Storage="_CheckYN", DbType="Char(1) NOT NULL")]
	public char CheckYN
	{
		get
		{
			return this._CheckYN;
		}
		set
		{
			if ((this._CheckYN != value))
			{
				this.OnCheckYNChanging(value);
				this.SendPropertyChanging();
				this._CheckYN = value;
				this.SendPropertyChanged("CheckYN");
				this.OnCheckYNChanged();
			}
		}
	}
	
	[Column(Storage="_deptID", DbType="VarChar(10)")]
	public string deptID
	{
		get
		{
			return this._deptID;
		}
		set
		{
			if ((this._deptID != value))
			{
				this.OndeptIDChanging(value);
				this.SendPropertyChanging();
				this._deptID = value;
				this.SendPropertyChanged("deptID");
				this.OndeptIDChanged();
			}
		}
	}
	
	[Column(Storage="_ctunitexpireday", DbType="Int")]
	public System.Nullable<int> ctunitexpireday
	{
		get
		{
			return this._ctunitexpireday;
		}
		set
		{
			if ((this._ctunitexpireday != value))
			{
				this.OnctunitexpiredayChanging(value);
				this.SendPropertyChanging();
				this._ctunitexpireday = value;
				this.SendPropertyChanged("ctunitexpireday");
				this.OnctunitexpiredayChanged();
			}
		}
	}
	
	[Column(Storage="_mmofolderId", DbType="Int")]
	public System.Nullable<int> mmofolderId
	{
		get
		{
			return this._mmofolderId;
		}
		set
		{
			if ((this._mmofolderId != value))
			{
				this.OnmmofolderIdChanging(value);
				this.SendPropertyChanging();
				this._mmofolderId = value;
				this.SendPropertyChanged("mmofolderId");
				this.OnmmofolderIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.InfoUser")]
public partial class InfoUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _UserID;
	
	private string _Password;
	
	private string _UserName;
	
	private char _UserType;
	
	private string _deptID;
	
	private string _jobName;
	
	private string _Email;
	
	private string _ugrpID;
	
	private System.Nullable<System.DateTime> _LastVisit;
	
	private short _VisitCount;
	
	private string _ugrpName;
	
	private string _Telephone;
	
	private System.Nullable<char> _tDataCat;
	
	private string _uploadPath;
	
	private string _lastIP;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserTypeChanging(char value);
    partial void OnUserTypeChanged();
    partial void OndeptIDChanging(string value);
    partial void OndeptIDChanged();
    partial void OnjobNameChanging(string value);
    partial void OnjobNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnugrpIDChanging(string value);
    partial void OnugrpIDChanged();
    partial void OnLastVisitChanging(System.Nullable<System.DateTime> value);
    partial void OnLastVisitChanged();
    partial void OnVisitCountChanging(short value);
    partial void OnVisitCountChanged();
    partial void OnugrpNameChanging(string value);
    partial void OnugrpNameChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OntDataCatChanging(System.Nullable<char> value);
    partial void OntDataCatChanged();
    partial void OnuploadPathChanging(string value);
    partial void OnuploadPathChanged();
    partial void OnlastIPChanging(string value);
    partial void OnlastIPChanged();
    #endregion
	
	public InfoUser()
	{
		OnCreated();
	}
	
	[Column(Storage="_UserID", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[Column(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[Column(Storage="_UserName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[Column(Storage="_UserType", DbType="VarChar(1) NOT NULL")]
	public char UserType
	{
		get
		{
			return this._UserType;
		}
		set
		{
			if ((this._UserType != value))
			{
				this.OnUserTypeChanging(value);
				this.SendPropertyChanging();
				this._UserType = value;
				this.SendPropertyChanged("UserType");
				this.OnUserTypeChanged();
			}
		}
	}
	
	[Column(Storage="_deptID", DbType="VarChar(10)")]
	public string deptID
	{
		get
		{
			return this._deptID;
		}
		set
		{
			if ((this._deptID != value))
			{
				this.OndeptIDChanging(value);
				this.SendPropertyChanging();
				this._deptID = value;
				this.SendPropertyChanged("deptID");
				this.OndeptIDChanged();
			}
		}
	}
	
	[Column(Storage="_jobName", DbType="VarChar(30)")]
	public string jobName
	{
		get
		{
			return this._jobName;
		}
		set
		{
			if ((this._jobName != value))
			{
				this.OnjobNameChanging(value);
				this.SendPropertyChanging();
				this._jobName = value;
				this.SendPropertyChanged("jobName");
				this.OnjobNameChanged();
			}
		}
	}
	
	[Column(Storage="_Email", DbType="VarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[Column(Storage="_ugrpID", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string ugrpID
	{
		get
		{
			return this._ugrpID;
		}
		set
		{
			if ((this._ugrpID != value))
			{
				this.OnugrpIDChanging(value);
				this.SendPropertyChanging();
				this._ugrpID = value;
				this.SendPropertyChanged("ugrpID");
				this.OnugrpIDChanged();
			}
		}
	}
	
	[Column(Storage="_LastVisit", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> LastVisit
	{
		get
		{
			return this._LastVisit;
		}
		set
		{
			if ((this._LastVisit != value))
			{
				this.OnLastVisitChanging(value);
				this.SendPropertyChanging();
				this._LastVisit = value;
				this.SendPropertyChanged("LastVisit");
				this.OnLastVisitChanged();
			}
		}
	}
	
	[Column(Storage="_VisitCount", DbType="SmallInt NOT NULL")]
	public short VisitCount
	{
		get
		{
			return this._VisitCount;
		}
		set
		{
			if ((this._VisitCount != value))
			{
				this.OnVisitCountChanging(value);
				this.SendPropertyChanging();
				this._VisitCount = value;
				this.SendPropertyChanged("VisitCount");
				this.OnVisitCountChanged();
			}
		}
	}
	
	[Column(Storage="_ugrpName", DbType="Char(500)")]
	public string ugrpName
	{
		get
		{
			return this._ugrpName;
		}
		set
		{
			if ((this._ugrpName != value))
			{
				this.OnugrpNameChanging(value);
				this.SendPropertyChanging();
				this._ugrpName = value;
				this.SendPropertyChanged("ugrpName");
				this.OnugrpNameChanged();
			}
		}
	}
	
	[Column(Storage="_Telephone", DbType="VarChar(30)")]
	public string Telephone
	{
		get
		{
			return this._Telephone;
		}
		set
		{
			if ((this._Telephone != value))
			{
				this.OnTelephoneChanging(value);
				this.SendPropertyChanging();
				this._Telephone = value;
				this.SendPropertyChanged("Telephone");
				this.OnTelephoneChanged();
			}
		}
	}
	
	[Column(Storage="_tDataCat", DbType="Char(1)")]
	public System.Nullable<char> tDataCat
	{
		get
		{
			return this._tDataCat;
		}
		set
		{
			if ((this._tDataCat != value))
			{
				this.OntDataCatChanging(value);
				this.SendPropertyChanging();
				this._tDataCat = value;
				this.SendPropertyChanged("tDataCat");
				this.OntDataCatChanged();
			}
		}
	}
	
	[Column(Storage="_uploadPath", DbType="VarChar(50)")]
	public string uploadPath
	{
		get
		{
			return this._uploadPath;
		}
		set
		{
			if ((this._uploadPath != value))
			{
				this.OnuploadPathChanging(value);
				this.SendPropertyChanging();
				this._uploadPath = value;
				this.SendPropertyChanged("uploadPath");
				this.OnuploadPathChanged();
			}
		}
	}
	
	[Column(Storage="_lastIP", DbType="VarChar(20)")]
	public string lastIP
	{
		get
		{
			return this._lastIP;
		}
		set
		{
			if ((this._lastIP != value))
			{
				this.OnlastIPChanging(value);
				this.SendPropertyChanging();
				this._lastIP = value;
				this.SendPropertyChanged("lastIP");
				this.OnlastIPChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.Dept")]
public partial class Dept : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Nullable<int> _giCuItem;
	
	private string _deptID;
	
	private string _deptName;
	
	private string _AbbrName;
	
	private string _eDeptName;
	
	private string _eAbbrName;
	
	private System.Nullable<char> _OrgRank;
	
	private char _kind;
	
	private string _DeptHead;
	
	private char _inUse;
	
	private string _tDataCat;
	
	private string _servPhone;
	
	private string _servAddr;
	
	private string _servHour;
	
	private string _eservAddr;
	
	private string _eservHour;
	
	private string _parent;
	
	private System.Nullable<char> _nodeKind;
	
	private System.Nullable<short> _seq;
	
	private string _webSite;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngiCuItemChanging(System.Nullable<int> value);
    partial void OngiCuItemChanged();
    partial void OndeptIDChanging(string value);
    partial void OndeptIDChanged();
    partial void OndeptNameChanging(string value);
    partial void OndeptNameChanged();
    partial void OnAbbrNameChanging(string value);
    partial void OnAbbrNameChanged();
    partial void OneDeptNameChanging(string value);
    partial void OneDeptNameChanged();
    partial void OneAbbrNameChanging(string value);
    partial void OneAbbrNameChanged();
    partial void OnOrgRankChanging(System.Nullable<char> value);
    partial void OnOrgRankChanged();
    partial void OnkindChanging(char value);
    partial void OnkindChanged();
    partial void OnDeptHeadChanging(string value);
    partial void OnDeptHeadChanged();
    partial void OninUseChanging(char value);
    partial void OninUseChanged();
    partial void OntDataCatChanging(string value);
    partial void OntDataCatChanged();
    partial void OnservPhoneChanging(string value);
    partial void OnservPhoneChanged();
    partial void OnservAddrChanging(string value);
    partial void OnservAddrChanged();
    partial void OnservHourChanging(string value);
    partial void OnservHourChanged();
    partial void OneservAddrChanging(string value);
    partial void OneservAddrChanged();
    partial void OneservHourChanging(string value);
    partial void OneservHourChanged();
    partial void OnparentChanging(string value);
    partial void OnparentChanged();
    partial void OnnodeKindChanging(System.Nullable<char> value);
    partial void OnnodeKindChanged();
    partial void OnseqChanging(System.Nullable<short> value);
    partial void OnseqChanged();
    partial void OnwebSiteChanging(string value);
    partial void OnwebSiteChanged();
    #endregion
	
	public Dept()
	{
		OnCreated();
	}
	
	[Column(Storage="_giCuItem", DbType="Int")]
	public System.Nullable<int> giCuItem
	{
		get
		{
			return this._giCuItem;
		}
		set
		{
			if ((this._giCuItem != value))
			{
				this.OngiCuItemChanging(value);
				this.SendPropertyChanging();
				this._giCuItem = value;
				this.SendPropertyChanged("giCuItem");
				this.OngiCuItemChanged();
			}
		}
	}
	
	[Column(Storage="_deptID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string deptID
	{
		get
		{
			return this._deptID;
		}
		set
		{
			if ((this._deptID != value))
			{
				this.OndeptIDChanging(value);
				this.SendPropertyChanging();
				this._deptID = value;
				this.SendPropertyChanged("deptID");
				this.OndeptIDChanged();
			}
		}
	}
	
	[Column(Storage="_deptName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string deptName
	{
		get
		{
			return this._deptName;
		}
		set
		{
			if ((this._deptName != value))
			{
				this.OndeptNameChanging(value);
				this.SendPropertyChanging();
				this._deptName = value;
				this.SendPropertyChanged("deptName");
				this.OndeptNameChanged();
			}
		}
	}
	
	[Column(Storage="_AbbrName", DbType="VarChar(16)")]
	public string AbbrName
	{
		get
		{
			return this._AbbrName;
		}
		set
		{
			if ((this._AbbrName != value))
			{
				this.OnAbbrNameChanging(value);
				this.SendPropertyChanging();
				this._AbbrName = value;
				this.SendPropertyChanged("AbbrName");
				this.OnAbbrNameChanged();
			}
		}
	}
	
	[Column(Storage="_eDeptName", DbType="VarChar(60)")]
	public string eDeptName
	{
		get
		{
			return this._eDeptName;
		}
		set
		{
			if ((this._eDeptName != value))
			{
				this.OneDeptNameChanging(value);
				this.SendPropertyChanging();
				this._eDeptName = value;
				this.SendPropertyChanged("eDeptName");
				this.OneDeptNameChanged();
			}
		}
	}
	
	[Column(Storage="_eAbbrName", DbType="VarChar(20)")]
	public string eAbbrName
	{
		get
		{
			return this._eAbbrName;
		}
		set
		{
			if ((this._eAbbrName != value))
			{
				this.OneAbbrNameChanging(value);
				this.SendPropertyChanging();
				this._eAbbrName = value;
				this.SendPropertyChanged("eAbbrName");
				this.OneAbbrNameChanged();
			}
		}
	}
	
	[Column(Storage="_OrgRank", DbType="Char(1)")]
	public System.Nullable<char> OrgRank
	{
		get
		{
			return this._OrgRank;
		}
		set
		{
			if ((this._OrgRank != value))
			{
				this.OnOrgRankChanging(value);
				this.SendPropertyChanging();
				this._OrgRank = value;
				this.SendPropertyChanged("OrgRank");
				this.OnOrgRankChanged();
			}
		}
	}
	
	[Column(Storage="_kind", DbType="Char(1) NOT NULL")]
	public char kind
	{
		get
		{
			return this._kind;
		}
		set
		{
			if ((this._kind != value))
			{
				this.OnkindChanging(value);
				this.SendPropertyChanging();
				this._kind = value;
				this.SendPropertyChanged("kind");
				this.OnkindChanged();
			}
		}
	}
	
	[Column(Storage="_DeptHead", DbType="VarChar(10)")]
	public string DeptHead
	{
		get
		{
			return this._DeptHead;
		}
		set
		{
			if ((this._DeptHead != value))
			{
				this.OnDeptHeadChanging(value);
				this.SendPropertyChanging();
				this._DeptHead = value;
				this.SendPropertyChanged("DeptHead");
				this.OnDeptHeadChanged();
			}
		}
	}
	
	[Column(Storage="_inUse", DbType="Char(1) NOT NULL")]
	public char inUse
	{
		get
		{
			return this._inUse;
		}
		set
		{
			if ((this._inUse != value))
			{
				this.OninUseChanging(value);
				this.SendPropertyChanging();
				this._inUse = value;
				this.SendPropertyChanged("inUse");
				this.OninUseChanged();
			}
		}
	}
	
	[Column(Storage="_tDataCat", DbType="VarChar(20)")]
	public string tDataCat
	{
		get
		{
			return this._tDataCat;
		}
		set
		{
			if ((this._tDataCat != value))
			{
				this.OntDataCatChanging(value);
				this.SendPropertyChanging();
				this._tDataCat = value;
				this.SendPropertyChanged("tDataCat");
				this.OntDataCatChanged();
			}
		}
	}
	
	[Column(Storage="_servPhone", DbType="VarChar(20)")]
	public string servPhone
	{
		get
		{
			return this._servPhone;
		}
		set
		{
			if ((this._servPhone != value))
			{
				this.OnservPhoneChanging(value);
				this.SendPropertyChanging();
				this._servPhone = value;
				this.SendPropertyChanged("servPhone");
				this.OnservPhoneChanged();
			}
		}
	}
	
	[Column(Storage="_servAddr", DbType="VarChar(80)")]
	public string servAddr
	{
		get
		{
			return this._servAddr;
		}
		set
		{
			if ((this._servAddr != value))
			{
				this.OnservAddrChanging(value);
				this.SendPropertyChanging();
				this._servAddr = value;
				this.SendPropertyChanged("servAddr");
				this.OnservAddrChanged();
			}
		}
	}
	
	[Column(Storage="_servHour", DbType="VarChar(80)")]
	public string servHour
	{
		get
		{
			return this._servHour;
		}
		set
		{
			if ((this._servHour != value))
			{
				this.OnservHourChanging(value);
				this.SendPropertyChanging();
				this._servHour = value;
				this.SendPropertyChanged("servHour");
				this.OnservHourChanged();
			}
		}
	}
	
	[Column(Storage="_eservAddr", DbType="VarChar(80)")]
	public string eservAddr
	{
		get
		{
			return this._eservAddr;
		}
		set
		{
			if ((this._eservAddr != value))
			{
				this.OneservAddrChanging(value);
				this.SendPropertyChanging();
				this._eservAddr = value;
				this.SendPropertyChanged("eservAddr");
				this.OneservAddrChanged();
			}
		}
	}
	
	[Column(Storage="_eservHour", DbType="VarChar(80)")]
	public string eservHour
	{
		get
		{
			return this._eservHour;
		}
		set
		{
			if ((this._eservHour != value))
			{
				this.OneservHourChanging(value);
				this.SendPropertyChanging();
				this._eservHour = value;
				this.SendPropertyChanged("eservHour");
				this.OneservHourChanged();
			}
		}
	}
	
	[Column(Storage="_parent", DbType="VarChar(10)")]
	public string parent
	{
		get
		{
			return this._parent;
		}
		set
		{
			if ((this._parent != value))
			{
				this.OnparentChanging(value);
				this.SendPropertyChanging();
				this._parent = value;
				this.SendPropertyChanged("parent");
				this.OnparentChanged();
			}
		}
	}
	
	[Column(Storage="_nodeKind", DbType="Char(1)")]
	public System.Nullable<char> nodeKind
	{
		get
		{
			return this._nodeKind;
		}
		set
		{
			if ((this._nodeKind != value))
			{
				this.OnnodeKindChanging(value);
				this.SendPropertyChanging();
				this._nodeKind = value;
				this.SendPropertyChanged("nodeKind");
				this.OnnodeKindChanged();
			}
		}
	}
	
	[Column(Storage="_seq", DbType="SmallInt")]
	public System.Nullable<short> seq
	{
		get
		{
			return this._seq;
		}
		set
		{
			if ((this._seq != value))
			{
				this.OnseqChanging(value);
				this.SendPropertyChanging();
				this._seq = value;
				this.SendPropertyChanged("seq");
				this.OnseqChanged();
			}
		}
	}
	
	[Column(Storage="_webSite", DbType="VarChar(80)")]
	public string webSite
	{
		get
		{
			return this._webSite;
		}
		set
		{
			if ((this._webSite != value))
			{
				this.OnwebSiteChanging(value);
				this.SendPropertyChanging();
				this._webSite = value;
				this.SendPropertyChanged("webSite");
				this.OnwebSiteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.MemberGradeShare")]
public partial class MemberGradeShare
{
	
	private string _memberId;
	
	private System.DateTime _shareDate;
	
	private int _shareAsk;
	
	private int _shareDiscuss;
	
	private int _shareCommend;
	
	private int _shareOpinion;
	
	private int _shareSuggest;
	
	private int _shareExplain;
	
	private int _shareVote;
	
	private int _shareJigsaw;
	
	private int _shareGardening;
	
	public MemberGradeShare()
	{
	}
	
	[Column(Storage="_memberId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string memberId
	{
		get
		{
			return this._memberId;
		}
		set
		{
			if ((this._memberId != value))
			{
				this._memberId = value;
			}
		}
	}
	
	[Column(Storage="_shareDate", DbType="DateTime NOT NULL")]
	public System.DateTime shareDate
	{
		get
		{
			return this._shareDate;
		}
		set
		{
			if ((this._shareDate != value))
			{
				this._shareDate = value;
			}
		}
	}
	
	[Column(Storage="_shareAsk", DbType="Int NOT NULL")]
	public int shareAsk
	{
		get
		{
			return this._shareAsk;
		}
		set
		{
			if ((this._shareAsk != value))
			{
				this._shareAsk = value;
			}
		}
	}
	
	[Column(Storage="_shareDiscuss", DbType="Int NOT NULL")]
	public int shareDiscuss
	{
		get
		{
			return this._shareDiscuss;
		}
		set
		{
			if ((this._shareDiscuss != value))
			{
				this._shareDiscuss = value;
			}
		}
	}
	
	[Column(Storage="_shareCommend", DbType="Int NOT NULL")]
	public int shareCommend
	{
		get
		{
			return this._shareCommend;
		}
		set
		{
			if ((this._shareCommend != value))
			{
				this._shareCommend = value;
			}
		}
	}
	
	[Column(Storage="_shareOpinion", DbType="Int NOT NULL")]
	public int shareOpinion
	{
		get
		{
			return this._shareOpinion;
		}
		set
		{
			if ((this._shareOpinion != value))
			{
				this._shareOpinion = value;
			}
		}
	}
	
	[Column(Storage="_shareSuggest", DbType="Int NOT NULL")]
	public int shareSuggest
	{
		get
		{
			return this._shareSuggest;
		}
		set
		{
			if ((this._shareSuggest != value))
			{
				this._shareSuggest = value;
			}
		}
	}
	
	[Column(Storage="_shareExplain", DbType="Int NOT NULL")]
	public int shareExplain
	{
		get
		{
			return this._shareExplain;
		}
		set
		{
			if ((this._shareExplain != value))
			{
				this._shareExplain = value;
			}
		}
	}
	
	[Column(Storage="_shareVote", DbType="Int NOT NULL")]
	public int shareVote
	{
		get
		{
			return this._shareVote;
		}
		set
		{
			if ((this._shareVote != value))
			{
				this._shareVote = value;
			}
		}
	}
	
	[Column(Storage="_shareJigsaw", DbType="Int NOT NULL")]
	public int shareJigsaw
	{
		get
		{
			return this._shareJigsaw;
		}
		set
		{
			if ((this._shareJigsaw != value))
			{
				this._shareJigsaw = value;
			}
		}
	}
	
	[Column(Storage="_shareGardening", DbType="Int NOT NULL")]
	public int shareGardening
	{
		get
		{
			return this._shareGardening;
		}
		set
		{
			if ((this._shareGardening != value))
			{
				this._shareGardening = value;
			}
		}
	}
}

[Table(Name="dbo.Member")]
public partial class Member
{
	
	private string _account;
	
	private string _passwd;
	
	private string _realname;
	
	private string _homeaddr;
	
	private string _phone;
	
	private string _mobile;
	
	private string _email;
	
	private string _mcode;
	
	private System.Nullable<System.DateTime> _createtime;
	
	private System.DateTime _modifytime;
	
	private string _zip;
	
	private string _home_ext;
	
	private string _birthday;
	
	private string _sex;
	
	private string _member_org;
	
	private System.Nullable<char> _id_type1;
	
	private System.Nullable<char> _id_type2;
	
	private System.Nullable<char> _id_type3;
	
	private string _com_tel;
	
	private string _com_ext;
	
	private string _fax;
	
	private System.Nullable<char> _status;
	
	private string _create_user;
	
	private string _modify_user;
	
	private string _audit_user;
	
	private string _audit_time;
	
	private System.Nullable<int> _org_no;
	
	private string _org_name;
	
	private System.Nullable<char> _farmer_status;
	
	private System.Nullable<char> _level;
	
	private string _introduce;
	
	private string _photo;
	
	private string _category;
	
	private string _id;
	
	private int _autoid;
	
	private string _ptitle;
	
	private System.Nullable<int> _actor;
	
	private string _KMcat;
	
	private string _KMcatID;
	
	private string _KMautoID;
	
	private int _logincount;
	
	private System.Nullable<char> _orderepaper;
	
	private string _nickname;
	
	private System.Nullable<char> _pictype;
	
	private System.Nullable<char> _uploadRight;
	
	private System.Nullable<int> _uploadPicCount;
	
	private System.Nullable<char> _scholarValidate;
	
	private string _keyword;
	
	private string _contact;
	
	public Member()
	{
	}
	
	[Column(Storage="_account", DbType="Char(100) NOT NULL", CanBeNull=false)]
	public string account
	{
		get
		{
			return this._account;
		}
		set
		{
			if ((this._account != value))
			{
				this._account = value;
			}
		}
	}
	
	[Column(Storage="_passwd", DbType="Char(100) NOT NULL", CanBeNull=false)]
	public string passwd
	{
		get
		{
			return this._passwd;
		}
		set
		{
			if ((this._passwd != value))
			{
				this._passwd = value;
			}
		}
	}
	
	[Column(Storage="_realname", DbType="Char(200) NOT NULL", CanBeNull=false)]
	public string realname
	{
		get
		{
			return this._realname;
		}
		set
		{
			if ((this._realname != value))
			{
				this._realname = value;
			}
		}
	}
	
	[Column(Storage="_homeaddr", DbType="Char(500)")]
	public string homeaddr
	{
		get
		{
			return this._homeaddr;
		}
		set
		{
			if ((this._homeaddr != value))
			{
				this._homeaddr = value;
			}
		}
	}
	
	[Column(Storage="_phone", DbType="Char(100)")]
	public string phone
	{
		get
		{
			return this._phone;
		}
		set
		{
			if ((this._phone != value))
			{
				this._phone = value;
			}
		}
	}
	
	[Column(Storage="_mobile", DbType="Char(100)")]
	public string mobile
	{
		get
		{
			return this._mobile;
		}
		set
		{
			if ((this._mobile != value))
			{
				this._mobile = value;
			}
		}
	}
	
	[Column(Storage="_email", DbType="Char(100)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this._email = value;
			}
		}
	}
	
	[Column(Storage="_mcode", DbType="VarChar(100)")]
	public string mcode
	{
		get
		{
			return this._mcode;
		}
		set
		{
			if ((this._mcode != value))
			{
				this._mcode = value;
			}
		}
	}
	
	[Column(Storage="_createtime", DbType="DateTime")]
	public System.Nullable<System.DateTime> createtime
	{
		get
		{
			return this._createtime;
		}
		set
		{
			if ((this._createtime != value))
			{
				this._createtime = value;
			}
		}
	}
	
	[Column(Storage="_modifytime", DbType="DateTime NOT NULL")]
	public System.DateTime modifytime
	{
		get
		{
			return this._modifytime;
		}
		set
		{
			if ((this._modifytime != value))
			{
				this._modifytime = value;
			}
		}
	}
	
	[Column(Storage="_zip", DbType="VarChar(10)")]
	public string zip
	{
		get
		{
			return this._zip;
		}
		set
		{
			if ((this._zip != value))
			{
				this._zip = value;
			}
		}
	}
	
	[Column(Storage="_home_ext", DbType="VarChar(5)")]
	public string home_ext
	{
		get
		{
			return this._home_ext;
		}
		set
		{
			if ((this._home_ext != value))
			{
				this._home_ext = value;
			}
		}
	}
	
	[Column(Storage="_birthday", DbType="VarChar(10)")]
	public string birthday
	{
		get
		{
			return this._birthday;
		}
		set
		{
			if ((this._birthday != value))
			{
				this._birthday = value;
			}
		}
	}
	
	[Column(Storage="_sex", DbType="Char(2)")]
	public string sex
	{
		get
		{
			return this._sex;
		}
		set
		{
			if ((this._sex != value))
			{
				this._sex = value;
			}
		}
	}
	
	[Column(Storage="_member_org", DbType="VarChar(100)")]
	public string member_org
	{
		get
		{
			return this._member_org;
		}
		set
		{
			if ((this._member_org != value))
			{
				this._member_org = value;
			}
		}
	}
	
	[Column(Storage="_id_type1", DbType="Char(1)")]
	public System.Nullable<char> id_type1
	{
		get
		{
			return this._id_type1;
		}
		set
		{
			if ((this._id_type1 != value))
			{
				this._id_type1 = value;
			}
		}
	}
	
	[Column(Storage="_id_type2", DbType="Char(1)")]
	public System.Nullable<char> id_type2
	{
		get
		{
			return this._id_type2;
		}
		set
		{
			if ((this._id_type2 != value))
			{
				this._id_type2 = value;
			}
		}
	}
	
	[Column(Storage="_id_type3", DbType="Char(1)")]
	public System.Nullable<char> id_type3
	{
		get
		{
			return this._id_type3;
		}
		set
		{
			if ((this._id_type3 != value))
			{
				this._id_type3 = value;
			}
		}
	}
	
	[Column(Storage="_com_tel", DbType="VarChar(20)")]
	public string com_tel
	{
		get
		{
			return this._com_tel;
		}
		set
		{
			if ((this._com_tel != value))
			{
				this._com_tel = value;
			}
		}
	}
	
	[Column(Storage="_com_ext", DbType="VarChar(5)")]
	public string com_ext
	{
		get
		{
			return this._com_ext;
		}
		set
		{
			if ((this._com_ext != value))
			{
				this._com_ext = value;
			}
		}
	}
	
	[Column(Storage="_fax", DbType="VarChar(20)")]
	public string fax
	{
		get
		{
			return this._fax;
		}
		set
		{
			if ((this._fax != value))
			{
				this._fax = value;
			}
		}
	}
	
	[Column(Storage="_status", DbType="Char(1)")]
	public System.Nullable<char> status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this._status = value;
			}
		}
	}
	
	[Column(Storage="_create_user", DbType="VarChar(20)")]
	public string create_user
	{
		get
		{
			return this._create_user;
		}
		set
		{
			if ((this._create_user != value))
			{
				this._create_user = value;
			}
		}
	}
	
	[Column(Storage="_modify_user", DbType="VarChar(20)")]
	public string modify_user
	{
		get
		{
			return this._modify_user;
		}
		set
		{
			if ((this._modify_user != value))
			{
				this._modify_user = value;
			}
		}
	}
	
	[Column(Storage="_audit_user", DbType="VarChar(20)")]
	public string audit_user
	{
		get
		{
			return this._audit_user;
		}
		set
		{
			if ((this._audit_user != value))
			{
				this._audit_user = value;
			}
		}
	}
	
	[Column(Storage="_audit_time", DbType="VarChar(10)")]
	public string audit_time
	{
		get
		{
			return this._audit_time;
		}
		set
		{
			if ((this._audit_time != value))
			{
				this._audit_time = value;
			}
		}
	}
	
	[Column(Storage="_org_no", DbType="Int")]
	public System.Nullable<int> org_no
	{
		get
		{
			return this._org_no;
		}
		set
		{
			if ((this._org_no != value))
			{
				this._org_no = value;
			}
		}
	}
	
	[Column(Storage="_org_name", DbType="NVarChar(100)")]
	public string org_name
	{
		get
		{
			return this._org_name;
		}
		set
		{
			if ((this._org_name != value))
			{
				this._org_name = value;
			}
		}
	}
	
	[Column(Storage="_farmer_status", DbType="NChar(1)")]
	public System.Nullable<char> farmer_status
	{
		get
		{
			return this._farmer_status;
		}
		set
		{
			if ((this._farmer_status != value))
			{
				this._farmer_status = value;
			}
		}
	}
	
	[Column(Name="[level]", Storage="_level", DbType="NChar(1)")]
	public System.Nullable<char> level
	{
		get
		{
			return this._level;
		}
		set
		{
			if ((this._level != value))
			{
				this._level = value;
			}
		}
	}
	
	[Column(Storage="_introduce", DbType="NVarChar(1024)")]
	public string introduce
	{
		get
		{
			return this._introduce;
		}
		set
		{
			if ((this._introduce != value))
			{
				this._introduce = value;
			}
		}
	}
	
	[Column(Storage="_photo", DbType="VarChar(50)")]
	public string photo
	{
		get
		{
			return this._photo;
		}
		set
		{
			if ((this._photo != value))
			{
				this._photo = value;
			}
		}
	}
	
	[Column(Storage="_category", DbType="VarChar(512)")]
	public string category
	{
		get
		{
			return this._category;
		}
		set
		{
			if ((this._category != value))
			{
				this._category = value;
			}
		}
	}
	
	[Column(Storage="_id", DbType="NVarChar(40)")]
	public string id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this._id = value;
			}
		}
	}
	
	[Column(Storage="_autoid", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int autoid
	{
		get
		{
			return this._autoid;
		}
		set
		{
			if ((this._autoid != value))
			{
				this._autoid = value;
			}
		}
	}
	
	[Column(Storage="_ptitle", DbType="VarChar(50)")]
	public string ptitle
	{
		get
		{
			return this._ptitle;
		}
		set
		{
			if ((this._ptitle != value))
			{
				this._ptitle = value;
			}
		}
	}
	
	[Column(Storage="_actor", DbType="Int")]
	public System.Nullable<int> actor
	{
		get
		{
			return this._actor;
		}
		set
		{
			if ((this._actor != value))
			{
				this._actor = value;
			}
		}
	}
	
	[Column(Storage="_KMcat", DbType="VarChar(200)")]
	public string KMcat
	{
		get
		{
			return this._KMcat;
		}
		set
		{
			if ((this._KMcat != value))
			{
				this._KMcat = value;
			}
		}
	}
	
	[Column(Storage="_KMcatID", DbType="VarChar(200)")]
	public string KMcatID
	{
		get
		{
			return this._KMcatID;
		}
		set
		{
			if ((this._KMcatID != value))
			{
				this._KMcatID = value;
			}
		}
	}
	
	[Column(Storage="_KMautoID", DbType="VarChar(200)")]
	public string KMautoID
	{
		get
		{
			return this._KMautoID;
		}
		set
		{
			if ((this._KMautoID != value))
			{
				this._KMautoID = value;
			}
		}
	}
	
	[Column(Storage="_logincount", DbType="Int NOT NULL")]
	public int logincount
	{
		get
		{
			return this._logincount;
		}
		set
		{
			if ((this._logincount != value))
			{
				this._logincount = value;
			}
		}
	}
	
	[Column(Storage="_orderepaper", DbType="Char(1)")]
	public System.Nullable<char> orderepaper
	{
		get
		{
			return this._orderepaper;
		}
		set
		{
			if ((this._orderepaper != value))
			{
				this._orderepaper = value;
			}
		}
	}
	
	[Column(Storage="_nickname", DbType="NVarChar(50)")]
	public string nickname
	{
		get
		{
			return this._nickname;
		}
		set
		{
			if ((this._nickname != value))
			{
				this._nickname = value;
			}
		}
	}
	
	[Column(Storage="_pictype", DbType="Char(1)")]
	public System.Nullable<char> pictype
	{
		get
		{
			return this._pictype;
		}
		set
		{
			if ((this._pictype != value))
			{
				this._pictype = value;
			}
		}
	}
	
	[Column(Storage="_uploadRight", DbType="Char(1)")]
	public System.Nullable<char> uploadRight
	{
		get
		{
			return this._uploadRight;
		}
		set
		{
			if ((this._uploadRight != value))
			{
				this._uploadRight = value;
			}
		}
	}
	
	[Column(Storage="_uploadPicCount", DbType="Int")]
	public System.Nullable<int> uploadPicCount
	{
		get
		{
			return this._uploadPicCount;
		}
		set
		{
			if ((this._uploadPicCount != value))
			{
				this._uploadPicCount = value;
			}
		}
	}
	
	[Column(Storage="_scholarValidate", DbType="Char(1)")]
	public System.Nullable<char> scholarValidate
	{
		get
		{
			return this._scholarValidate;
		}
		set
		{
			if ((this._scholarValidate != value))
			{
				this._scholarValidate = value;
			}
		}
	}
	
	[Column(Storage="_keyword", DbType="NVarChar(200)")]
	public string keyword
	{
		get
		{
			return this._keyword;
		}
		set
		{
			if ((this._keyword != value))
			{
				this._keyword = value;
			}
		}
	}
	
	[Column(Storage="_contact", DbType="VarChar(255)")]
	public string contact
	{
		get
		{
			return this._contact;
		}
		set
		{
			if ((this._contact != value))
			{
				this._contact = value;
			}
		}
	}
}

[Table(Name="dbo.KnowledgeForum")]
public partial class KnowledgeForum : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _gicuitem;
	
	private System.Nullable<int> _DiscussCount;
	
	private System.Nullable<int> _CommandCount;
	
	private System.Nullable<int> _BrowseCount;
	
	private System.Nullable<int> _TraceCount;
	
	private System.Nullable<int> _GradeCount;
	
	private System.Nullable<int> _GradePersonCount;
	
	private System.Nullable<char> _HavePros;
	
	private System.Nullable<int> _ParentIcuitem;
	
	private System.Nullable<char> _Status;
	
	private System.Nullable<System.DateTime> _expertReplyDate;
	
	private string _expertId;
	
	private string _expertRand;
	
	private System.Nullable<char> _expertSend;
	
	private System.Nullable<char> _expertReply;
	
	private System.Nullable<System.DateTime> _expertSendDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngicuitemChanging(int value);
    partial void OngicuitemChanged();
    partial void OnDiscussCountChanging(System.Nullable<int> value);
    partial void OnDiscussCountChanged();
    partial void OnCommandCountChanging(System.Nullable<int> value);
    partial void OnCommandCountChanged();
    partial void OnBrowseCountChanging(System.Nullable<int> value);
    partial void OnBrowseCountChanged();
    partial void OnTraceCountChanging(System.Nullable<int> value);
    partial void OnTraceCountChanged();
    partial void OnGradeCountChanging(System.Nullable<int> value);
    partial void OnGradeCountChanged();
    partial void OnGradePersonCountChanging(System.Nullable<int> value);
    partial void OnGradePersonCountChanged();
    partial void OnHaveProsChanging(System.Nullable<char> value);
    partial void OnHaveProsChanged();
    partial void OnParentIcuitemChanging(System.Nullable<int> value);
    partial void OnParentIcuitemChanged();
    partial void OnStatusChanging(System.Nullable<char> value);
    partial void OnStatusChanged();
    partial void OnexpertReplyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpertReplyDateChanged();
    partial void OnexpertIdChanging(string value);
    partial void OnexpertIdChanged();
    partial void OnexpertRandChanging(string value);
    partial void OnexpertRandChanged();
    partial void OnexpertSendChanging(System.Nullable<char> value);
    partial void OnexpertSendChanged();
    partial void OnexpertReplyChanging(System.Nullable<char> value);
    partial void OnexpertReplyChanged();
    partial void OnexpertSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpertSendDateChanged();
    #endregion
	
	public KnowledgeForum()
	{
		OnCreated();
	}
	
	[Column(Storage="_gicuitem", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int gicuitem
	{
		get
		{
			return this._gicuitem;
		}
		set
		{
			if ((this._gicuitem != value))
			{
				this.OngicuitemChanging(value);
				this.SendPropertyChanging();
				this._gicuitem = value;
				this.SendPropertyChanged("gicuitem");
				this.OngicuitemChanged();
			}
		}
	}
	
	[Column(Storage="_DiscussCount", DbType="Int")]
	public System.Nullable<int> DiscussCount
	{
		get
		{
			return this._DiscussCount;
		}
		set
		{
			if ((this._DiscussCount != value))
			{
				this.OnDiscussCountChanging(value);
				this.SendPropertyChanging();
				this._DiscussCount = value;
				this.SendPropertyChanged("DiscussCount");
				this.OnDiscussCountChanged();
			}
		}
	}
	
	[Column(Storage="_CommandCount", DbType="Int")]
	public System.Nullable<int> CommandCount
	{
		get
		{
			return this._CommandCount;
		}
		set
		{
			if ((this._CommandCount != value))
			{
				this.OnCommandCountChanging(value);
				this.SendPropertyChanging();
				this._CommandCount = value;
				this.SendPropertyChanged("CommandCount");
				this.OnCommandCountChanged();
			}
		}
	}
	
	[Column(Storage="_BrowseCount", DbType="Int")]
	public System.Nullable<int> BrowseCount
	{
		get
		{
			return this._BrowseCount;
		}
		set
		{
			if ((this._BrowseCount != value))
			{
				this.OnBrowseCountChanging(value);
				this.SendPropertyChanging();
				this._BrowseCount = value;
				this.SendPropertyChanged("BrowseCount");
				this.OnBrowseCountChanged();
			}
		}
	}
	
	[Column(Storage="_TraceCount", DbType="Int")]
	public System.Nullable<int> TraceCount
	{
		get
		{
			return this._TraceCount;
		}
		set
		{
			if ((this._TraceCount != value))
			{
				this.OnTraceCountChanging(value);
				this.SendPropertyChanging();
				this._TraceCount = value;
				this.SendPropertyChanged("TraceCount");
				this.OnTraceCountChanged();
			}
		}
	}
	
	[Column(Storage="_GradeCount", DbType="Int")]
	public System.Nullable<int> GradeCount
	{
		get
		{
			return this._GradeCount;
		}
		set
		{
			if ((this._GradeCount != value))
			{
				this.OnGradeCountChanging(value);
				this.SendPropertyChanging();
				this._GradeCount = value;
				this.SendPropertyChanged("GradeCount");
				this.OnGradeCountChanged();
			}
		}
	}
	
	[Column(Storage="_GradePersonCount", DbType="Int")]
	public System.Nullable<int> GradePersonCount
	{
		get
		{
			return this._GradePersonCount;
		}
		set
		{
			if ((this._GradePersonCount != value))
			{
				this.OnGradePersonCountChanging(value);
				this.SendPropertyChanging();
				this._GradePersonCount = value;
				this.SendPropertyChanged("GradePersonCount");
				this.OnGradePersonCountChanged();
			}
		}
	}
	
	[Column(Storage="_HavePros", DbType="Char(1)")]
	public System.Nullable<char> HavePros
	{
		get
		{
			return this._HavePros;
		}
		set
		{
			if ((this._HavePros != value))
			{
				this.OnHaveProsChanging(value);
				this.SendPropertyChanging();
				this._HavePros = value;
				this.SendPropertyChanged("HavePros");
				this.OnHaveProsChanged();
			}
		}
	}
	
	[Column(Storage="_ParentIcuitem", DbType="Int")]
	public System.Nullable<int> ParentIcuitem
	{
		get
		{
			return this._ParentIcuitem;
		}
		set
		{
			if ((this._ParentIcuitem != value))
			{
				this.OnParentIcuitemChanging(value);
				this.SendPropertyChanging();
				this._ParentIcuitem = value;
				this.SendPropertyChanged("ParentIcuitem");
				this.OnParentIcuitemChanged();
			}
		}
	}
	
	[Column(Storage="_Status", DbType="Char(1)")]
	public System.Nullable<char> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[Column(Storage="_expertReplyDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> expertReplyDate
	{
		get
		{
			return this._expertReplyDate;
		}
		set
		{
			if ((this._expertReplyDate != value))
			{
				this.OnexpertReplyDateChanging(value);
				this.SendPropertyChanging();
				this._expertReplyDate = value;
				this.SendPropertyChanged("expertReplyDate");
				this.OnexpertReplyDateChanged();
			}
		}
	}
	
	[Column(Storage="_expertId", DbType="VarChar(20)")]
	public string expertId
	{
		get
		{
			return this._expertId;
		}
		set
		{
			if ((this._expertId != value))
			{
				this.OnexpertIdChanging(value);
				this.SendPropertyChanging();
				this._expertId = value;
				this.SendPropertyChanged("expertId");
				this.OnexpertIdChanged();
			}
		}
	}
	
	[Column(Storage="_expertRand", DbType="VarChar(15)")]
	public string expertRand
	{
		get
		{
			return this._expertRand;
		}
		set
		{
			if ((this._expertRand != value))
			{
				this.OnexpertRandChanging(value);
				this.SendPropertyChanging();
				this._expertRand = value;
				this.SendPropertyChanged("expertRand");
				this.OnexpertRandChanged();
			}
		}
	}
	
	[Column(Storage="_expertSend", DbType="Char(1)")]
	public System.Nullable<char> expertSend
	{
		get
		{
			return this._expertSend;
		}
		set
		{
			if ((this._expertSend != value))
			{
				this.OnexpertSendChanging(value);
				this.SendPropertyChanging();
				this._expertSend = value;
				this.SendPropertyChanged("expertSend");
				this.OnexpertSendChanged();
			}
		}
	}
	
	[Column(Storage="_expertReply", DbType="Char(1)")]
	public System.Nullable<char> expertReply
	{
		get
		{
			return this._expertReply;
		}
		set
		{
			if ((this._expertReply != value))
			{
				this.OnexpertReplyChanging(value);
				this.SendPropertyChanging();
				this._expertReply = value;
				this.SendPropertyChanged("expertReply");
				this.OnexpertReplyChanged();
			}
		}
	}
	
	[Column(Storage="_expertSendDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> expertSendDate
	{
		get
		{
			return this._expertSendDate;
		}
		set
		{
			if ((this._expertSendDate != value))
			{
				this.OnexpertSendDateChanging(value);
				this.SendPropertyChanging();
				this._expertSendDate = value;
				this.SendPropertyChanged("expertSendDate");
				this.OnexpertSendDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
