: 
sub processxdataset
  xtreenode = nulltext(xdataset.selectsinglenode("datanode"))
  sql = "select t.*, b.sbasetablename " _
   & " from cattreenode as t left join ctunit as u on u.ctunitid=t.ctunitid " _
   & " left join basedsd as b on b.ibasedsd=u.ibasedsd " _
   & " where ctnodeid in (" & xtreenode & ")"
  if request("debug")<>"" then response.write "<xnodesql><![cdata[" & sql & "]]></xnodesql>"
  set rs = conn.execute(sql)
  if not rs.eof then
  xdatanode = rs("ctunitid")
  xbasetablename = lcase(rs("sbasetablename"))
  response.write "<" & nulltext(xdataset.selectsinglenode("datalable")) _
    & " xnode=""" & rs("ctnodeid") & """ xunit=""" & xdatanode & """>"
   response.write "<caption>" & nulltext(xdataset.selectsinglenode("dataremark")) & "</caption>"
    
 headercount = nulltext(xdataset.selectsinglenode("sqltop"))
 headerrandom = nulltext(xdataset.selectsinglenode("israndom"))
 if headercount<>"" then headercount = "top " & headercount
 
 sql = "select " & headercount & " htx.*, xr1.deptname, u.ctunitname, n.ctnodeid " 
 if headerrandom<>"" then sql=sql & ", rand (((icuitem+datepart(ms, getdate()))*100000)%3771) as ra" 
  sql=sql &   " from cudtgeneric as htx " _
   & " join ctunit as u on u.ctunitid=htx.ictunit" _
   & " join cattreenode as n on n.ctunitid=htx.ictunit" _
   & " left join dept as xr1 on xr1.deptid=htx.idept" _
   & " where htx.fctupublic='y' " _
   & " and (htx.avend is null or htx.avend >=" & pkstr(date(),")") _
   & " and (htx.avbegin is null or htx.avbegin <=" & pkstr(date(),")") 
'  & " left join cudtwimg as img on img.gicuitem=htx.icuitem" _
' if xdatanode<>"" then  sql = sql & " and ictunit=" & xdatanode
 if xtreenode<>"" then  sql = sql & " and n.ctnodeid in (" & xtreenode & ")"
  
 sqlcondition = nulltext(xdataset.selectsinglenode("sqlcondition"))
 if sqlcondition<>"" then sql = sql & " and " & sqlcondition
 sqlorderby = nulltext(xdataset.selectsinglenode("sqlorderby"))
 if sqlorderby<>"" then sql = sql & " order by " & sqlorderby
' xtn = split(xtreenode, ",")
' xtreenode = xtn(0)
 if request("debug")<>"" then response.write "<datasetsql><![cdata[" & sql & "]]></datasetsql>"
 set rs = conn.execute(sql)
 while not rs.eof
     xurl = "ct.asp?xitem=" & rs("icuitem") & "&amp;ctnode=" & rs("ctnodeid")
     if rs("ibasedsd") = 2 then xurl = deamp(rs("xurl"))
     if xbasetablename = "adrotate" then xurl = deamp(rs("xurl"))
     if rs("showtype") = 2 then xurl = deamp(rs("xurl"))
     if rs("showtype") = 3 then xurl = "public/data/" & rs("filedownload")
     if rs("showtype") = 5 then xurl = "content.asp?cuitem=" & rs("refid")
     
 

                      =rs("icuitem"):                =rs("xnewwindow")
              =deamp(rs("stitle"))
                       =left(dehtml(rs("xbody")),120)
                          =rs("xbody")
               =rs("xpostdate")
                =rs("deptname")
             =rs("vgroup")
             =rs("topcat")
                 =deamp(rs("ctunitname"))
           =deamp(xurl)
    if not isnull(rs("ximgfile")) then 
                           =rs("ximgfile")
    end if 

  
'  response.write "<icuitem>" & rs("icuitem") & "</icuitem>"
  qsql = "select htx.* from  cudtattach as htx  where htx.xicuitem=" & rs("icuitem") & " and htx.blist='y' and htx.attachkinda!='' order by htx.attachtype"
'  response.write "<icuitem>" & qsql & "</icuitem>"
  set qsreg = conn.execute(qsql)
  while not qsreg.eof

             =qsreg("nfilename")
                 =qsreg("attachkinda")
    
  qsreg.movenext
  wend

  
fsql = "select dhtx.*, n.*" _
  & " from cudtpage as dhtx" _
  & " join cudtgeneric as n on dhtx.npageid=n.icuitem" _
  & " where blist='y'" _
  & " and dhtx.xicuitem=" & pkstr(rs("icuitem"),"") _
  & " order by dhtx.listseq"
 set rslist = conn.execute(fsql)
 response.write "<referencelist>" & vbcrlf
 while not rslist.eof
  response.write "<reference icuitem='" & rslist("npageid") & "'><url>content.asp?cuitem=" & rslist("npageid") _
   & "</url><caption><![cdata[" & rslist("atitle") & "]]></caption>" _
   & "<ximgfile>" & rslist("ximgfile") & "</ximgfile></reference>"

  rslist.movenext
 wend
 response.write "</referencelist>"




    
  rs.movenext
 wend

 set oxml = server.createobject("microsoft.xmldom")
 oxml.async = false
 oxml.setproperty("serverhttprequest") = true 

 for each xrss in xdataset.selectnodes("rss")
   xv = oxml.load(nulltext(xrss.selectsinglenode("url")))
   if xv = true then
    rsstop = cint(nulltext(xrss.selectsinglenode("rsstop")))
    xrsscount = 0
    for each xitem in oxml.selectnodes("rss/channel/item")
      if xrsscount < rsstop then
       xrsscount = xrsscount + 1


              =nulltext(xitem.selectsinglenode("title"))
                       =demthl(nulltext(xitem.selectsinglenode("description")))
               =nulltext(xitem.selectsinglenode("pubdate"))
           =nulltext(xitem.selectsinglenode("link"))

    
    end if
    next
   end if
 next
   response.write "</" & nulltext(xdataset.selectsinglenode("datalable")) & ">"
  end if
end sub

function dehtml(tempstr)
  xs = tempstr
  if xs="" or isnull(xs) then
   dehtml=""
   exit function
  end if
 xs = replacetest("<[^>]*>", "", xs) '-- <.......>
   xs = replace(xs,vbcrlf&vbcrlf,"<p>")
   xs = replace(xs,vbcrlf,"<br>")
   dehtml = replace(xs,chr(10),"<br>")
end function

function replacetest(patrn, replstr, str1)
  dim regex               ' create variables.
'  str1 = "the quick brown fox jumped over the lazy dog."
  set regex = new regexp            ' create regular expression.
  regex.pattern = patrn            ' set pattern.
  regex.ignorecase = true            ' make case insensitive.
  regex.global = true   ' set global applicability.
  replacetest = regex.replace(str1, replstr)   ' make replacement.
end function


 