#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.4927
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="coa")]
public partial class coaDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCATEGORY(CATEGORY instance);
  partial void UpdateCATEGORY(CATEGORY instance);
  partial void DeleteCATEGORY(CATEGORY instance);
  partial void InsertREPORT(REPORT instance);
  partial void UpdateREPORT(REPORT instance);
  partial void DeleteREPORT(REPORT instance);
  partial void InsertACTOR_INFO(ACTOR_INFO instance);
  partial void UpdateACTOR_INFO(ACTOR_INFO instance);
  partial void DeleteACTOR_INFO(ACTOR_INFO instance);
  partial void InsertCAT2RPT(CAT2RPT instance);
  partial void UpdateCAT2RPT(CAT2RPT instance);
  partial void DeleteCAT2RPT(CAT2RPT instance);
  partial void InsertRESOURCE_RIGHT(RESOURCE_RIGHT instance);
  partial void UpdateRESOURCE_RIGHT(RESOURCE_RIGHT instance);
  partial void DeleteRESOURCE_RIGHT(RESOURCE_RIGHT instance);
  #endregion
	
	public coaDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["coaConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public coaDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public coaDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public coaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public coaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<CATEGORY> CATEGORY
	{
		get
		{
			return this.GetTable<CATEGORY>();
		}
	}
	
	public System.Data.Linq.Table<REPORT> REPORT
	{
		get
		{
			return this.GetTable<REPORT>();
		}
	}
	
	public System.Data.Linq.Table<ACTOR_INFO> ACTOR_INFO
	{
		get
		{
			return this.GetTable<ACTOR_INFO>();
		}
	}
	
	public System.Data.Linq.Table<CAT2RPT> CAT2RPT
	{
		get
		{
			return this.GetTable<CAT2RPT>();
		}
	}
	
	public System.Data.Linq.Table<RESOURCE_RIGHT> RESOURCE_RIGHT
	{
		get
		{
			return this.GetTable<RESOURCE_RIGHT>();
		}
	}
}

[Table(Name="dbo.CATEGORY")]
public partial class CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _DATA_BASE_ID;
	
	private string _CATEGORY_ID;
	
	private string _CATEGORY_NAME;
	
	private string _PARENT_CATEGORY_ID;
	
	private int _DEGREE;
	
	private int _DISPLAY_ORDER;
	
	private string _CATEGORY_DESC;
	
	private System.DateTime _CREATE_TIME;
	
	private string _KEEPER;
	
	private string _DEFAULT_REPORT_ID;
	
	private int _AUTOID;
	
	private System.Nullable<char> _isCatRightInherited;
	
	private string _RPT_APPROVER;
	
	private System.Nullable<int> _NewCategoryId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDATA_BASE_IDChanging(string value);
    partial void OnDATA_BASE_IDChanged();
    partial void OnCATEGORY_IDChanging(string value);
    partial void OnCATEGORY_IDChanged();
    partial void OnCATEGORY_NAMEChanging(string value);
    partial void OnCATEGORY_NAMEChanged();
    partial void OnPARENT_CATEGORY_IDChanging(string value);
    partial void OnPARENT_CATEGORY_IDChanged();
    partial void OnDEGREEChanging(int value);
    partial void OnDEGREEChanged();
    partial void OnDISPLAY_ORDERChanging(int value);
    partial void OnDISPLAY_ORDERChanged();
    partial void OnCATEGORY_DESCChanging(string value);
    partial void OnCATEGORY_DESCChanged();
    partial void OnCREATE_TIMEChanging(System.DateTime value);
    partial void OnCREATE_TIMEChanged();
    partial void OnKEEPERChanging(string value);
    partial void OnKEEPERChanged();
    partial void OnDEFAULT_REPORT_IDChanging(string value);
    partial void OnDEFAULT_REPORT_IDChanged();
    partial void OnAUTOIDChanging(int value);
    partial void OnAUTOIDChanged();
    partial void OnisCatRightInheritedChanging(System.Nullable<char> value);
    partial void OnisCatRightInheritedChanged();
    partial void OnRPT_APPROVERChanging(string value);
    partial void OnRPT_APPROVERChanged();
    partial void OnNewCategoryIdChanging(System.Nullable<int> value);
    partial void OnNewCategoryIdChanged();
    #endregion
	
	public CATEGORY()
	{
		OnCreated();
	}
	
	[Column(Storage="_DATA_BASE_ID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string DATA_BASE_ID
	{
		get
		{
			return this._DATA_BASE_ID;
		}
		set
		{
			if ((this._DATA_BASE_ID != value))
			{
				this.OnDATA_BASE_IDChanging(value);
				this.SendPropertyChanging();
				this._DATA_BASE_ID = value;
				this.SendPropertyChanged("DATA_BASE_ID");
				this.OnDATA_BASE_IDChanged();
			}
		}
	}
	
	[Column(Storage="_CATEGORY_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CATEGORY_ID
	{
		get
		{
			return this._CATEGORY_ID;
		}
		set
		{
			if ((this._CATEGORY_ID != value))
			{
				this.OnCATEGORY_IDChanging(value);
				this.SendPropertyChanging();
				this._CATEGORY_ID = value;
				this.SendPropertyChanged("CATEGORY_ID");
				this.OnCATEGORY_IDChanged();
			}
		}
	}
	
	[Column(Storage="_CATEGORY_NAME", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
	public string CATEGORY_NAME
	{
		get
		{
			return this._CATEGORY_NAME;
		}
		set
		{
			if ((this._CATEGORY_NAME != value))
			{
				this.OnCATEGORY_NAMEChanging(value);
				this.SendPropertyChanging();
				this._CATEGORY_NAME = value;
				this.SendPropertyChanged("CATEGORY_NAME");
				this.OnCATEGORY_NAMEChanged();
			}
		}
	}
	
	[Column(Storage="_PARENT_CATEGORY_ID", DbType="VarChar(20)")]
	public string PARENT_CATEGORY_ID
	{
		get
		{
			return this._PARENT_CATEGORY_ID;
		}
		set
		{
			if ((this._PARENT_CATEGORY_ID != value))
			{
				this.OnPARENT_CATEGORY_IDChanging(value);
				this.SendPropertyChanging();
				this._PARENT_CATEGORY_ID = value;
				this.SendPropertyChanged("PARENT_CATEGORY_ID");
				this.OnPARENT_CATEGORY_IDChanged();
			}
		}
	}
	
	[Column(Storage="_DEGREE", DbType="Int NOT NULL")]
	public int DEGREE
	{
		get
		{
			return this._DEGREE;
		}
		set
		{
			if ((this._DEGREE != value))
			{
				this.OnDEGREEChanging(value);
				this.SendPropertyChanging();
				this._DEGREE = value;
				this.SendPropertyChanged("DEGREE");
				this.OnDEGREEChanged();
			}
		}
	}
	
	[Column(Storage="_DISPLAY_ORDER", DbType="Int NOT NULL")]
	public int DISPLAY_ORDER
	{
		get
		{
			return this._DISPLAY_ORDER;
		}
		set
		{
			if ((this._DISPLAY_ORDER != value))
			{
				this.OnDISPLAY_ORDERChanging(value);
				this.SendPropertyChanging();
				this._DISPLAY_ORDER = value;
				this.SendPropertyChanged("DISPLAY_ORDER");
				this.OnDISPLAY_ORDERChanged();
			}
		}
	}
	
	[Column(Storage="_CATEGORY_DESC", DbType="VarChar(50)")]
	public string CATEGORY_DESC
	{
		get
		{
			return this._CATEGORY_DESC;
		}
		set
		{
			if ((this._CATEGORY_DESC != value))
			{
				this.OnCATEGORY_DESCChanging(value);
				this.SendPropertyChanging();
				this._CATEGORY_DESC = value;
				this.SendPropertyChanged("CATEGORY_DESC");
				this.OnCATEGORY_DESCChanged();
			}
		}
	}
	
	[Column(Storage="_CREATE_TIME", DbType="DateTime NOT NULL")]
	public System.DateTime CREATE_TIME
	{
		get
		{
			return this._CREATE_TIME;
		}
		set
		{
			if ((this._CREATE_TIME != value))
			{
				this.OnCREATE_TIMEChanging(value);
				this.SendPropertyChanging();
				this._CREATE_TIME = value;
				this.SendPropertyChanged("CREATE_TIME");
				this.OnCREATE_TIMEChanged();
			}
		}
	}
	
	[Column(Storage="_KEEPER", DbType="VarChar(20)")]
	public string KEEPER
	{
		get
		{
			return this._KEEPER;
		}
		set
		{
			if ((this._KEEPER != value))
			{
				this.OnKEEPERChanging(value);
				this.SendPropertyChanging();
				this._KEEPER = value;
				this.SendPropertyChanged("KEEPER");
				this.OnKEEPERChanged();
			}
		}
	}
	
	[Column(Storage="_DEFAULT_REPORT_ID", DbType="VarChar(15)")]
	public string DEFAULT_REPORT_ID
	{
		get
		{
			return this._DEFAULT_REPORT_ID;
		}
		set
		{
			if ((this._DEFAULT_REPORT_ID != value))
			{
				this.OnDEFAULT_REPORT_IDChanging(value);
				this.SendPropertyChanging();
				this._DEFAULT_REPORT_ID = value;
				this.SendPropertyChanged("DEFAULT_REPORT_ID");
				this.OnDEFAULT_REPORT_IDChanged();
			}
		}
	}
	
	[Column(Storage="_AUTOID", DbType="Int NOT NULL")]
	public int AUTOID
	{
		get
		{
			return this._AUTOID;
		}
		set
		{
			if ((this._AUTOID != value))
			{
				this.OnAUTOIDChanging(value);
				this.SendPropertyChanging();
				this._AUTOID = value;
				this.SendPropertyChanged("AUTOID");
				this.OnAUTOIDChanged();
			}
		}
	}
	
	[Column(Storage="_isCatRightInherited", DbType="VarChar(1)")]
	public System.Nullable<char> isCatRightInherited
	{
		get
		{
			return this._isCatRightInherited;
		}
		set
		{
			if ((this._isCatRightInherited != value))
			{
				this.OnisCatRightInheritedChanging(value);
				this.SendPropertyChanging();
				this._isCatRightInherited = value;
				this.SendPropertyChanged("isCatRightInherited");
				this.OnisCatRightInheritedChanged();
			}
		}
	}
	
	[Column(Storage="_RPT_APPROVER", DbType="VarChar(20)")]
	public string RPT_APPROVER
	{
		get
		{
			return this._RPT_APPROVER;
		}
		set
		{
			if ((this._RPT_APPROVER != value))
			{
				this.OnRPT_APPROVERChanging(value);
				this.SendPropertyChanging();
				this._RPT_APPROVER = value;
				this.SendPropertyChanged("RPT_APPROVER");
				this.OnRPT_APPROVERChanged();
			}
		}
	}
	
	[Column(Storage="_NewCategoryId", DbType="Int")]
	public System.Nullable<int> NewCategoryId
	{
		get
		{
			return this._NewCategoryId;
		}
		set
		{
			if ((this._NewCategoryId != value))
			{
				this.OnNewCategoryIdChanging(value);
				this.SendPropertyChanging();
				this._NewCategoryId = value;
				this.SendPropertyChanged("NewCategoryId");
				this.OnNewCategoryIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.REPORT")]
public partial class REPORT : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _REPORT_ID;
	
	private int _VERSION_NO;
	
	private string _TO_UPDATE_REPORT_ID;
	
	private string _SUBJECT;
	
	private string _KEYWORDS;
	
	private int _CLICK_COUNT;
	
	private string _AUTHOR;
	
	private int _SECRET;
	
	private string _COPY_OR_NOT;
	
	private string _PRINT_OR_NOT;
	
	private string _REPORT_TYPE1_ID;
	
	private string _REPORT_TYPE2_ID;
	
	private string _DESCRIPTION;
	
	private System.DateTime _CREATE_DATE;
	
	private System.DateTime _ONLINE_DATE;
	
	private string _STATUS;
	
	private string _REFERENCE;
	
	private string _CREATE_USER;
	
	private string _MODIFY_USER;
	
	private System.DateTime _MODIFY_DATE;
	
	private System.Nullable<int> _REFER_SIZE;
	
	private string _JOURNAL;
	
	private string _FOREIGN_SUBJECT;
	
	private string _INSTITUTION;
	
	private string _DOMAINS;
	
	private string _FOREIGN_AUTHOR;
	
	private string _FOREIGN_DESCRIPTION;
	
	private string _FOREIGN_KEYWORDS;
	
	private string _PUBLISHER;
	
	private string _PUBLISHED_YEAR_MONTH;
	
	private string _CONTACT_AUTHOR;
	
	private string _CONTACT_AUTHOR_EMAIL;
	
	private string _EMAILS;
	
	private string _EDITOR;
	
	private string _FOREIGN_EDITOR;
	
	private char _INDEX_OR_NOT;
	
	private char _HYKIX_OR_NOT;
	
	private System.Nullable<int> _HaveBuildIndex;
	
	private string _XURL;
	
	private System.Nullable<int> _transfm_DocId;
	
	private string _transfm_ResultMsg;
	
	private System.Nullable<System.DateTime> _transfm_Datetime;
	
	private System.Nullable<int> _DOCUMENT_ID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnREPORT_IDChanging(string value);
    partial void OnREPORT_IDChanged();
    partial void OnVERSION_NOChanging(int value);
    partial void OnVERSION_NOChanged();
    partial void OnTO_UPDATE_REPORT_IDChanging(string value);
    partial void OnTO_UPDATE_REPORT_IDChanged();
    partial void OnSUBJECTChanging(string value);
    partial void OnSUBJECTChanged();
    partial void OnKEYWORDSChanging(string value);
    partial void OnKEYWORDSChanged();
    partial void OnCLICK_COUNTChanging(int value);
    partial void OnCLICK_COUNTChanged();
    partial void OnAUTHORChanging(string value);
    partial void OnAUTHORChanged();
    partial void OnSECRETChanging(int value);
    partial void OnSECRETChanged();
    partial void OnCOPY_OR_NOTChanging(string value);
    partial void OnCOPY_OR_NOTChanged();
    partial void OnPRINT_OR_NOTChanging(string value);
    partial void OnPRINT_OR_NOTChanged();
    partial void OnREPORT_TYPE1_IDChanging(string value);
    partial void OnREPORT_TYPE1_IDChanged();
    partial void OnREPORT_TYPE2_IDChanging(string value);
    partial void OnREPORT_TYPE2_IDChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnCREATE_DATEChanging(System.DateTime value);
    partial void OnCREATE_DATEChanged();
    partial void OnONLINE_DATEChanging(System.DateTime value);
    partial void OnONLINE_DATEChanged();
    partial void OnSTATUSChanging(string value);
    partial void OnSTATUSChanged();
    partial void OnREFERENCEChanging(string value);
    partial void OnREFERENCEChanged();
    partial void OnCREATE_USERChanging(string value);
    partial void OnCREATE_USERChanged();
    partial void OnMODIFY_USERChanging(string value);
    partial void OnMODIFY_USERChanged();
    partial void OnMODIFY_DATEChanging(System.DateTime value);
    partial void OnMODIFY_DATEChanged();
    partial void OnREFER_SIZEChanging(System.Nullable<int> value);
    partial void OnREFER_SIZEChanged();
    partial void OnJOURNALChanging(string value);
    partial void OnJOURNALChanged();
    partial void OnFOREIGN_SUBJECTChanging(string value);
    partial void OnFOREIGN_SUBJECTChanged();
    partial void OnINSTITUTIONChanging(string value);
    partial void OnINSTITUTIONChanged();
    partial void OnDOMAINSChanging(string value);
    partial void OnDOMAINSChanged();
    partial void OnFOREIGN_AUTHORChanging(string value);
    partial void OnFOREIGN_AUTHORChanged();
    partial void OnFOREIGN_DESCRIPTIONChanging(string value);
    partial void OnFOREIGN_DESCRIPTIONChanged();
    partial void OnFOREIGN_KEYWORDSChanging(string value);
    partial void OnFOREIGN_KEYWORDSChanged();
    partial void OnPUBLISHERChanging(string value);
    partial void OnPUBLISHERChanged();
    partial void OnPUBLISHED_YEAR_MONTHChanging(string value);
    partial void OnPUBLISHED_YEAR_MONTHChanged();
    partial void OnCONTACT_AUTHORChanging(string value);
    partial void OnCONTACT_AUTHORChanged();
    partial void OnCONTACT_AUTHOR_EMAILChanging(string value);
    partial void OnCONTACT_AUTHOR_EMAILChanged();
    partial void OnEMAILSChanging(string value);
    partial void OnEMAILSChanged();
    partial void OnEDITORChanging(string value);
    partial void OnEDITORChanged();
    partial void OnFOREIGN_EDITORChanging(string value);
    partial void OnFOREIGN_EDITORChanged();
    partial void OnINDEX_OR_NOTChanging(char value);
    partial void OnINDEX_OR_NOTChanged();
    partial void OnHYKIX_OR_NOTChanging(char value);
    partial void OnHYKIX_OR_NOTChanged();
    partial void OnHaveBuildIndexChanging(System.Nullable<int> value);
    partial void OnHaveBuildIndexChanged();
    partial void OnXURLChanging(string value);
    partial void OnXURLChanged();
    partial void Ontransfm_DocIdChanging(System.Nullable<int> value);
    partial void Ontransfm_DocIdChanged();
    partial void Ontransfm_ResultMsgChanging(string value);
    partial void Ontransfm_ResultMsgChanged();
    partial void Ontransfm_DatetimeChanging(System.Nullable<System.DateTime> value);
    partial void Ontransfm_DatetimeChanged();
    partial void OnDOCUMENT_IDChanging(System.Nullable<int> value);
    partial void OnDOCUMENT_IDChanged();
    #endregion
	
	public REPORT()
	{
		OnCreated();
	}
	
	[Column(Storage="_REPORT_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string REPORT_ID
	{
		get
		{
			return this._REPORT_ID;
		}
		set
		{
			if ((this._REPORT_ID != value))
			{
				this.OnREPORT_IDChanging(value);
				this.SendPropertyChanging();
				this._REPORT_ID = value;
				this.SendPropertyChanged("REPORT_ID");
				this.OnREPORT_IDChanged();
			}
		}
	}
	
	[Column(Storage="_VERSION_NO", DbType="Int NOT NULL")]
	public int VERSION_NO
	{
		get
		{
			return this._VERSION_NO;
		}
		set
		{
			if ((this._VERSION_NO != value))
			{
				this.OnVERSION_NOChanging(value);
				this.SendPropertyChanging();
				this._VERSION_NO = value;
				this.SendPropertyChanged("VERSION_NO");
				this.OnVERSION_NOChanged();
			}
		}
	}
	
	[Column(Storage="_TO_UPDATE_REPORT_ID", DbType="VarChar(15)")]
	public string TO_UPDATE_REPORT_ID
	{
		get
		{
			return this._TO_UPDATE_REPORT_ID;
		}
		set
		{
			if ((this._TO_UPDATE_REPORT_ID != value))
			{
				this.OnTO_UPDATE_REPORT_IDChanging(value);
				this.SendPropertyChanging();
				this._TO_UPDATE_REPORT_ID = value;
				this.SendPropertyChanged("TO_UPDATE_REPORT_ID");
				this.OnTO_UPDATE_REPORT_IDChanged();
			}
		}
	}
	
	[Column(Storage="_SUBJECT", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
	public string SUBJECT
	{
		get
		{
			return this._SUBJECT;
		}
		set
		{
			if ((this._SUBJECT != value))
			{
				this.OnSUBJECTChanging(value);
				this.SendPropertyChanging();
				this._SUBJECT = value;
				this.SendPropertyChanged("SUBJECT");
				this.OnSUBJECTChanged();
			}
		}
	}
	
	[Column(Storage="_KEYWORDS", DbType="VarChar(800)")]
	public string KEYWORDS
	{
		get
		{
			return this._KEYWORDS;
		}
		set
		{
			if ((this._KEYWORDS != value))
			{
				this.OnKEYWORDSChanging(value);
				this.SendPropertyChanging();
				this._KEYWORDS = value;
				this.SendPropertyChanged("KEYWORDS");
				this.OnKEYWORDSChanged();
			}
		}
	}
	
	[Column(Storage="_CLICK_COUNT", DbType="Int NOT NULL")]
	public int CLICK_COUNT
	{
		get
		{
			return this._CLICK_COUNT;
		}
		set
		{
			if ((this._CLICK_COUNT != value))
			{
				this.OnCLICK_COUNTChanging(value);
				this.SendPropertyChanging();
				this._CLICK_COUNT = value;
				this.SendPropertyChanged("CLICK_COUNT");
				this.OnCLICK_COUNTChanged();
			}
		}
	}
	
	[Column(Storage="_AUTHOR", DbType="VarChar(500)")]
	public string AUTHOR
	{
		get
		{
			return this._AUTHOR;
		}
		set
		{
			if ((this._AUTHOR != value))
			{
				this.OnAUTHORChanging(value);
				this.SendPropertyChanging();
				this._AUTHOR = value;
				this.SendPropertyChanged("AUTHOR");
				this.OnAUTHORChanged();
			}
		}
	}
	
	[Column(Storage="_SECRET", DbType="Int NOT NULL")]
	public int SECRET
	{
		get
		{
			return this._SECRET;
		}
		set
		{
			if ((this._SECRET != value))
			{
				this.OnSECRETChanging(value);
				this.SendPropertyChanging();
				this._SECRET = value;
				this.SendPropertyChanged("SECRET");
				this.OnSECRETChanged();
			}
		}
	}
	
	[Column(Storage="_COPY_OR_NOT", DbType="VarChar(5)")]
	public string COPY_OR_NOT
	{
		get
		{
			return this._COPY_OR_NOT;
		}
		set
		{
			if ((this._COPY_OR_NOT != value))
			{
				this.OnCOPY_OR_NOTChanging(value);
				this.SendPropertyChanging();
				this._COPY_OR_NOT = value;
				this.SendPropertyChanged("COPY_OR_NOT");
				this.OnCOPY_OR_NOTChanged();
			}
		}
	}
	
	[Column(Storage="_PRINT_OR_NOT", DbType="VarChar(5)")]
	public string PRINT_OR_NOT
	{
		get
		{
			return this._PRINT_OR_NOT;
		}
		set
		{
			if ((this._PRINT_OR_NOT != value))
			{
				this.OnPRINT_OR_NOTChanging(value);
				this.SendPropertyChanging();
				this._PRINT_OR_NOT = value;
				this.SendPropertyChanged("PRINT_OR_NOT");
				this.OnPRINT_OR_NOTChanged();
			}
		}
	}
	
	[Column(Storage="_REPORT_TYPE1_ID", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
	public string REPORT_TYPE1_ID
	{
		get
		{
			return this._REPORT_TYPE1_ID;
		}
		set
		{
			if ((this._REPORT_TYPE1_ID != value))
			{
				this.OnREPORT_TYPE1_IDChanging(value);
				this.SendPropertyChanging();
				this._REPORT_TYPE1_ID = value;
				this.SendPropertyChanged("REPORT_TYPE1_ID");
				this.OnREPORT_TYPE1_IDChanged();
			}
		}
	}
	
	[Column(Storage="_REPORT_TYPE2_ID", DbType="VarChar(2)")]
	public string REPORT_TYPE2_ID
	{
		get
		{
			return this._REPORT_TYPE2_ID;
		}
		set
		{
			if ((this._REPORT_TYPE2_ID != value))
			{
				this.OnREPORT_TYPE2_IDChanging(value);
				this.SendPropertyChanging();
				this._REPORT_TYPE2_ID = value;
				this.SendPropertyChanged("REPORT_TYPE2_ID");
				this.OnREPORT_TYPE2_IDChanged();
			}
		}
	}
	
	[Column(Storage="_DESCRIPTION", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string DESCRIPTION
	{
		get
		{
			return this._DESCRIPTION;
		}
		set
		{
			if ((this._DESCRIPTION != value))
			{
				this.OnDESCRIPTIONChanging(value);
				this.SendPropertyChanging();
				this._DESCRIPTION = value;
				this.SendPropertyChanged("DESCRIPTION");
				this.OnDESCRIPTIONChanged();
			}
		}
	}
	
	[Column(Storage="_CREATE_DATE", DbType="DateTime NOT NULL")]
	public System.DateTime CREATE_DATE
	{
		get
		{
			return this._CREATE_DATE;
		}
		set
		{
			if ((this._CREATE_DATE != value))
			{
				this.OnCREATE_DATEChanging(value);
				this.SendPropertyChanging();
				this._CREATE_DATE = value;
				this.SendPropertyChanged("CREATE_DATE");
				this.OnCREATE_DATEChanged();
			}
		}
	}
	
	[Column(Storage="_ONLINE_DATE", DbType="DateTime NOT NULL")]
	public System.DateTime ONLINE_DATE
	{
		get
		{
			return this._ONLINE_DATE;
		}
		set
		{
			if ((this._ONLINE_DATE != value))
			{
				this.OnONLINE_DATEChanging(value);
				this.SendPropertyChanging();
				this._ONLINE_DATE = value;
				this.SendPropertyChanged("ONLINE_DATE");
				this.OnONLINE_DATEChanged();
			}
		}
	}
	
	[Column(Storage="_STATUS", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
	public string STATUS
	{
		get
		{
			return this._STATUS;
		}
		set
		{
			if ((this._STATUS != value))
			{
				this.OnSTATUSChanging(value);
				this.SendPropertyChanging();
				this._STATUS = value;
				this.SendPropertyChanged("STATUS");
				this.OnSTATUSChanged();
			}
		}
	}
	
	[Column(Storage="_REFERENCE", DbType="VarChar(100)")]
	public string REFERENCE
	{
		get
		{
			return this._REFERENCE;
		}
		set
		{
			if ((this._REFERENCE != value))
			{
				this.OnREFERENCEChanging(value);
				this.SendPropertyChanging();
				this._REFERENCE = value;
				this.SendPropertyChanged("REFERENCE");
				this.OnREFERENCEChanged();
			}
		}
	}
	
	[Column(Storage="_CREATE_USER", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string CREATE_USER
	{
		get
		{
			return this._CREATE_USER;
		}
		set
		{
			if ((this._CREATE_USER != value))
			{
				this.OnCREATE_USERChanging(value);
				this.SendPropertyChanging();
				this._CREATE_USER = value;
				this.SendPropertyChanged("CREATE_USER");
				this.OnCREATE_USERChanged();
			}
		}
	}
	
	[Column(Storage="_MODIFY_USER", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string MODIFY_USER
	{
		get
		{
			return this._MODIFY_USER;
		}
		set
		{
			if ((this._MODIFY_USER != value))
			{
				this.OnMODIFY_USERChanging(value);
				this.SendPropertyChanging();
				this._MODIFY_USER = value;
				this.SendPropertyChanged("MODIFY_USER");
				this.OnMODIFY_USERChanged();
			}
		}
	}
	
	[Column(Storage="_MODIFY_DATE", DbType="DateTime NOT NULL")]
	public System.DateTime MODIFY_DATE
	{
		get
		{
			return this._MODIFY_DATE;
		}
		set
		{
			if ((this._MODIFY_DATE != value))
			{
				this.OnMODIFY_DATEChanging(value);
				this.SendPropertyChanging();
				this._MODIFY_DATE = value;
				this.SendPropertyChanged("MODIFY_DATE");
				this.OnMODIFY_DATEChanged();
			}
		}
	}
	
	[Column(Storage="_REFER_SIZE", DbType="Int")]
	public System.Nullable<int> REFER_SIZE
	{
		get
		{
			return this._REFER_SIZE;
		}
		set
		{
			if ((this._REFER_SIZE != value))
			{
				this.OnREFER_SIZEChanging(value);
				this.SendPropertyChanging();
				this._REFER_SIZE = value;
				this.SendPropertyChanged("REFER_SIZE");
				this.OnREFER_SIZEChanged();
			}
		}
	}
	
	[Column(Storage="_JOURNAL", DbType="VarChar(100)")]
	public string JOURNAL
	{
		get
		{
			return this._JOURNAL;
		}
		set
		{
			if ((this._JOURNAL != value))
			{
				this.OnJOURNALChanging(value);
				this.SendPropertyChanging();
				this._JOURNAL = value;
				this.SendPropertyChanged("JOURNAL");
				this.OnJOURNALChanged();
			}
		}
	}
	
	[Column(Storage="_FOREIGN_SUBJECT", DbType="VarChar(400)")]
	public string FOREIGN_SUBJECT
	{
		get
		{
			return this._FOREIGN_SUBJECT;
		}
		set
		{
			if ((this._FOREIGN_SUBJECT != value))
			{
				this.OnFOREIGN_SUBJECTChanging(value);
				this.SendPropertyChanging();
				this._FOREIGN_SUBJECT = value;
				this.SendPropertyChanged("FOREIGN_SUBJECT");
				this.OnFOREIGN_SUBJECTChanged();
			}
		}
	}
	
	[Column(Storage="_INSTITUTION", DbType="VarChar(200)")]
	public string INSTITUTION
	{
		get
		{
			return this._INSTITUTION;
		}
		set
		{
			if ((this._INSTITUTION != value))
			{
				this.OnINSTITUTIONChanging(value);
				this.SendPropertyChanging();
				this._INSTITUTION = value;
				this.SendPropertyChanged("INSTITUTION");
				this.OnINSTITUTIONChanged();
			}
		}
	}
	
	[Column(Storage="_DOMAINS", DbType="VarChar(200)")]
	public string DOMAINS
	{
		get
		{
			return this._DOMAINS;
		}
		set
		{
			if ((this._DOMAINS != value))
			{
				this.OnDOMAINSChanging(value);
				this.SendPropertyChanging();
				this._DOMAINS = value;
				this.SendPropertyChanged("DOMAINS");
				this.OnDOMAINSChanged();
			}
		}
	}
	
	[Column(Storage="_FOREIGN_AUTHOR", DbType="VarChar(200)")]
	public string FOREIGN_AUTHOR
	{
		get
		{
			return this._FOREIGN_AUTHOR;
		}
		set
		{
			if ((this._FOREIGN_AUTHOR != value))
			{
				this.OnFOREIGN_AUTHORChanging(value);
				this.SendPropertyChanging();
				this._FOREIGN_AUTHOR = value;
				this.SendPropertyChanged("FOREIGN_AUTHOR");
				this.OnFOREIGN_AUTHORChanged();
			}
		}
	}
	
	[Column(Storage="_FOREIGN_DESCRIPTION", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string FOREIGN_DESCRIPTION
	{
		get
		{
			return this._FOREIGN_DESCRIPTION;
		}
		set
		{
			if ((this._FOREIGN_DESCRIPTION != value))
			{
				this.OnFOREIGN_DESCRIPTIONChanging(value);
				this.SendPropertyChanging();
				this._FOREIGN_DESCRIPTION = value;
				this.SendPropertyChanged("FOREIGN_DESCRIPTION");
				this.OnFOREIGN_DESCRIPTIONChanged();
			}
		}
	}
	
	[Column(Storage="_FOREIGN_KEYWORDS", DbType="VarChar(800)")]
	public string FOREIGN_KEYWORDS
	{
		get
		{
			return this._FOREIGN_KEYWORDS;
		}
		set
		{
			if ((this._FOREIGN_KEYWORDS != value))
			{
				this.OnFOREIGN_KEYWORDSChanging(value);
				this.SendPropertyChanging();
				this._FOREIGN_KEYWORDS = value;
				this.SendPropertyChanged("FOREIGN_KEYWORDS");
				this.OnFOREIGN_KEYWORDSChanged();
			}
		}
	}
	
	[Column(Storage="_PUBLISHER", DbType="VarChar(50)")]
	public string PUBLISHER
	{
		get
		{
			return this._PUBLISHER;
		}
		set
		{
			if ((this._PUBLISHER != value))
			{
				this.OnPUBLISHERChanging(value);
				this.SendPropertyChanging();
				this._PUBLISHER = value;
				this.SendPropertyChanged("PUBLISHER");
				this.OnPUBLISHERChanged();
			}
		}
	}
	
	[Column(Storage="_PUBLISHED_YEAR_MONTH", DbType="VarChar(20)")]
	public string PUBLISHED_YEAR_MONTH
	{
		get
		{
			return this._PUBLISHED_YEAR_MONTH;
		}
		set
		{
			if ((this._PUBLISHED_YEAR_MONTH != value))
			{
				this.OnPUBLISHED_YEAR_MONTHChanging(value);
				this.SendPropertyChanging();
				this._PUBLISHED_YEAR_MONTH = value;
				this.SendPropertyChanged("PUBLISHED_YEAR_MONTH");
				this.OnPUBLISHED_YEAR_MONTHChanged();
			}
		}
	}
	
	[Column(Storage="_CONTACT_AUTHOR", DbType="VarChar(20)")]
	public string CONTACT_AUTHOR
	{
		get
		{
			return this._CONTACT_AUTHOR;
		}
		set
		{
			if ((this._CONTACT_AUTHOR != value))
			{
				this.OnCONTACT_AUTHORChanging(value);
				this.SendPropertyChanging();
				this._CONTACT_AUTHOR = value;
				this.SendPropertyChanged("CONTACT_AUTHOR");
				this.OnCONTACT_AUTHORChanged();
			}
		}
	}
	
	[Column(Storage="_CONTACT_AUTHOR_EMAIL", DbType="VarChar(100)")]
	public string CONTACT_AUTHOR_EMAIL
	{
		get
		{
			return this._CONTACT_AUTHOR_EMAIL;
		}
		set
		{
			if ((this._CONTACT_AUTHOR_EMAIL != value))
			{
				this.OnCONTACT_AUTHOR_EMAILChanging(value);
				this.SendPropertyChanging();
				this._CONTACT_AUTHOR_EMAIL = value;
				this.SendPropertyChanged("CONTACT_AUTHOR_EMAIL");
				this.OnCONTACT_AUTHOR_EMAILChanged();
			}
		}
	}
	
	[Column(Storage="_EMAILS", DbType="VarChar(200)")]
	public string EMAILS
	{
		get
		{
			return this._EMAILS;
		}
		set
		{
			if ((this._EMAILS != value))
			{
				this.OnEMAILSChanging(value);
				this.SendPropertyChanging();
				this._EMAILS = value;
				this.SendPropertyChanged("EMAILS");
				this.OnEMAILSChanged();
			}
		}
	}
	
	[Column(Storage="_EDITOR", DbType="VarChar(200)")]
	public string EDITOR
	{
		get
		{
			return this._EDITOR;
		}
		set
		{
			if ((this._EDITOR != value))
			{
				this.OnEDITORChanging(value);
				this.SendPropertyChanging();
				this._EDITOR = value;
				this.SendPropertyChanged("EDITOR");
				this.OnEDITORChanged();
			}
		}
	}
	
	[Column(Storage="_FOREIGN_EDITOR", DbType="VarChar(200)")]
	public string FOREIGN_EDITOR
	{
		get
		{
			return this._FOREIGN_EDITOR;
		}
		set
		{
			if ((this._FOREIGN_EDITOR != value))
			{
				this.OnFOREIGN_EDITORChanging(value);
				this.SendPropertyChanging();
				this._FOREIGN_EDITOR = value;
				this.SendPropertyChanged("FOREIGN_EDITOR");
				this.OnFOREIGN_EDITORChanged();
			}
		}
	}
	
	[Column(Storage="_INDEX_OR_NOT", DbType="VarChar(1) NOT NULL")]
	public char INDEX_OR_NOT
	{
		get
		{
			return this._INDEX_OR_NOT;
		}
		set
		{
			if ((this._INDEX_OR_NOT != value))
			{
				this.OnINDEX_OR_NOTChanging(value);
				this.SendPropertyChanging();
				this._INDEX_OR_NOT = value;
				this.SendPropertyChanged("INDEX_OR_NOT");
				this.OnINDEX_OR_NOTChanged();
			}
		}
	}
	
	[Column(Storage="_HYKIX_OR_NOT", DbType="VarChar(1) NOT NULL")]
	public char HYKIX_OR_NOT
	{
		get
		{
			return this._HYKIX_OR_NOT;
		}
		set
		{
			if ((this._HYKIX_OR_NOT != value))
			{
				this.OnHYKIX_OR_NOTChanging(value);
				this.SendPropertyChanging();
				this._HYKIX_OR_NOT = value;
				this.SendPropertyChanged("HYKIX_OR_NOT");
				this.OnHYKIX_OR_NOTChanged();
			}
		}
	}
	
	[Column(Storage="_HaveBuildIndex", DbType="Int")]
	public System.Nullable<int> HaveBuildIndex
	{
		get
		{
			return this._HaveBuildIndex;
		}
		set
		{
			if ((this._HaveBuildIndex != value))
			{
				this.OnHaveBuildIndexChanging(value);
				this.SendPropertyChanging();
				this._HaveBuildIndex = value;
				this.SendPropertyChanged("HaveBuildIndex");
				this.OnHaveBuildIndexChanged();
			}
		}
	}
	
	[Column(Storage="_XURL", DbType="VarChar(500)")]
	public string XURL
	{
		get
		{
			return this._XURL;
		}
		set
		{
			if ((this._XURL != value))
			{
				this.OnXURLChanging(value);
				this.SendPropertyChanging();
				this._XURL = value;
				this.SendPropertyChanged("XURL");
				this.OnXURLChanged();
			}
		}
	}
	
	[Column(Storage="_transfm_DocId", DbType="Int")]
	public System.Nullable<int> transfm_DocId
	{
		get
		{
			return this._transfm_DocId;
		}
		set
		{
			if ((this._transfm_DocId != value))
			{
				this.Ontransfm_DocIdChanging(value);
				this.SendPropertyChanging();
				this._transfm_DocId = value;
				this.SendPropertyChanged("transfm_DocId");
				this.Ontransfm_DocIdChanged();
			}
		}
	}
	
	[Column(Storage="_transfm_ResultMsg", DbType="NVarChar(200)")]
	public string transfm_ResultMsg
	{
		get
		{
			return this._transfm_ResultMsg;
		}
		set
		{
			if ((this._transfm_ResultMsg != value))
			{
				this.Ontransfm_ResultMsgChanging(value);
				this.SendPropertyChanging();
				this._transfm_ResultMsg = value;
				this.SendPropertyChanged("transfm_ResultMsg");
				this.Ontransfm_ResultMsgChanged();
			}
		}
	}
	
	[Column(Storage="_transfm_Datetime", DbType="DateTime")]
	public System.Nullable<System.DateTime> transfm_Datetime
	{
		get
		{
			return this._transfm_Datetime;
		}
		set
		{
			if ((this._transfm_Datetime != value))
			{
				this.Ontransfm_DatetimeChanging(value);
				this.SendPropertyChanging();
				this._transfm_Datetime = value;
				this.SendPropertyChanged("transfm_Datetime");
				this.Ontransfm_DatetimeChanged();
			}
		}
	}
	
	[Column(Storage="_DOCUMENT_ID", DbType="Int")]
	public System.Nullable<int> DOCUMENT_ID
	{
		get
		{
			return this._DOCUMENT_ID;
		}
		set
		{
			if ((this._DOCUMENT_ID != value))
			{
				this.OnDOCUMENT_IDChanging(value);
				this.SendPropertyChanging();
				this._DOCUMENT_ID = value;
				this.SendPropertyChanged("DOCUMENT_ID");
				this.OnDOCUMENT_IDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.ACTOR_INFO")]
public partial class ACTOR_INFO : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ACTOR_ID;
	
	private string _ACTOR_INFO_ID;
	
	private string _ACTOR_DETAIL_NAME;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACTOR_IDChanging(string value);
    partial void OnACTOR_IDChanged();
    partial void OnACTOR_INFO_IDChanging(string value);
    partial void OnACTOR_INFO_IDChanged();
    partial void OnACTOR_DETAIL_NAMEChanging(string value);
    partial void OnACTOR_DETAIL_NAMEChanged();
    #endregion
	
	public ACTOR_INFO()
	{
		OnCreated();
	}
	
	[Column(Storage="_ACTOR_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ACTOR_ID
	{
		get
		{
			return this._ACTOR_ID;
		}
		set
		{
			if ((this._ACTOR_ID != value))
			{
				this.OnACTOR_IDChanging(value);
				this.SendPropertyChanging();
				this._ACTOR_ID = value;
				this.SendPropertyChanged("ACTOR_ID");
				this.OnACTOR_IDChanged();
			}
		}
	}
	
	[Column(Storage="_ACTOR_INFO_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ACTOR_INFO_ID
	{
		get
		{
			return this._ACTOR_INFO_ID;
		}
		set
		{
			if ((this._ACTOR_INFO_ID != value))
			{
				this.OnACTOR_INFO_IDChanging(value);
				this.SendPropertyChanging();
				this._ACTOR_INFO_ID = value;
				this.SendPropertyChanged("ACTOR_INFO_ID");
				this.OnACTOR_INFO_IDChanged();
			}
		}
	}
	
	[Column(Storage="_ACTOR_DETAIL_NAME", DbType="VarChar(50)")]
	public string ACTOR_DETAIL_NAME
	{
		get
		{
			return this._ACTOR_DETAIL_NAME;
		}
		set
		{
			if ((this._ACTOR_DETAIL_NAME != value))
			{
				this.OnACTOR_DETAIL_NAMEChanging(value);
				this.SendPropertyChanging();
				this._ACTOR_DETAIL_NAME = value;
				this.SendPropertyChanged("ACTOR_DETAIL_NAME");
				this.OnACTOR_DETAIL_NAMEChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.CAT2RPT")]
public partial class CAT2RPT : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _DATA_BASE_ID;
	
	private string _CATEGORY_ID;
	
	private string _REPORT_ID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDATA_BASE_IDChanging(string value);
    partial void OnDATA_BASE_IDChanged();
    partial void OnCATEGORY_IDChanging(string value);
    partial void OnCATEGORY_IDChanged();
    partial void OnREPORT_IDChanging(string value);
    partial void OnREPORT_IDChanged();
    #endregion
	
	public CAT2RPT()
	{
		OnCreated();
	}
	
	[Column(Storage="_DATA_BASE_ID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string DATA_BASE_ID
	{
		get
		{
			return this._DATA_BASE_ID;
		}
		set
		{
			if ((this._DATA_BASE_ID != value))
			{
				this.OnDATA_BASE_IDChanging(value);
				this.SendPropertyChanging();
				this._DATA_BASE_ID = value;
				this.SendPropertyChanged("DATA_BASE_ID");
				this.OnDATA_BASE_IDChanged();
			}
		}
	}
	
	[Column(Storage="_CATEGORY_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CATEGORY_ID
	{
		get
		{
			return this._CATEGORY_ID;
		}
		set
		{
			if ((this._CATEGORY_ID != value))
			{
				this.OnCATEGORY_IDChanging(value);
				this.SendPropertyChanging();
				this._CATEGORY_ID = value;
				this.SendPropertyChanged("CATEGORY_ID");
				this.OnCATEGORY_IDChanged();
			}
		}
	}
	
	[Column(Storage="_REPORT_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string REPORT_ID
	{
		get
		{
			return this._REPORT_ID;
		}
		set
		{
			if ((this._REPORT_ID != value))
			{
				this.OnREPORT_IDChanging(value);
				this.SendPropertyChanging();
				this._REPORT_ID = value;
				this.SendPropertyChanged("REPORT_ID");
				this.OnREPORT_IDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.RESOURCE_RIGHT")]
public partial class RESOURCE_RIGHT : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _RESOURCE_ID;
	
	private string _ACTOR_ID;
	
	private string _ACTOR_INFO_ID;
	
	private string _ACTION_ID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRESOURCE_IDChanging(string value);
    partial void OnRESOURCE_IDChanged();
    partial void OnACTOR_IDChanging(string value);
    partial void OnACTOR_IDChanged();
    partial void OnACTOR_INFO_IDChanging(string value);
    partial void OnACTOR_INFO_IDChanged();
    partial void OnACTION_IDChanging(string value);
    partial void OnACTION_IDChanged();
    #endregion
	
	public RESOURCE_RIGHT()
	{
		OnCreated();
	}
	
	[Column(Storage="_RESOURCE_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string RESOURCE_ID
	{
		get
		{
			return this._RESOURCE_ID;
		}
		set
		{
			if ((this._RESOURCE_ID != value))
			{
				this.OnRESOURCE_IDChanging(value);
				this.SendPropertyChanging();
				this._RESOURCE_ID = value;
				this.SendPropertyChanged("RESOURCE_ID");
				this.OnRESOURCE_IDChanged();
			}
		}
	}
	
	[Column(Storage="_ACTOR_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ACTOR_ID
	{
		get
		{
			return this._ACTOR_ID;
		}
		set
		{
			if ((this._ACTOR_ID != value))
			{
				this.OnACTOR_IDChanging(value);
				this.SendPropertyChanging();
				this._ACTOR_ID = value;
				this.SendPropertyChanged("ACTOR_ID");
				this.OnACTOR_IDChanged();
			}
		}
	}
	
	[Column(Storage="_ACTOR_INFO_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ACTOR_INFO_ID
	{
		get
		{
			return this._ACTOR_INFO_ID;
		}
		set
		{
			if ((this._ACTOR_INFO_ID != value))
			{
				this.OnACTOR_INFO_IDChanging(value);
				this.SendPropertyChanging();
				this._ACTOR_INFO_ID = value;
				this.SendPropertyChanged("ACTOR_INFO_ID");
				this.OnACTOR_INFO_IDChanged();
			}
		}
	}
	
	[Column(Storage="_ACTION_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ACTION_ID
	{
		get
		{
			return this._ACTION_ID;
		}
		set
		{
			if ((this._ACTION_ID != value))
			{
				this.OnACTION_IDChanging(value);
				this.SendPropertyChanging();
				this._ACTION_ID = value;
				this.SendPropertyChanged("ACTION_ID");
				this.OnACTION_IDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
