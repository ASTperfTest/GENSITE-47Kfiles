: @ codepage = 65001 
   response.expires = 0
htprogcap="ƽfz"
htprogfunc="s"
htuploadpath=session("public")+"data/"
htprogcode="gc1ap2"
htprogprefix="dsdxml" 
   CxMethod_ASP_server_1606199358()
   CxMethod_ASP_dbutil_10064021()
   CxMethod_ASP_htuigen_1591615763()
  
dim pkey
dim rsreg
dim formfunction
tasklable="s" & htprogcap
 cq=chr(34)
 ct=chr(9)
 cl="<" & "%"
 cr="%" & ">"

apath=server.mappath(htuploadpath) & "\"
'response.write apath
'response.end
set xup = server.createobject("updownexpress.fileupload")
xup.open 
function xupform(xvar)
on error resume next
 xstr = ""
 arrval = xup.multival(xvar)
 for i = 1 to ubound(arrval)
  xstr = xstr & arrval(i) & ", "
'  response.write arrval(i) & "<br>" & chr(13)
 next 
 if xstr = "" then
  xstr = xup(xvar)
  xupform = xstr
 else
  xupform = left(xstr, len(xstr)-2)
 end if
end function
'function xupform(xvar)
' xupform = request.form(xvar)
'end function

if request.querystring("s")="approve" then '----ssession("codexmlspec")
 sql = "select u.*,b.sbasetablename from cudtgeneric as n left join ctunit as u on u.ctunitid=n.ictunit" _
  & " left join basedsd as b on n.ibasedsd=b.ibasedsd" _
  & " where n.icuitem=" & request.querystring("icuitem")
 set rs = conn.execute(sql)
 session("ctunitid") = rs("ctunitid")
 session("ctunitname") = rs("ctunitname")
 session("ibasedsd") = rs("ibasedsd")
 session("fctunitonly") = rs("fctunitonly")
 if isnull(rs("sbasetablename")) then
  session("sbasetablename") = "cudtx" & session("ibasedsd")
 else
  session("sbasetablename") = rs("sbasetablename")
 end if 
 set htpagedom = server.createobject("microsoft.xmldom")
 htpagedom.async = false
 htpagedom.setproperty("serverhttprequest") = true  
     '----xctunitx???? xmlspecɮ(y䤣hdefault), efieldseqƨǧsjsession
    set fso = server.createobject("scripting.filesystemobject")
 filepath = server.mappath("/site/" & session("mysiteid") & "/gipdsd/ctunitx" & cstr(session("ctunitid")) & ".xml")  
     if fso.fileexists(filepath) then
      loadxml = server.mappath("/site/" & session("mysiteid") & "/gipdsd/ctunitx" & cstr(session("ctunitid")) & ".xml")
     else
      loadxml = server.mappath("/site/" & session("mysiteid") & "/gipdsd/cudtx" & session("ibasedsd") & ".xml")
     end if 
' response.write loadxml & "<hr>"
' response.end
 xv = htpagedom.load(loadxml)
' response.write xv & "<hr>"
   if htpagedom.parseerror.reason <> "" then 
      response.write("htpagedom parseerror on line " &  htpagedom.parseerror.line)
      response.write("<br>reasonxx: " &  htpagedom.parseerror.reason)
      response.end()
   end if  
     set root = htpagedom.selectsinglenode("dataschemadef")
     '----load xsl˪o
     set oxsl = server.createobject("microsoft.xmldom")
    oxsl.async = false
    xv = oxsl.load(server.mappath("/gipdsd/xmlspec/ctunitxorder.xsl"))      
     '----ƻsslavedstable,e̶ഫ
 set dsdnode = htpagedom.selectsinglenode("dataschemadef/dstable[tablename='"&session("sbasetablename")&"']").clonenode(true)    
     set dsdnodexml = server.createobject("microsoft.xmldom")
    dsdnodexml.appendchild dsdnode
     set nxml = server.createobject("microsoft.xmldom")
     nxml.loadxml(dsdnodexml.transformnode(oxsl))
     set nxmlnewnode = nxml.documentelement    
     dsdnode.replacechild nxmlnewnode,dsdnode.selectsinglenode("fieldlist")
     root.replacechild dsdnode,root.selectsinglenode("dstable[tablename='"&session("sbasetablename")&"']")
     '----ƻscudtgenericdstable,e̶ഫ
     set genericnode = htpagedom.selectsinglenode("dataschemadef/dstable[tablename='cudtgeneric']").clonenode(true)    
     set genericnodexml = server.createobject("microsoft.xmldom")
     genericnodexml.appendchild genericnode
    set nxml2 = server.createobject("microsoft.xmldom")
     nxml2.loadxml(genericnodexml.transformnode(oxsl))
     set nxmlnewnode2 = nxml2.documentelement    
     genericnode.replacechild nxmlnewnode2,genericnode.selectsinglenode("fieldlist")
     root.replacechild genericnode,root.selectsinglenode("dstable[tablename='cudtgeneric']")        


   set session("codexmlspec") = htpagedom
   '----vxfield
 set nxml0 = server.createobject("microsoft.xmldom")
 nxml0.loadxml(htpagedom.transformnode(oxsl))
 set session("codexmlspec2") = nxml0 
'response.write "hello"
'response.end
end if

   set htpagedom = session("codexmlspec")
 set allmodel2 = session("codexmlspec2").documentelement   
 for each param in allmodel2.selectnodes("//fieldlist/field[showtypestr='3' or showtypestr='4']") 
  set romovenode=allmodel2.selectsinglenode("field[fieldname='"+param.selectsinglenode("fieldname").text+"']")
  allmodel2.removechild romovenode
 next       
   set refmodel = htpagedom.selectsinglenode("//dstable")
   set allmodel = htpagedom.selectsinglenode("//dataschemadef")

if xupform("submittask") = "update" then

 errmsg = ""
 checkdbvalid()
 if errmsg <> "" then
  editinbothcase()
 else
  doupdatedb()
  showdonebox("ƨs\i")
 end if

elseif xupform("submittask") = "delete" then
 sql = "delete from cudtgeneric where icuitem=" & pkstr(request.querystring("icuitem"),"")
 conn.execute sql

 sql = "delete from " & nulltext(refmodel.selectsinglenode("tablename")) _
  & " where gicuitem=" & pkstr(request.querystring("icuitem"),"")
 conn.execute sql
 showdonebox("ƨr\i")

else
 editinbothcase()
end if


sub editinbothcase
 sqlcom = "select htx.*, ghtx.* from " & nulltext(refmodel.selectsinglenode("tablename")) _
  & " as htx join cudtgeneric as ghtx on ghtx.icuitem=htx.gicuitem "_
  & " where ghtx.icuitem=" & pkstr(request.querystring("icuitem"),"")
 xfrom = nulltext(refmodel.selectsinglenode("tablename")) 
 set rsreg = conn.execute(sqlcom)
 pkey = "icuitem=" & rsreg("icuitem")


 showhtmlhead()
 if errmsg <> "" then showerrbox()
 formfunction = "edit"
' response.write sqlcom
 showform()
 initform()
 showhtmltail()
end sub


function qqrs(fldname)
 if request("submittask")="" then
  xvalue = rsreg(fldname)
 else
  xvalue = ""
  if request("htx_"&fldname) <> "" then
   xvalue = request("htx_"&fldname)
  end if
 end if
 if isnull(xvalue) or xvalue = "" then
  qqrs = ""
 else
  xqqrs = replace(xvalue,chr(34),chr(34)&"&chr(34)&"&chr(34))
  xqqrs = replace(xqqrs,vbcrlf,chr(34)&"&vbcrlf&"&chr(34))
  qqrs = replace(xqqrs,chr(10),chr(34)&"&vbcrlf&"&chr(34))
 end if
end function 

  sub initform() 


















  
 for each param in allmodel2.selectnodes("//fieldlist/field[formlist!='']") 
  editprocessinit param
 next




































































                                          =htuploadpath






























































































































































                =session("mysiteurl")

































           =session("mysiteurl")














            =session("mysiteurl")





  end sub '---- initform() ----


  sub showform()   '===================== client side validation put here =========== 



















  
 for each param in allmodel2.selectnodes("//fieldlist/field[formlist!='' and inputtype!='hidden']") 
  processvalid param
 next
















   CxMethod_ASP_dsdxmlforme_1288510619()

  end sub '--- showform() ------

  sub showhtmlhead() 




                                    =htprogprefix






                            =htprogcap
                     =htprogfunc














  end sub '--- showhtmlhead() ------


  sub showhtmltail() 





  end sub '--- showhtmltail() ------


  sub showerrbox() 

              =errmsg


  
    end sub '---- showerrbox() ----

sub checkdbvalid() '===================== server side validation put here =================

'---- ݸˬd{xbo apuҡaɳ] errmsg="xxx"  exit sub ------
' if request("tfx_taxid") <> "" then
'   sql = "select * from client where taxid = n'"& request("tfx_taxid") &"'"
'   set rsreg = conn.execute(sql)
'   if not rsreg.eof then
'  if trim(rsreg("clientid")) <> request("pfx_clientid") then
'   errmsg = "uτ@sv!!эsjȤτ@s!"
'   exit sub
'  end if
'   end if
' end if

end sub '---- checkdbvalid() ----

function d6date(dt)     'ন~  999/99/99 ƫasmalldatetime ϥ
 if len(dt)=0 or isnull(dt) then
      d6date=""
 else
                      xy=right("000"+ cstr((year(dt)-1911)),2)     'ɹs
                      xm=right("00"+ cstr(month(dt)),2)
                      xd=right("00"+ cstr(day(dt)),2)
                      d6date=xy &  xm &  xd
                  end if
end function

sub doupdatedb()
 xn = 0
 sql = "update " & nulltext(refmodel.selectsinglenode("tablename")) & " set "
 for each param in refmodel.selectnodes("fieldlist/field[formlist!='']") 
  processupdate param
  xn = xn + 1
 next
 sql = left(sql,len(sql)-1) & " where gicuitem=" & pkstr(request.querystring("icuitem"),"")
' response.write sql & "<hr>"
' response.end

 if xn>0 then conn.execute(sql)  
 
 sql = "update cudtgeneric set "
 for each param in allmodel.selectnodes("dstable[tablename='cudtgeneric']/fieldlist/field[formlist!='' and identity!='y']") 
  if nulltext(param.selectsinglenode("fieldname")) = "ximportant" _
     and xupform("xxcheckimportant")="y" then
   sql = sql & "ximportant=" & pkstr(d6date(date()),",")
  else
   processupdate param
  end if
 next
 sql = left(sql,len(sql)-1) & " where icuitem=" & pkstr(request.querystring("icuitem"),"")
' response.write sql & "<hr>"
' response.end
 conn.execute(sql)  
 '----rbz
 '----r
 sqldelete="delete cudtkeyword where icuitem=" & pkstr(request.querystring("icuitem"),"")
 conn.execute(sqldelete)
 '----asw
 if xupform("htx_xkeyword")<>"" then
     redim iarray(1,0)
     xstr=""
     xreturnvalue=""
     sqlinsert=""
     xkeywordarray=split(xupform("htx_xkeyword"),",")
     weightsum=0
     for i=0 to ubound(xkeywordarray)
      redim preserve iarray(1,i)
  '----}rpvÿ
  xpos=instr(xkeywordarray(i),"*")
  if xpos<>0 then
   xstr=left(trim(xkeywordarray(i)),xpos-1)
   iarray(0,i)=xstr
   iarray(1,i)=mid(xkeywordarray(i),xpos+1)
  else
   xstr=trim(xkeywordarray(i))
   iarray(0,i)=xstr
   iarray(1,i)=1  
  end if 
  weightsum=weightsum+iarray(1,i)
     next   
     '----sqlr 
     for k=0 to ubound(iarray,2)
      sqlinsert=sqlinsert+"insert into cudtkeyword values("+dfn(request.querystring("icuitem"))+"'"+iarray(0,k)+"',"+cstr(round(iarray(1,k)*100/weightsum))+");"
     next
     if sqlinsert<>"" then conn.execute(sqlinsert)
 end if  
end sub '---- doupdatedb() ----

  sub showdonebox(lmsg) 




                                    =htprogprefix




                 =lmsg
                               =htprogprefix:            =session("querypage_no")



  end sub '---- showdonebox() ----  