: @ codepage = 65001 
   response.expires = 0
htprogcap="單元資料定義"
htprogfunc="欄位資料匯入(由db欄位匯入)"
htprogcode="ge1t01"
htprogprefix="basedsd" 
' ============= modified by chris, 2006/08/24, 修正 unicode版 ========================'
'  document: 950822_智庫gip擴充.doc (修正unicode版對nvarchar等不work)
'  modified list:
' 加 if lcase(left(xodatatype,1))="n" then xodatatype = mid(xodatatype,2)
' sub showdonebox     document.location.href= "basedsdeditlist.asp? ..." 加上 phase=edit&"

   CxMethod_ASP_server_1606199358()
   CxMethod_ASP_dbutil_10064021()
  
dim mpkey, dpkey
dim rsmaster, rslist
dim deleteflag

 sqlcom = "select * from basedsd where ibasedsd=" & pkstr(request.querystring("ibasedsd"),"")
 set rsmaster = conn.execute(sqlcom)
 mpkey = ""
 mpkey = mpkey & "&ibasedsd=" & rsmaster("ibasedsd")
 if mpkey<>"" then  mpkey = mid(mpkey,2)


if request("submittask") = "import" then 
 errmsg = ""
 checkdbvalid()
 if errmsg <> "" then
  editinbothcase()
 else
  doupdatedb()
  showdonebox("已匯入資料表欄位資料; 回單元資料定義編修畫面後, 請將欄位標題改為中文！")
 end if
else

 deleteflag=false
 sqldeletecheck="select * from basedsdfield where ibasedsd=" & pkstr(request.querystring("ibasedsd"),"")
 set rsdeletecheck=conn.execute(sqldeletecheck)
 if rsdeletecheck.eof then deleteflag=true
end if













                                                     =htprogcap:                       =htprogfunc































     sql="select mcode,mvalue from codemain where msortvalue is not null and codemetaid='refdsdcat' order by msortvalue"
   set rss=conn.execute(sql)
   while not rss.eof

                    =rss(0):     =rss(1)
      rss.movenext
   wend







     sql="select mcode,mvalue from codemain where msortvalue is not null and codemetaid='boolyn' order by msortvalue"
   set rss=conn.execute(sql)
   while not rss.eof

                    =rss(0):     =rss(1)
      rss.movenext
   wend









          if (htprogright and 4) <> 0 and deleteflag then 

         end if 





















  
function qqrs(fldname)
 xvalue = rsmaster(fldname)
 if isnull(xvalue) or xvalue = "" then
  qqrs = ""
 else
  xqqrs = replace(xvalue,chr(34),chr(34)&"&chr(34)&"&chr(34))
  qqrs = replace(xqqrs,vbcrlf,chr(34)&"&vbcrlf&"&chr(34))
 end if
end function 








                                =qqrs("sbasedsdname")
                                  =qqrs("sbasetablename")
                            =qqrs("ibasedsd")
                         =qqrs("tdesc")
                           =qqrs("rdsdcat")
                         =qqrs("inuse")













  sub showerrbox() 

              =errmsg


  
    end sub '---- showerrbox() ----

sub checkdbvalid() '===================== server side validation put here =================

'---- 後端資料驗證檢查程式碼放在這裡 ，如下例，有錯時設 errmsg="xxx" 並 exit sub ------
' if request("tfx_taxid") <> "" then
'   sql = "select * from client where taxid = '"& request("tfx_taxid") &"'"
'   set rsreg = conn.execute(sql)
'   if not rsreg.eof then
'  if trim(rsreg("clientid")) <> request("pfx_clientid") then
'   errmsg = "「統一編號」重複!!請重新輸入客戶統一編號!"
'   exit sub
'  end if
'   end if
' end if

end sub '---- checkdbvalid() ----

sub doupdatedb()
 fsql = "sp_pkeys " & pkstr(rsmaster("sbasetablename"),"")
 set rslist = conn.execute(fsql)
 rspkeys = ""
 while not rslist.eof
  rspkeys = rspkeys & pkstr(rslist("column_name"),",")
  rslist.movenext
 wend

 fsql = "sp_columns " & pkstr(rsmaster("sbasetablename"),"")
 set rslist = conn.execute(fsql)
 xseq = 500
 while not rslist.eof
  xseq = xseq + 10
  xdatatype = ""
  xinputtype = "textbox"
  xidentity = "n"
  xodatatype = rslist("type_name")
  if lcase(left(xodatatype,1))="n" then xodatatype = mid(xodatatype,2)
  xpos = instr(xodatatype, " identity")
  if xpos > 0 then
   xodatatype = left(xodatatype,xpos-1)
   xidentity = "y"
   xinputtype = "hidden"
  end if
  rsql = "select mcode from codemain where codemetaid='htddatatype' and mvalue = " & pkstr(xodatatype,"")
  response.write rsql & "<hr>"
  set rsr = conn.execute(rsql)
  if not rsr.eof then  xdatatype = rsr("mcode")
  xisprimarykey = "n"
  if instr(rspkeys, pkstr(rslist("column_name"),",")) > 0 then xisprimarykey = "y"
  xdefaultvalue = rslist("column_def")
  xsql = "insert into basedsdfield(ibasedsd, xfieldname, xfieldseq, xfieldlabel, xdatatype, xdatalen, " _
   & "xcannull, xisprimarykey, xidentity, xinputtype"
  xvalue = ") values(" _
   & dfn(request.querystring("ibasedsd")) _
   & dfs(rslist("column_name")) _
   & dfn(xseq) _
   & dfs(rslist("column_name")) _
   & dfs(xdatatype) _
   & dfs(rslist("length")) _
   & dfs(mid(rslist("is_nullable"),1,1)) _
   & dfs(xisprimarykey) _
   & dfs(xidentity) _
   & dfs(xinputtype) 
  if rslist("column_def") <> "" then
   xsql = xsql & ", xdefaultvalue"
   xvalue = xvalue & rslist("column_def") & ","
  end if
  xsql = xsql & left(xvalue,len(xvalue)-1) & ")"
  response.write xsql & "<hr>"
  conn.execute xsql
      rslist.movenext
    wend

end sub '---- doupdatedb() ----

  sub showdonebox(lmsg) 




                                    =htprogprefix




                 =lmsg
                                                    =mpkey



  end sub '---- showdonebox() ---- 
  
 fsql = "sp_pkeys " & pkstr(rsmaster("sbasetablename"),"")
 set rslist = conn.execute(fsql)
 rspkeys = ""
 while not rslist.eof
  rspkeys = rspkeys & pkstr(rslist("column_name"),",")
  rslist.movenext
 wend

 fsql = "sp_columns " & pkstr(rsmaster("sbasetablename"),"")
 set rslist = conn.execute(fsql)











  
 while not rslist.eof
  dpkey = ""
'  dpkey = dpkey & "&entityid=" & rslist("entityid")
  if dpkey<>"" then  dpkey = mid(dpkey,2)


  =rslist("column_name")


  =rslist("column_name")


  =rslist("type_name")


  =rslist("length")


  
 if instr(rspkeys, pkstr(rslist("column_name"),",")) > 0 then
  response.write "y"
 end if



  =rslist("is_nullable")


      
         rslist.movenext
     wend
    