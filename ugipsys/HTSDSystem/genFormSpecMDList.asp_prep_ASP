:  response.expires = 0
htprogcode="ht011"
htprogprefix="htdfield" 
   CxMethod_ASP_server_1606199358()
   CxMethod_ASP_xdbutil_1468464061()
  
 xmlfile = request.form("xmlfile")
 formspecfile = request.form("formspecfile")

 set oxml = server.createobject("microsoft.xmldom")
 oxml.async = false
 oxml.setproperty("serverhttprequest") = true
 loadxml = server.mappath("/htsdsystem/usecase/" & xmlfile & ".xml")
 xv = oxml.load(loadxml)
  if oxml.parseerror.reason <> "" then
    response.write("xml parseerror on line " &  oxml.parseerror.line)
    response.write("<br>reason: " &  oxml.parseerror.reason)
    response.end()
  end if
 
 set nxml = server.createobject("microsoft.xmldom")
 nxml.async = false
 nxml.setproperty "serverhttprequest", true
 loadxml = server.mappath("/htsdsystem/formspecmdlist0.xml")
 xv = nxml.load(loadxml)
  if nxml.parseerror.reason <> "" then
    response.write("xml parseerror on line " &  nxml.parseerror.line)
    response.write("<br>reason: " &  nxml.parseerror.reason)
  end if

 progprefix = mid(xmlfile,5)
 if lcase(right(progprefix,4)) = "list" then
  progprefix = left(progprefix,len(progprefix)-4)
 elseif lcase(right(progprefix,8)) = "editlist" then
  progprefix = left(progprefix,len(progprefix)-8)
 end if
 nxml.selectsinglenode("htpage/htprogprefix").text = progprefix
 nxml.selectsinglenode("htpage/htprogcode").text = nulltext(oxml.selectsinglenode("operationcontract/code"))
 progpath = nulltext(oxml.selectsinglenode("operationcontract/htcodepath"))
 nxml.selectsinglenode("htpage/htprogpath").text = nulltext(oxml.selectsinglenode("operationcontract/htcodepath"))
 nxml.selectsinglenode("htpage/htgenpattern").text = nulltext(oxml.selectsinglenode("operationcontract/htpattern"))

 set xdetailnode = nxml.selectsinglenode("//detailrow")
 joincount = 0
 for each ex in request.form
'  response.write ex & "==>" & request.form(ex) & "<br>"
  if right(ex,12) = "_pickedfield" then
   xtable = left(ex, len(ex)-12)
   response.write xtable & "<hr>"
   set xtablenode = nxml.selectsinglenode("//formmodel/fieldlist").clonenode(true)
   xtablenode.selectsinglenode("tablename").text = xtable
   if request("mastertable") = xtable then
    set nformspec = nxml.createelement("mastertable")
    nformspec.text = "y"
    xtablenode.insertbefore nformspec, xtablenode.selectsinglenode("field")
    tbprefix = "htx."
   elseif request("detailtable") = xtable then
    nxml.selectsinglenode("//detailrow/detailref").text = xtable
    tbprefix = "dhtx."
    set nformspec = nxml.selectsinglenode("//formmodel/fklink").clonenode(true)
    nformspec.selectsinglenode("asalias").text = "dhtx"
    xtablenode.insertbefore nformspec, xtablenode.selectsinglenode("field")
   else
    joincount = joincount + 1
    tbprefix = "htj" & joincount & "."
    set nformspec = nxml.selectsinglenode("//formmodel/fklink").clonenode(true)
    nformspec.selectsinglenode("asalias").text = "htj" & joincount
    xtablenode.insertbefore nformspec, xtablenode.selectsinglenode("field")
   end if

   set fxml = server.createobject("microsoft.xmldom")
   fxml.async = false
   fxml.setproperty "serverhttprequest", true
   loadxml = server.mappath("/htsdsystem/xmlspec/" & xtable & ".xml")
   xv = fxml.load(loadxml)
     if fxml.parseerror.reason <> "" then
       response.write(xtable & ".xml parseerror on line " &  fxml.parseerror.line)
       response.write("<br>reason: " &  fxml.parseerror.reason)
       response.end()
     end if

   xfldarray = split(request(ex),", ")
   for xfi = 0 to ubound(xfldarray)
    response.write "--" & xfldarray(xfi) & "<br>"
'    set xfieldnode = nxml.selectsinglenode("//formmodel/fieldlist/field").clonenode(true)
'    xfieldnode.selectsinglenode("fieldname").text = xfldarray(xfi)
    set xfieldnode = fxml.selectsinglenode( _
     "//dstable[tablename='" & xtable & "']/fieldlist/field[fieldname='" & xfldarray(xfi) & "']")
    xtablenode.appendchild xfieldnode
    if request("mastertable") <> xtable then
     set xcolnode = nxml.selectsinglenode("//detailrow/colspec").clonenode(true)
     xcolnode.selectsinglenode("collabel").text = xfieldnode.selectsinglenode("fieldlabel").text
     xcolnode.selectsinglenode("content/reffield").text = xtable & "/" & xfldarray(xfi)
     xdetailnode.appendchild xcolnode
    end if
   next

   xtablenode.removechild xtablenode.selectsinglenode("field")

   for each xpk in fxml.selectnodes("//dstable[tablename='" & xtable & "']/fieldlist/field[isprimarykey='y']")
    if nulltext(xtablenode.selectsinglenode("field[fieldname='" _
     & xpk.selectsinglenode("fieldname").text & "']")) = "" then
     xtablenode.appendchild xpk
    end if
   next
   
   nxml.selectsinglenode("//formmodel").insertbefore _
    xtablenode, nxml.selectsinglenode("//formmodel/anchorlist")
  end if
 next
 nxml.selectsinglenode("//formmodel").removechild nxml.selectsinglenode("//formmodel/fieldlist")
 nxml.selectsinglenode("//formmodel").removechild nxml.selectsinglenode("//formmodel/fklink")
 nxml.selectsinglenode("//detailrow").removechild nxml.selectsinglenode("//detailrow/colspec")
 
 nxml.selectsinglenode("//htform/formmodel").setattribute "id", mid(xmlfile,5)
 nxml.selectsinglenode("//pagespec/formui").setattribute "ref", mid(xmlfile,5)
 nxml.selectsinglenode("//pagespec/pagehead").text = request("pagehead")
 nxml.selectsinglenode("//pagespec/pagefunction").text = request("pagefunction")
 nxml.selectsinglenode("//pagespec/formui/masterref").text = request("mastertable")
 
 set xov1anchorlist = oxml.selectsinglenode("//anchorlist")
 set nxanchorlist = nxml.selectsinglenode("//aidlinklist")
 for each xanchor in xov1anchorlist.selectnodes("anchor")
  response.write xanchor.selectsinglenode("anchorlabel").text & "<hr>"
  if left(xanchor.selectsinglenode("anchortype").text,4) <> "link" then  
   nxanchorlist.appendchild xanchor.clonenode(true)
  end if
 next

 set pxml = nxml.selectsinglenode("//pxhtml/center/table")
 set xtr = pxml.selectsinglenode("tr")
 set xfont = xtr.selectsinglenode("td[@class='etablelable']/font")
 for each xflist in nxml.selectnodes("//formmodel/fieldlist[mastertable='y']")
  xb = nulltext(xflist.selectsinglenode("tablename"))
  for each xf in xflist.selectnodes("field[inputtype!='hidden']")
   processfield xf
  next
 next
 pxml.removechild xtr
 set xtr = pxml.selectsinglenode("tr/td[@class='etablecontent']")
 for each xflist in nxml.selectnodes("//formmodel/fieldlist[mastertable='y']")
  xb = nulltext(xflist.selectsinglenode("tablename"))
  for each xf in xflist.selectnodes("field[inputtype='hidden']")
   set xntf = xtr.selectsinglenode("reffield").clonenode(true)
   xntf.text = xb & "/" & xf.selectsinglenode("fieldname").text
   xtr.appendchild xntf
  next
 next

sub processfield(xfobj)
 set xntr = xtr.clonenode(true)
 set xntd = xntr.selectsinglenode("td[@class='etablelable']")
 
 xntd.text = nulltext(xfobj.selectsinglenode("fieldlabel")) & "："
 if nulltext(xfobj.selectsinglenode("cannull")) = "n" then _
  xntd.insertbefore xfont.clonenode(true), xntd.childnodes.item(0)
 xntr.selectsinglenode("//reffield").text = xb& "/" & xfobj.selectsinglenode("fieldname").text
 pxml.appendchild xntr
end sub

 nxml.save(server.mappath("/htsdsystem/ht2codegen/formspec" & progpath & "/" & formspecfile & ".xml"))

 set nformspec = oxml.createelement("formspec")
 nformspec.text = formspecfile
 oxml.selectsinglenode("operationcontract").insertbefore nformspec, oxml.selectsinglenode("operationcontract/htpattern")
 oxml.save server.mappath("/htsdsystem/usecase/" & xmlfile & ".xml")

 response.redirect "viewcontract.asp?xmlfile=" & xmlfile & ".xml"


function nulltext(xnode)
  on error resume next
  xstr = ""
  xstr = xnode.text
  nulltext = xstr
end function

 