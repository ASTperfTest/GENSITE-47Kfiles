: 
 apcode = request.querystring("apcode")
 version = session("verdate")
 xid = request.querystring("id")
 xmlfile = request.querystring("xmlfile")
 
 response.write apcode & "<hr>"
 response.write version & "<hr>"
 response.write xid & "<hr>"
 response.end

 set oxml = server.createobject("microsoft.xmldom")
 oxml.async = false
 oxml.setproperty("serverhttprequest") = true
 loadxml = server.mappath("/htsdsystem/usecase/" & apcode & ".xml")
 xv = oxml.load(loadxml)
  if oxml.parseerror.reason <> "" then
    response.write("xml parseerror on line " &  oxml.parseerror.line)
    response.write("<br>reason: " &  oxml.parseerror.reason)
    response.end()
  end if

 set vo = oxml.selectsinglenode("usecase/version[date='" & date() & "']")
  if nulltext(vo) <> "" then
   response.write "version already exist"
 response.end
  end if

 set fxml = server.createobject("microsoft.xmldom")
 fxml.async = false
 fxml.setproperty "serverhttprequest", true
 loadxml = server.mappath("/htsdsystem/expanded0.xml")
 xv = fxml.load(loadxml)
  if fxml.parseerror.reason <> "" then
    response.write("xml parseerror on line " &  fxml.parseerror.line)
    response.write("<br>reason: " &  fxml.parseerror.reason)
    response.end()
  end if

function nulltext(xnode)
  on error resume next
  xstr = ""
  xstr = xnode.text
  nulltext = xstr
end function

 set xfieldnode = fxml.selectsinglenode("expandedusecase/version").clonenode(true)
 
 xfieldnode.selectsinglenode("date").text = date()
 xfieldnode.selectsinglenode("author").text = session("userid")
 
 oxml.selectsinglenode("usecase").insertbefore xfieldnode, oxml.selectsinglenode("usecase/version")
' response.write oxml.xml
 oxml.save server.mappath("/htsdsystem/usecase/" & apcode & ".xml")
 response.redirect "ucversion.asp?apcode=" & apcode



 
 