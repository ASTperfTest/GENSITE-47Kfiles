: @ codepage = 65001 
  
 'response.cachecontrol = "no-cache" 
 'response.addheader "pragma", "no-cache" 
 response.expires = -1


   CxMethod_ASP_dbfunc_874801204()
   CxMethod_ASP_web_sqlinjection_176928617()
   CxMethod_ASP_checkurl_1283041507()


  
 call checkurl(request.querystring)
 mp = getmpvalue() 
 
 qstr = request.querystring
 if instr(qstr, "mp=") = 0 then qstr = qstr & "&mp=" & mp

 for each xf in request.form
  if pkstrwithsripthtml( request(xf), "" ) <> "null" then 
   qstr = qstr & "&" & xf & "=" & server.urlencode( striphtml( request.form(xf) ) )
  end if
 next
 
 if left(qstr,1) = "&" then qstr = mid(qstr,2)
 
 call spsqlinjectioncheck()

 memid = session("memid")
 gstyle = session("gstyle")
 
 set oxml = server.createobject("microsoft.xmldom")
 oxml.async = false
 oxml.setproperty("serverhttprequest") = true 
 set oxsl = server.createobject("microsoft.xmldom")

 xv = oxml.load(session("myxdurl") & "/wsxd2/xdsp.asp?" & qstr & "&memid=" & memid & "&gstyle=" & gstyle)

  if oxml.parseerror.reason <> "" then 
    response.write("xhtpagedom parseerror on line " &  oxml.parseerror.line)
    response.write("<br>reason: " &  oxml.parseerror.reason)
    response.end()
  end if

  xmystyle = nulltext(oxml.selectsinglenode("//hpmain/mystyle"))
 if xmystyle = "" then xmystyle = session("mystyle")  

 oxsl.load(server.mappath("xslgip/" & xmystyle & "/tp.xsl")) 
 response.contenttype = "text/html" 
 outstring = replace(oxml.transformnode(oxsl),"<meta http-equiv=""content-type"" content=""text/html; charset=utf-8"">","")
 response.write replace(outstring,"&amp;","&")

 function nulltext(xnode)
   on error resume next
   xstr = ""
   xstr = xnode.text
   nulltext = xstr
 end function
 